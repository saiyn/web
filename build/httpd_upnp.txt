; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\build\httpd_upnp.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\httpd_upnp.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I.\FreeRTOS\include -I.\inc -I.\startup -I.\driverlib -I.\Application -I.\FreeRTOS\portable -I.\Task -I.\Driver -I.\web -I.\third_party\lwip-1.4.1\src\include -I.\third_party\fatfs -I.\third_party\lwip-1.4.1\apps\httpserver_raw -I.\third_party\lwip-1.4.1\ports\tiva-tm4c129\include -I.\third_party\lwip-1.4.1\ports\tiva-tm4c129\include\arch -I.\third_party\lwip-1.4.1\src\include\ipv4 -I..\MCU -I.\third_party\lwip-1.4.1\apps -I.\third_party -I.\Upnp -I.\Dsp -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\TI\TM4C129 -Drvmdk -DPART_TM4C129XNCZAD -DRTOS_FREERTOS -DTARGET_IS_SNOWFLAKE_RA0 -DUSE_LWIP -DTM4C129ENCPDT --omf_browse=.\build\httpd_upnp.crf Upnp\httpd_upnp.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _scanf_int
                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_sizespec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_x
                          REQUIRE _printf_longlong_hex
                  HttpdResponseHdr PROC
;;;43     
;;;44     const char * HttpdResponseHdr(void){ 
000000  48fa              LDR      r0,|L1.1004|
;;;45       return http_response;
000002  6800              LDR      r0,[r0,#0]  ; http_response
;;;46     }
000004  4770              BX       lr
;;;47     const char * HttpdPreamble(void){ 
                          ENDP

                  HttpdPreamble PROC
000006  48fa              LDR      r0,|L1.1008|
;;;48       return http_preamble;
000008  6800              LDR      r0,[r0,#0]  ; http_preamble
;;;49     }
00000a  4770              BX       lr
;;;50     
                          ENDP

                  word_eq PROC
;;;125     */
;;;126    static int word_eq(char *s1, char *s2)
00000c  e92d47f0          PUSH     {r4-r10,lr}
;;;127    {
000010  4606              MOV      r6,r0
000012  460f              MOV      r7,r1
;;;128      int c1;
;;;129      int c2;
;;;130      int end1 = 0;
000014  f04f0800          MOV      r8,#0
;;;131      int end2 = 0;
000018  46c1              MOV      r9,r8
;;;132      for (;;) {
00001a  bf00              NOP      
                  |L1.28|
;;;133        c1 = *s1++;
00001c  f8164b01          LDRB     r4,[r6],#1
;;;134        c2 = *s2++;
000020  f8175b01          LDRB     r5,[r7],#1
;;;135        if (isalpha(c1) && isupper(c1))
000024  f7fffffe          BL       __rt_ctype_table
000028  6800              LDR      r0,[r0,#0]
00002a  5d00              LDRB     r0,[r0,r4]
00002c  f0100f98          TST      r0,#0x98
000030  d00a              BEQ      |L1.72|
000032  f7fffffe          BL       __rt_ctype_table
000036  6800              LDR      r0,[r0,#0]
000038  5d00              LDRB     r0,[r0,r4]
00003a  f0100f10          TST      r0,#0x10
00003e  d003              BEQ      |L1.72|
;;;136          c1 = tolower(c1);
000040  4620              MOV      r0,r4
000042  f7fffffe          BL       tolower
000046  4604              MOV      r4,r0
                  |L1.72|
;;;137        if (isalpha(c2) && isupper(c2))
000048  f7fffffe          BL       __rt_ctype_table
00004c  6800              LDR      r0,[r0,#0]
00004e  5d40              LDRB     r0,[r0,r5]
000050  f0100f98          TST      r0,#0x98
000054  d00a              BEQ      |L1.108|
000056  f7fffffe          BL       __rt_ctype_table
00005a  6800              LDR      r0,[r0,#0]
00005c  5d40              LDRB     r0,[r0,r5]
00005e  f0100f10          TST      r0,#0x10
000062  d003              BEQ      |L1.108|
;;;138          c2 = tolower(c2);
000064  4628              MOV      r0,r5
000066  f7fffffe          BL       tolower
00006a  4605              MOV      r5,r0
                  |L1.108|
;;;139        end1 = !isgraph(c1);
00006c  f7fffffe          BL       __rt_ctype_table
000070  6800              LDR      r0,[r0,#0]
000072  5d00              LDRB     r0,[r0,r4]
000074  f0100fba          TST      r0,#0xba
000078  d101              BNE      |L1.126|
00007a  2001              MOVS     r0,#1
00007c  e000              B        |L1.128|
                  |L1.126|
00007e  2000              MOVS     r0,#0
                  |L1.128|
000080  4680              MOV      r8,r0
;;;140        end2 = !isgraph(c2);
000082  f7fffffe          BL       __rt_ctype_table
000086  6800              LDR      r0,[r0,#0]
000088  5d40              LDRB     r0,[r0,r5]
00008a  f0100fba          TST      r0,#0xba
00008e  d101              BNE      |L1.148|
000090  2001              MOVS     r0,#1
000092  e000              B        |L1.150|
                  |L1.148|
000094  2000              MOVS     r0,#0
                  |L1.150|
000096  4681              MOV      r9,r0
;;;141        if (end1 || end2 || c1 != c2)
000098  f1b80f00          CMP      r8,#0
00009c  d104              BNE      |L1.168|
00009e  f1b90f00          CMP      r9,#0
0000a2  d101              BNE      |L1.168|
0000a4  42ac              CMP      r4,r5
0000a6  d0b9              BEQ      |L1.28|
                  |L1.168|
;;;142          break;
0000a8  bf00              NOP      
0000aa  bf00              NOP      
;;;143      }
;;;144      return end1 && end2;  /* reached end of both words? */
0000ac  f1b80f00          CMP      r8,#0
0000b0  d005              BEQ      |L1.190|
0000b2  f1b90f00          CMP      r9,#0
0000b6  d002              BEQ      |L1.190|
0000b8  2001              MOVS     r0,#1
                  |L1.186|
;;;145    }
0000ba  e8bd87f0          POP      {r4-r10,pc}
                  |L1.190|
0000be  2000              MOVS     r0,#0                 ;144
0000c0  e7fb              B        |L1.186|
;;;146    /* Get Parameters string */
                          ENDP

                  HttpdReadHdrAnalyze PROC
;;;51     
;;;52     HTTP_HDR_TYPE  HttpdReadHdrAnalyze(char ** buff, char ** uri, size_t *uri_len)
0000c2  e92d47f0          PUSH     {r4-r10,lr}
;;;53     {
0000c6  4607              MOV      r7,r0
0000c8  460d              MOV      r5,r1
0000ca  4690              MOV      r8,r2
;;;54       HTTP_HDR_TYPE hdr_type = HTTPREAD_HDR_TYPE_UNKNOWN;
0000cc  f04f0900          MOV      r9,#0
;;;55       char * hbp = *buff;
0000d0  683c              LDR      r4,[r7,#0]
;;;56       * uri = NULL;
0000d2  2000              MOVS     r0,#0
0000d4  6028              STR      r0,[r5,#0]
;;;57       /* First line is special */
;;;58       if (!isgraph(*hbp))
0000d6  f7fffffe          BL       __rt_ctype_table
0000da  6800              LDR      r0,[r0,#0]
0000dc  7821              LDRB     r1,[r4,#0]
0000de  5c40              LDRB     r0,[r0,r1]
0000e0  f0100fba          TST      r0,#0xba
0000e4  d102              BNE      |L1.236|
;;;59         return HTTPREAD_HDR_TYPE_UNKNOWN;
0000e6  2000              MOVS     r0,#0
                  |L1.232|
;;;60       if (strncmp(hbp, "HTTP/", strlen("HTTP/")) == 0) {
;;;61         hdr_type = HTTPREAD_HDR_TYPE_REPLY;
;;;62         hbp += 5;
;;;63         while (isgraph(*hbp))
;;;64           hbp++;
;;;65         while (*hbp == ' ' || *hbp == '\t')
;;;66           hbp++;
;;;67         if (!isdigit(*hbp))
;;;68          return HTTPREAD_HDR_TYPE_UNKNOWN;
;;;69         if((HTTP_REPLY_CODE)atol(hbp) != HTTP_OK)
;;;70           return HTTPREAD_HDR_TYPE_UNKNOWN;    
;;;71       } else if (word_eq(hbp, "GET"))
;;;72         hdr_type = HTTPREAD_HDR_TYPE_GET;
;;;73       else if (word_eq(hbp, "HEAD"))
;;;74         hdr_type = HTTPREAD_HDR_TYPE_HEAD;
;;;75       else if (word_eq(hbp, "POST"))
;;;76         hdr_type = HTTPREAD_HDR_TYPE_POST;
;;;77       else if (word_eq(hbp, "PUT"))
;;;78         hdr_type = HTTPREAD_HDR_TYPE_PUT;
;;;79       else if (word_eq(hbp, "DELETE"))
;;;80         hdr_type = HTTPREAD_HDR_TYPE_DELETE;
;;;81       else if (word_eq(hbp, "TRACE"))
;;;82         hdr_type = HTTPREAD_HDR_TYPE_TRACE;
;;;83       else if (word_eq(hbp, "CONNECT"))
;;;84         hdr_type = HTTPREAD_HDR_TYPE_CONNECT;
;;;85       else if (word_eq(hbp, "NOTIFY"))
;;;86         hdr_type = HTTPREAD_HDR_TYPE_NOTIFY;
;;;87       else if (word_eq(hbp, "M-SEARCH"))
;;;88         hdr_type = HTTPREAD_HDR_TYPE_M_SEARCH;
;;;89       else if (word_eq(hbp, "M-POST"))
;;;90         hdr_type = HTTPREAD_HDR_TYPE_M_POST;
;;;91       else if (word_eq(hbp, "SUBSCRIBE"))
;;;92         hdr_type = HTTPREAD_HDR_TYPE_SUBSCRIBE;
;;;93       else if (word_eq(hbp, "UNSUBSCRIBE"))
;;;94         hdr_type = HTTPREAD_HDR_TYPE_UNSUBSCRIBE;
;;;95       else {
;;;96       }
;;;97       /* skip type */
;;;98       while (isgraph(*hbp))
;;;99         hbp++;
;;;100      while (*hbp == ' ' || *hbp == '\t')
;;;101        hbp++;
;;;102        /* parse uri.
;;;103         * Find length, allocate memory for translated
;;;104         * copy, then translate by changing %<hex><hex>
;;;105         * into represented value.
;;;106         */
;;;107       hbp = strchr(hbp,'/');
;;;108       if(!hbp)  return HTTPREAD_HDR_TYPE_UNKNOWN;
;;;109       hbp++;
;;;110    
;;;111      *uri = hbp;
;;;112      char *ptr_uri = strchr(hbp,' ');
;;;113      if(ptr_uri==NULL){
;;;114        *uri = NULL;
;;;115        *uri_len = 0;
;;;116        return HTTPREAD_HDR_TYPE_UNKNOWN;
;;;117      }
;;;118      *uri_len =ptr_uri - hbp;
;;;119      *buff = hbp + 1; 
;;;120      return hdr_type;
;;;121    }
0000e8  e8bd87f0          POP      {r4-r10,pc}
                  |L1.236|
0000ec  2205              MOVS     r2,#5                 ;60
0000ee  a1c1              ADR      r1,|L1.1012|
0000f0  4620              MOV      r0,r4                 ;60
0000f2  f7fffffe          BL       strncmp
0000f6  bb28              CBNZ     r0,|L1.324|
0000f8  f04f0901          MOV      r9,#1                 ;61
0000fc  1d64              ADDS     r4,r4,#5              ;62
0000fe  e000              B        |L1.258|
                  |L1.256|
000100  1c64              ADDS     r4,r4,#1              ;64
                  |L1.258|
000102  f7fffffe          BL       __rt_ctype_table
000106  6800              LDR      r0,[r0,#0]            ;63
000108  7821              LDRB     r1,[r4,#0]            ;63
00010a  5c40              LDRB     r0,[r0,r1]            ;63
00010c  f0100fba          TST      r0,#0xba              ;63
000110  d1f6              BNE      |L1.256|
000112  e000              B        |L1.278|
                  |L1.276|
000114  1c64              ADDS     r4,r4,#1              ;66
                  |L1.278|
000116  7820              LDRB     r0,[r4,#0]            ;65
000118  2820              CMP      r0,#0x20              ;65
00011a  d0fb              BEQ      |L1.276|
00011c  7820              LDRB     r0,[r4,#0]            ;65
00011e  2809              CMP      r0,#9                 ;65
000120  d0f8              BEQ      |L1.276|
000122  f7fffffe          BL       __rt_ctype_table
000126  6800              LDR      r0,[r0,#0]            ;67
000128  7821              LDRB     r1,[r4,#0]            ;67
00012a  5c40              LDRB     r0,[r0,r1]            ;67
00012c  2820              CMP      r0,#0x20              ;67
00012e  d001              BEQ      |L1.308|
000130  2000              MOVS     r0,#0                 ;68
000132  e7d9              B        |L1.232|
                  |L1.308|
000134  4620              MOV      r0,r4                 ;69
000136  f7fffffe          BL       atol
00013a  b280              UXTH     r0,r0                 ;69
00013c  28c8              CMP      r0,#0xc8              ;69
00013e  d060              BEQ      |L1.514|
000140  2000              MOVS     r0,#0                 ;70
000142  e7d1              B        |L1.232|
                  |L1.324|
000144  a1ad              ADR      r1,|L1.1020|
000146  4620              MOV      r0,r4                 ;71
000148  f7fffffe          BL       word_eq
00014c  b110              CBZ      r0,|L1.340|
00014e  f04f0902          MOV      r9,#2                 ;72
000152  e056              B        |L1.514|
                  |L1.340|
000154  a1aa              ADR      r1,|L1.1024|
000156  4620              MOV      r0,r4                 ;73
000158  f7fffffe          BL       word_eq
00015c  b110              CBZ      r0,|L1.356|
00015e  f04f0903          MOV      r9,#3                 ;74
000162  e04e              B        |L1.514|
                  |L1.356|
000164  a1a8              ADR      r1,|L1.1032|
000166  4620              MOV      r0,r4                 ;75
000168  f7fffffe          BL       word_eq
00016c  b110              CBZ      r0,|L1.372|
00016e  f04f0904          MOV      r9,#4                 ;76
000172  e046              B        |L1.514|
                  |L1.372|
000174  a1a6              ADR      r1,|L1.1040|
000176  4620              MOV      r0,r4                 ;77
000178  f7fffffe          BL       word_eq
00017c  b110              CBZ      r0,|L1.388|
00017e  f04f0905          MOV      r9,#5                 ;78
000182  e03e              B        |L1.514|
                  |L1.388|
000184  a1a3              ADR      r1,|L1.1044|
000186  4620              MOV      r0,r4                 ;79
000188  f7fffffe          BL       word_eq
00018c  b110              CBZ      r0,|L1.404|
00018e  f04f0906          MOV      r9,#6                 ;80
000192  e036              B        |L1.514|
                  |L1.404|
000194  a1a1              ADR      r1,|L1.1052|
000196  4620              MOV      r0,r4                 ;81
000198  f7fffffe          BL       word_eq
00019c  b110              CBZ      r0,|L1.420|
00019e  f04f0907          MOV      r9,#7                 ;82
0001a2  e02e              B        |L1.514|
                  |L1.420|
0001a4  a19f              ADR      r1,|L1.1060|
0001a6  4620              MOV      r0,r4                 ;83
0001a8  f7fffffe          BL       word_eq
0001ac  b110              CBZ      r0,|L1.436|
0001ae  f04f0908          MOV      r9,#8                 ;84
0001b2  e026              B        |L1.514|
                  |L1.436|
0001b4  a19d              ADR      r1,|L1.1068|
0001b6  4620              MOV      r0,r4                 ;85
0001b8  f7fffffe          BL       word_eq
0001bc  b110              CBZ      r0,|L1.452|
0001be  f04f0909          MOV      r9,#9                 ;86
0001c2  e01e              B        |L1.514|
                  |L1.452|
0001c4  a19b              ADR      r1,|L1.1076|
0001c6  4620              MOV      r0,r4                 ;87
0001c8  f7fffffe          BL       word_eq
0001cc  b110              CBZ      r0,|L1.468|
0001ce  f04f090a          MOV      r9,#0xa               ;88
0001d2  e016              B        |L1.514|
                  |L1.468|
0001d4  a19a              ADR      r1,|L1.1088|
0001d6  4620              MOV      r0,r4                 ;89
0001d8  f7fffffe          BL       word_eq
0001dc  b110              CBZ      r0,|L1.484|
0001de  f04f090b          MOV      r9,#0xb               ;90
0001e2  e00e              B        |L1.514|
                  |L1.484|
0001e4  a198              ADR      r1,|L1.1096|
0001e6  4620              MOV      r0,r4                 ;91
0001e8  f7fffffe          BL       word_eq
0001ec  b110              CBZ      r0,|L1.500|
0001ee  f04f090c          MOV      r9,#0xc               ;92
0001f2  e006              B        |L1.514|
                  |L1.500|
0001f4  a197              ADR      r1,|L1.1108|
0001f6  4620              MOV      r0,r4                 ;93
0001f8  f7fffffe          BL       word_eq
0001fc  b108              CBZ      r0,|L1.514|
0001fe  f04f090d          MOV      r9,#0xd               ;94
                  |L1.514|
000202  e000              B        |L1.518|
                  |L1.516|
000204  1c64              ADDS     r4,r4,#1              ;99
                  |L1.518|
000206  f7fffffe          BL       __rt_ctype_table
00020a  6800              LDR      r0,[r0,#0]            ;98
00020c  7821              LDRB     r1,[r4,#0]            ;98
00020e  5c40              LDRB     r0,[r0,r1]            ;98
000210  f0100fba          TST      r0,#0xba              ;98
000214  d1f6              BNE      |L1.516|
000216  e000              B        |L1.538|
                  |L1.536|
000218  1c64              ADDS     r4,r4,#1              ;101
                  |L1.538|
00021a  7820              LDRB     r0,[r4,#0]            ;100
00021c  2820              CMP      r0,#0x20              ;100
00021e  d0fb              BEQ      |L1.536|
000220  7820              LDRB     r0,[r4,#0]            ;100
000222  2809              CMP      r0,#9                 ;100
000224  d0f8              BEQ      |L1.536|
000226  212f              MOVS     r1,#0x2f              ;107
000228  4620              MOV      r0,r4                 ;107
00022a  f7fffffe          BL       strchr
00022e  4604              MOV      r4,r0                 ;107
000230  b90c              CBNZ     r4,|L1.566|
000232  2000              MOVS     r0,#0                 ;108
000234  e758              B        |L1.232|
                  |L1.566|
000236  1c64              ADDS     r4,r4,#1              ;109
000238  602c              STR      r4,[r5,#0]            ;111
00023a  2120              MOVS     r1,#0x20              ;112
00023c  4620              MOV      r0,r4                 ;112
00023e  f7fffffe          BL       strchr
000242  4606              MOV      r6,r0                 ;112
000244  b926              CBNZ     r6,|L1.592|
000246  2000              MOVS     r0,#0                 ;114
000248  6028              STR      r0,[r5,#0]            ;114
00024a  f8c80000          STR      r0,[r8,#0]            ;115
00024e  e74b              B        |L1.232|
                  |L1.592|
000250  1b30              SUBS     r0,r6,r4              ;118
000252  f8c80000          STR      r0,[r8,#0]            ;118
000256  1c60              ADDS     r0,r4,#1              ;119
000258  6038              STR      r0,[r7,#0]            ;119
00025a  4648              MOV      r0,r9                 ;120
00025c  e744              B        |L1.232|
;;;122    /* Check words for equality, where words consist of graphical characters
                          ENDP

                  HttpdGetStringValue PROC
;;;147    
;;;148    char * HttpdGetStringValue(char *data, int data_len, int max_value_len, const char * parameter, bool string)
00025e  e92d4ffe          PUSH     {r1-r11,lr}
;;;149    {
000262  4607              MOV      r7,r0
000264  4689              MOV      r9,r1
000266  4692              MOV      r10,r2
000268  469b              MOV      r11,r3
00026a  9e0c              LDR      r6,[sp,#0x30]
;;;150      if(data == NULL)
00026c  b917              CBNZ     r7,|L1.628|
;;;151        return NULL;
00026e  2000              MOVS     r0,#0
                  |L1.624|
;;;152      int i,val_len=0;
;;;153      char * buff = NULL;
;;;154      bool found=false;
;;;155      for (i=0;i<data_len;i++){
;;;156        if(strncmp ((data+i),parameter, strlen(parameter))==0){
;;;157          char *value = (char*)(data+i) + strlen(parameter); 
;;;158          for(i=0; i< max_value_len; ++i){
;;;159            if(((*value == '"')&&string)||((*value == '=')&&!string)){
;;;160              ++value;
;;;161              break;
;;;162            }
;;;163            ++value;
;;;164          }
;;;165          if((strncmp(parameter,value,strlen(parameter))==0)&&!string){
;;;166            found = true;   
;;;167            val_len = strlen(parameter);
;;;168          }else
;;;169            for(i=0; i< max_value_len; ++i){
;;;170              if(((*(value+i) == '"')&&string)||
;;;171                 (strncmp((value+i),"\r\n",sizeof("\r\n"))==0&&!string)||
;;;172                 ((*(value+i) == '&')&&!string)||(((data+data_len)==(value+i))&&!string)){
;;;173                found = true;   
;;;174                val_len = i;
;;;175                break; 
;;;176              }
;;;177            }
;;;178          if(found){
;;;179            buff = mem_malloc(val_len+1);
;;;180            if(!buff)
;;;181              return NULL;
;;;182            memset(buff,0,(val_len+1));
;;;183            if(val_len)
;;;184              strncpy(buff,value,val_len);
;;;185            break;
;;;186          }
;;;187        } 
;;;188      }
;;;189      return buff;
;;;190    }
000270  e8bd8ffe          POP      {r1-r11,pc}
                  |L1.628|
000274  f04f0800          MOV      r8,#0                 ;152
000278  2000              MOVS     r0,#0                 ;153
00027a  9002              STR      r0,[sp,#8]            ;153
00027c  9001              STR      r0,[sp,#4]            ;154
00027e  2400              MOVS     r4,#0                 ;155
000280  e06c              B        |L1.860|
                  |L1.642|
000282  4658              MOV      r0,r11                ;156
000284  f7fffffe          BL       strlen
000288  4605              MOV      r5,r0                 ;156
00028a  1938              ADDS     r0,r7,r4              ;156
00028c  462a              MOV      r2,r5                 ;156
00028e  4659              MOV      r1,r11                ;156
000290  f7fffffe          BL       strncmp
000294  2800              CMP      r0,#0                 ;156
000296  d160              BNE      |L1.858|
000298  4658              MOV      r0,r11                ;157
00029a  f7fffffe          BL       strlen
00029e  1939              ADDS     r1,r7,r4              ;157
0002a0  1845              ADDS     r5,r0,r1              ;157
0002a2  2400              MOVS     r4,#0                 ;158
0002a4  e00b              B        |L1.702|
                  |L1.678|
0002a6  7828              LDRB     r0,[r5,#0]            ;159
0002a8  2822              CMP      r0,#0x22              ;159
0002aa  d100              BNE      |L1.686|
0002ac  b91e              CBNZ     r6,|L1.694|
                  |L1.686|
0002ae  7828              LDRB     r0,[r5,#0]            ;159
0002b0  283d              CMP      r0,#0x3d              ;159
0002b2  d102              BNE      |L1.698|
0002b4  b90e              CBNZ     r6,|L1.698|
                  |L1.694|
0002b6  1c6d              ADDS     r5,r5,#1              ;160
0002b8  e003              B        |L1.706|
                  |L1.698|
0002ba  1c6d              ADDS     r5,r5,#1              ;163
0002bc  1c64              ADDS     r4,r4,#1              ;158
                  |L1.702|
0002be  4554              CMP      r4,r10                ;158
0002c0  dbf1              BLT      |L1.678|
                  |L1.706|
0002c2  bf00              NOP                            ;161
0002c4  4658              MOV      r0,r11                ;165
0002c6  f7fffffe          BL       strlen
0002ca  4602              MOV      r2,r0                 ;165
0002cc  4629              MOV      r1,r5                 ;165
0002ce  9000              STR      r0,[sp,#0]            ;165
0002d0  4658              MOV      r0,r11                ;165
0002d2  f7fffffe          BL       strncmp
0002d6  b938              CBNZ     r0,|L1.744|
0002d8  b936              CBNZ     r6,|L1.744|
0002da  2001              MOVS     r0,#1                 ;166
0002dc  9001              STR      r0,[sp,#4]            ;166
0002de  4658              MOV      r0,r11                ;167
0002e0  f7fffffe          BL       strlen
0002e4  4680              MOV      r8,r0                 ;167
0002e6  e01e              B        |L1.806|
                  |L1.744|
0002e8  2400              MOVS     r4,#0                 ;169
0002ea  e019              B        |L1.800|
                  |L1.748|
0002ec  5d28              LDRB     r0,[r5,r4]            ;170
0002ee  2822              CMP      r0,#0x22              ;170
0002f0  d100              BNE      |L1.756|
0002f2  b986              CBNZ     r6,|L1.790|
                  |L1.756|
0002f4  1928              ADDS     r0,r5,r4              ;171
0002f6  2203              MOVS     r2,#3                 ;171
0002f8  a159              ADR      r1,|L1.1120|
0002fa  f7fffffe          BL       strncmp
0002fe  b900              CBNZ     r0,|L1.770|
000300  b14e              CBZ      r6,|L1.790|
                  |L1.770|
000302  5d28              LDRB     r0,[r5,r4]            ;172
000304  2826              CMP      r0,#0x26              ;172
000306  d100              BNE      |L1.778|
000308  b12e              CBZ      r6,|L1.790|
                  |L1.778|
00030a  eb070009          ADD      r0,r7,r9              ;172
00030e  1929              ADDS     r1,r5,r4              ;172
000310  4288              CMP      r0,r1                 ;172
000312  d104              BNE      |L1.798|
000314  b91e              CBNZ     r6,|L1.798|
                  |L1.790|
000316  2001              MOVS     r0,#1                 ;173
000318  9001              STR      r0,[sp,#4]            ;173
00031a  46a0              MOV      r8,r4                 ;174
00031c  e002              B        |L1.804|
                  |L1.798|
00031e  1c64              ADDS     r4,r4,#1              ;169
                  |L1.800|
000320  4554              CMP      r4,r10                ;169
000322  dbe3              BLT      |L1.748|
                  |L1.804|
000324  bf00              NOP                            ;175
                  |L1.806|
000326  9801              LDR      r0,[sp,#4]            ;178
000328  b1b0              CBZ      r0,|L1.856|
00032a  f1080001          ADD      r0,r8,#1              ;179
00032e  f7fffffe          BL       mem_malloc
000332  9002              STR      r0,[sp,#8]            ;179
000334  9802              LDR      r0,[sp,#8]            ;180
000336  b908              CBNZ     r0,|L1.828|
000338  2000              MOVS     r0,#0                 ;181
00033a  e799              B        |L1.624|
                  |L1.828|
00033c  f1080101          ADD      r1,r8,#1              ;182
000340  9802              LDR      r0,[sp,#8]            ;182
000342  f7fffffe          BL       __aeabi_memclr
000346  f1b80f00          CMP      r8,#0                 ;183
00034a  d004              BEQ      |L1.854|
00034c  4642              MOV      r2,r8                 ;184
00034e  4629              MOV      r1,r5                 ;184
000350  9802              LDR      r0,[sp,#8]            ;184
000352  f7fffffe          BL       strncpy
                  |L1.854|
000356  e003              B        |L1.864|
                  |L1.856|
000358  bf00              NOP                            ;187
                  |L1.858|
00035a  1c64              ADDS     r4,r4,#1              ;155
                  |L1.860|
00035c  454c              CMP      r4,r9                 ;155
00035e  db90              BLT      |L1.642|
                  |L1.864|
000360  bf00              NOP                            ;185
000362  9802              LDR      r0,[sp,#8]            ;189
000364  e784              B        |L1.624|
;;;191    
                          ENDP

                  CheckIpParameters PROC
;;;192    static bool CheckIpParameters(char * charIp, struct ip_addr *ip)
000366  b530              PUSH     {r4,r5,lr}
;;;193    {
000368  b087              SUB      sp,sp,#0x1c
00036a  4605              MOV      r5,r0
00036c  460c              MOV      r4,r1
;;;194      if(charIp == NULL)
00036e  b915              CBNZ     r5,|L1.886|
;;;195        return false;
000370  2000              MOVS     r0,#0
                  |L1.882|
;;;196      DWORD i3,i2,i1,i0;
;;;197      if(sscanf(charIp,"%d.%d.%d.%d", &i3, &i2, &i1, &i0) != 4){
;;;198        return false;
;;;199      }else if((i3|i2|i1|i0)>255){
;;;200        return false;                
;;;201      }else{
;;;202        if(ip)
;;;203          ip->addr = htonl((DWORD)((i3<<24)|(i2<<16)|(i1<<8)|i0));
;;;204      }
;;;205      return true;
;;;206    }
000372  b007              ADD      sp,sp,#0x1c
000374  bd30              POP      {r4,r5,pc}
                  |L1.886|
000376  a803              ADD      r0,sp,#0xc            ;197
000378  a904              ADD      r1,sp,#0x10           ;197
00037a  ab05              ADD      r3,sp,#0x14           ;197
00037c  aa06              ADD      r2,sp,#0x18           ;197
00037e  e9cd1000          STRD     r1,r0,[sp,#0]         ;197
000382  a138              ADR      r1,|L1.1124|
000384  4628              MOV      r0,r5                 ;197
000386  f7fffffe          BL       __0sscanf
00038a  2804              CMP      r0,#4                 ;197
00038c  d001              BEQ      |L1.914|
00038e  2000              MOVS     r0,#0                 ;198
000390  e7ef              B        |L1.882|
                  |L1.914|
000392  e9dd1005          LDRD     r1,r0,[sp,#0x14]      ;199
000396  4308              ORRS     r0,r0,r1              ;199
000398  9904              LDR      r1,[sp,#0x10]         ;199
00039a  4308              ORRS     r0,r0,r1              ;199
00039c  9903              LDR      r1,[sp,#0xc]          ;199
00039e  4308              ORRS     r0,r0,r1              ;199
0003a0  28ff              CMP      r0,#0xff              ;199
0003a2  d901              BLS      |L1.936|
0003a4  2000              MOVS     r0,#0                 ;200
0003a6  e7e4              B        |L1.882|
                  |L1.936|
0003a8  b16c              CBZ      r4,|L1.966|
0003aa  9906              LDR      r1,[sp,#0x18]         ;203
0003ac  0609              LSLS     r1,r1,#24             ;203
0003ae  9a05              LDR      r2,[sp,#0x14]         ;203
0003b0  ea414102          ORR      r1,r1,r2,LSL #16      ;203
0003b4  9a04              LDR      r2,[sp,#0x10]         ;203
0003b6  ea412102          ORR      r1,r1,r2,LSL #8       ;203
0003ba  9a03              LDR      r2,[sp,#0xc]          ;203
0003bc  ea410002          ORR      r0,r1,r2              ;203
0003c0  f7fffffe          BL       lwip_htonl
0003c4  6020              STR      r0,[r4,#0]            ;203
                  |L1.966|
0003c6  2001              MOVS     r0,#1                 ;205
0003c8  e7d3              B        |L1.882|
;;;207    
                          ENDP

                  HttpdGetVariant PROC
;;;209    
;;;210    int HttpdGetVariant(char *data, int data_len, VARIANT *var)
0003ca  e92d43f8          PUSH     {r3-r9,lr}
;;;211    {
0003ce  4607              MOV      r7,r0
0003d0  4688              MOV      r8,r1
0003d2  4614              MOV      r4,r2
;;;212      char *value = NULL;
0003d4  2500              MOVS     r5,#0
;;;213      int ret = VAR_OK;
0003d6  46a9              MOV      r9,r5
;;;214      DWORD param=0; 
0003d8  2600              MOVS     r6,#0
;;;215      if(var->type == TAG_VAR ||  var->type == FILE_NAME_VAR)
0003da  7b20              LDRB     r0,[r4,#0xc]
0003dc  280b              CMP      r0,#0xb
0003de  d002              BEQ      |L1.998|
0003e0  7b20              LDRB     r0,[r4,#0xc]
0003e2  2809              CMP      r0,#9
0003e4  d144              BNE      |L1.1136|
                  |L1.998|
;;;216        return 0;
0003e6  2000              MOVS     r0,#0
;;;217      var->flags &= ~VAR_FLAG_ERROR;
;;;218      if(var->value.void_ptr_var && var->type == BOOL_VAR)
;;;219        var->value.bool_var = false;
;;;220      if((value = HttpdGetStringValue((char *)data, data_len, var->max_var_len,var->name,false))){
;;;221        if(var->value.void_ptr_var) 
;;;222          switch(var->type){
;;;223          case BOOL_VAR:  var->value.bool_var = true; break;
;;;224          case BYTE_VAR:
;;;225            if((param = atol(value)) > 255){
;;;226              var->flags |= VAR_FLAG_ERROR;
;;;227              ret = VAR_BAD;
;;;228            }else
;;;229              var->value.byte_var = param; 
;;;230            break;
;;;231          case SHORT_VAR:
;;;232            if((param = atol(value)) > 65535){
;;;233              var->flags |= VAR_FLAG_ERROR;
;;;234              ret = VAR_BAD;
;;;235            }else
;;;236              var->value.short_var = param; 
;;;237            break;      
;;;238          case INT_VAR:   var->value.int_var = atol(value); break;
;;;239          case ULONG_VAR: var->value.ulong_var = atol(value); break;
;;;240          case CHAR_VAR:  var->value.char_var = *value; break;
;;;241          case STRING_VAR: strcpy(var->value.string_var,value); break;
;;;242          case IP_VAR:
;;;243            if(!CheckIpParameters(value, &var->value.ip_var)){
;;;244              var->flags |= VAR_FLAG_ERROR;
;;;245              ret = VAR_BAD;
;;;246            }break;
;;;247          case FUNC_VAR: if(var->value.func_var) var->value.func_var(); break;  
;;;248          default:
;;;249            ret = VAR_FAIL;
;;;250            var->flags |= VAR_FLAG_ERROR;
;;;251          }
;;;252        else{
;;;253          ret = VAR_FAIL;
;;;254          var->flags |= VAR_FLAG_ERROR;
;;;255        }
;;;256        mem_free(value);
;;;257        return ret;
;;;258      }
;;;259      return VAR_NOTFOUND;
;;;260    }
0003e8  e8bd83f8          POP      {r3-r9,pc}
                  |L1.1004|
                          DCD      http_response
                  |L1.1008|
                          DCD      http_preamble
                  |L1.1012|
0003f4  48545450          DCB      "HTTP/",0
0003f8  2f00    
0003fa  00                DCB      0
0003fb  00                DCB      0
                  |L1.1020|
0003fc  47455400          DCB      "GET",0
                  |L1.1024|
000400  48454144          DCB      "HEAD",0
000404  00      
000405  00                DCB      0
000406  00                DCB      0
000407  00                DCB      0
                  |L1.1032|
000408  504f5354          DCB      "POST",0
00040c  00      
00040d  00                DCB      0
00040e  00                DCB      0
00040f  00                DCB      0
                  |L1.1040|
000410  50555400          DCB      "PUT",0
                  |L1.1044|
000414  44454c45          DCB      "DELETE",0
000418  544500  
00041b  00                DCB      0
                  |L1.1052|
00041c  54524143          DCB      "TRACE",0
000420  4500    
000422  00                DCB      0
000423  00                DCB      0
                  |L1.1060|
000424  434f4e4e          DCB      "CONNECT",0
000428  45435400
                  |L1.1068|
00042c  4e4f5449          DCB      "NOTIFY",0
000430  465900  
000433  00                DCB      0
                  |L1.1076|
000434  4d2d5345          DCB      "M-SEARCH",0
000438  41524348
00043c  00      
00043d  00                DCB      0
00043e  00                DCB      0
00043f  00                DCB      0
                  |L1.1088|
000440  4d2d504f          DCB      "M-POST",0
000444  535400  
000447  00                DCB      0
                  |L1.1096|
000448  53554253          DCB      "SUBSCRIBE",0
00044c  43524942
000450  4500    
000452  00                DCB      0
000453  00                DCB      0
                  |L1.1108|
000454  554e5355          DCB      "UNSUBSCRIBE",0
000458  42534352
00045c  49424500
                  |L1.1120|
000460  0d0a00            DCB      "\r\n",0
000463  00                DCB      0
                  |L1.1124|
000464  25642e25          DCB      "%d.%d.%d.%d",0
000468  642e2564
00046c  2e256400
                  |L1.1136|
000470  7ba0              LDRB     r0,[r4,#0xe]          ;217
000472  f0200001          BIC      r0,r0,#1              ;217
000476  73a0              STRB     r0,[r4,#0xe]          ;217
000478  68a0              LDR      r0,[r4,#8]            ;218
00047a  b118              CBZ      r0,|L1.1156|
00047c  7b20              LDRB     r0,[r4,#0xc]          ;218
00047e  b908              CBNZ     r0,|L1.1156|
000480  2000              MOVS     r0,#0                 ;219
000482  7220              STRB     r0,[r4,#8]            ;219
                  |L1.1156|
000484  2000              MOVS     r0,#0                 ;220
000486  9000              STR      r0,[sp,#0]            ;220
000488  7b62              LDRB     r2,[r4,#0xd]          ;220
00048a  4641              MOV      r1,r8                 ;220
00048c  4638              MOV      r0,r7                 ;220
00048e  6823              LDR      r3,[r4,#0]            ;220
000490  f7fffffe          BL       HttpdGetStringValue
000494  0005              MOVS     r5,r0                 ;220
000496  d067              BEQ      |L1.1384|
000498  68a0              LDR      r0,[r4,#8]            ;221
00049a  2800              CMP      r0,#0                 ;221
00049c  d058              BEQ      |L1.1360|
00049e  7b20              LDRB     r0,[r4,#0xc]          ;222
0004a0  280b              CMP      r0,#0xb               ;222
0004a2  d24d              BCS      |L1.1344|
0004a4  e8dff000          TBB      [pc,r0]               ;222
0004a8  06091828          DCB      0x06,0x09,0x18,0x28
0004ac  2d323547          DCB      0x2d,0x32,0x35,0x47
0004b0  4c4c3a00          DCB      0x4c,0x4c,0x3a,0x00
0004b4  2001              MOVS     r0,#1                 ;223
0004b6  7220              STRB     r0,[r4,#8]            ;223
0004b8  e049              B        |L1.1358|
0004ba  4628              MOV      r0,r5                 ;225
0004bc  f7fffffe          BL       atol
0004c0  4606              MOV      r6,r0                 ;225
0004c2  28ff              CMP      r0,#0xff              ;225
0004c4  d906              BLS      |L1.1236|
0004c6  7ba0              LDRB     r0,[r4,#0xe]          ;226
0004c8  f0400001          ORR      r0,r0,#1              ;226
0004cc  73a0              STRB     r0,[r4,#0xe]          ;226
0004ce  f06f0901          MVN      r9,#1                 ;227
0004d2  e000              B        |L1.1238|
                  |L1.1236|
0004d4  7226              STRB     r6,[r4,#8]            ;229
                  |L1.1238|
0004d6  e03a              B        |L1.1358|
0004d8  4628              MOV      r0,r5                 ;232
0004da  f7fffffe          BL       atol
0004de  4606              MOV      r6,r0                 ;232
0004e0  f5b03f80          CMP      r0,#0x10000           ;232
0004e4  d306              BCC      |L1.1268|
0004e6  7ba0              LDRB     r0,[r4,#0xe]          ;233
0004e8  f0400001          ORR      r0,r0,#1              ;233
0004ec  73a0              STRB     r0,[r4,#0xe]          ;233
0004ee  f06f0901          MVN      r9,#1                 ;234
0004f2  e000              B        |L1.1270|
                  |L1.1268|
0004f4  8126              STRH     r6,[r4,#8]            ;236
                  |L1.1270|
0004f6  e02a              B        |L1.1358|
0004f8  4628              MOV      r0,r5                 ;238
0004fa  f7fffffe          BL       atol
0004fe  60a0              STR      r0,[r4,#8]            ;238
000500  e025              B        |L1.1358|
000502  4628              MOV      r0,r5                 ;239
000504  f7fffffe          BL       atol
000508  60a0              STR      r0,[r4,#8]            ;239
00050a  e020              B        |L1.1358|
00050c  7828              LDRB     r0,[r5,#0]            ;240
00050e  7220              STRB     r0,[r4,#8]            ;240
000510  e01d              B        |L1.1358|
000512  4629              MOV      r1,r5                 ;241
000514  68a0              LDR      r0,[r4,#8]            ;241
000516  f7fffffe          BL       strcpy
00051a  e018              B        |L1.1358|
00051c  f1040108          ADD      r1,r4,#8              ;243
000520  4628              MOV      r0,r5                 ;243
000522  f7fffffe          BL       CheckIpParameters
000526  b928              CBNZ     r0,|L1.1332|
000528  7ba0              LDRB     r0,[r4,#0xe]          ;244
00052a  f0400001          ORR      r0,r0,#1              ;244
00052e  73a0              STRB     r0,[r4,#0xe]          ;244
000530  f06f0901          MVN      r9,#1                 ;245
                  |L1.1332|
000534  e00b              B        |L1.1358|
000536  68a0              LDR      r0,[r4,#8]            ;247
000538  b108              CBZ      r0,|L1.1342|
00053a  68a0              LDR      r0,[r4,#8]            ;247
00053c  4780              BLX      r0                    ;247
                  |L1.1342|
00053e  e006              B        |L1.1358|
                  |L1.1344|
000540  f04f39ff          MOV      r9,#0xffffffff        ;249
000544  7ba0              LDRB     r0,[r4,#0xe]          ;250
000546  f0400001          ORR      r0,r0,#1              ;250
00054a  73a0              STRB     r0,[r4,#0xe]          ;250
00054c  bf00              NOP                            ;222
                  |L1.1358|
00054e  e005              B        |L1.1372|
                  |L1.1360|
000550  f04f39ff          MOV      r9,#0xffffffff        ;253
000554  7ba0              LDRB     r0,[r4,#0xe]          ;254
000556  f0400001          ORR      r0,r0,#1              ;254
00055a  73a0              STRB     r0,[r4,#0xe]          ;254
                  |L1.1372|
00055c  4628              MOV      r0,r5                 ;256
00055e  f7fffffe          BL       mem_free
000562  4648              MOV      r0,r9                 ;257
                  |L1.1380|
000564  e8bd83f8          POP      {r3-r9,pc}
                  |L1.1384|
000568  f06f0002          MVN      r0,#2                 ;259
00056c  e7fa              B        |L1.1380|
;;;261    
                          ENDP

                  HttpdFindVariant PROC
;;;263    
;;;264    VARIANT * HttpdFindVariant(VARIANT *var, const char *buff)
00056e  b570              PUSH     {r4-r6,lr}
;;;265    {
000570  4604              MOV      r4,r0
000572  460d              MOV      r5,r1
;;;266      for(; var->type != NULL_VAR; ++var)
000574  e00c              B        |L1.1424|
                  |L1.1398|
;;;267        if(strncmp(buff, var->name, strlen(var->name))==0)
000576  6820              LDR      r0,[r4,#0]
000578  f7fffffe          BL       strlen
00057c  4606              MOV      r6,r0
00057e  4632              MOV      r2,r6
000580  4628              MOV      r0,r5
000582  6821              LDR      r1,[r4,#0]
000584  f7fffffe          BL       strncmp
000588  b908              CBNZ     r0,|L1.1422|
;;;268          return var;
00058a  4620              MOV      r0,r4
                  |L1.1420|
;;;269      return NULL;
;;;270    }
00058c  bd70              POP      {r4-r6,pc}
                  |L1.1422|
00058e  3414              ADDS     r4,r4,#0x14           ;266
                  |L1.1424|
000590  7b20              LDRB     r0,[r4,#0xc]          ;266
000592  280c              CMP      r0,#0xc               ;266
000594  d1ef              BNE      |L1.1398|
000596  2000              MOVS     r0,#0                 ;269
000598  e7f8              B        |L1.1420|
;;;271    
                          ENDP

                  HttpdInputType PROC
;;;380    /* Build input metod string */
;;;381    int HttpdInputType(char * buff, const char * tag, const char *type, const char *name, 
00059a  e92d5fff          PUSH     {r0-r12,lr}
;;;382                         char * value, const char* style, const char * post , 
;;;383                         const char * header, int size, bool br, int in_len)
;;;384    {
00059e  4605              MOV      r5,r0
0005a0  460f              MOV      r7,r1
0005a2  4698              MOV      r8,r3
0005a4  f8ddb044          LDR      r11,[sp,#0x44]
0005a8  e9dd9a0e          LDRD     r9,r10,[sp,#0x38]
;;;385      int len = strlen("<input type=\"") + strlen(type);
0005ac  9802              LDR      r0,[sp,#8]
0005ae  f7fffffe          BL       strlen
0005b2  f100060d          ADD      r6,r0,#0xd
;;;386      if(name);
;;;387        len += strlen("\" name=\"") + strlen(name);
0005b6  4640              MOV      r0,r8
0005b8  f7fffffe          BL       strlen
0005bc  3008              ADDS     r0,r0,#8
0005be  4406              ADD      r6,r6,r0
;;;388      if(tag)
0005c0  b137              CBZ      r7,|L1.1488|
;;;389        len += 2*(strlen(tag) + 3);
0005c2  4638              MOV      r0,r7
0005c4  f7fffffe          BL       strlen
0005c8  1cc0              ADDS     r0,r0,#3
0005ca  2102              MOVS     r1,#2
0005cc  fb016600          MLA      r6,r1,r0,r6
                  |L1.1488|
;;;390      if(value)
0005d0  f1b90f00          CMP      r9,#0
0005d4  d004              BEQ      |L1.1504|
;;;391        len +=  strlen("\" value=\"") + strlen(value);
0005d6  4648              MOV      r0,r9
0005d8  f7fffffe          BL       strlen
0005dc  3009              ADDS     r0,r0,#9
0005de  4406              ADD      r6,r6,r0
                  |L1.1504|
;;;392      if(style)
0005e0  f1ba0f00          CMP      r10,#0
0005e4  d004              BEQ      |L1.1520|
;;;393        len +=  strlen("\" style=\"") + strlen(style);
0005e6  4650              MOV      r0,r10
0005e8  f7fffffe          BL       strlen
0005ec  3009              ADDS     r0,r0,#9
0005ee  4406              ADD      r6,r6,r0
                  |L1.1520|
;;;394      if(header)
0005f0  f1bb0f00          CMP      r11,#0
0005f4  d003              BEQ      |L1.1534|
;;;395        len += strlen(header);
0005f6  4658              MOV      r0,r11
0005f8  f7fffffe          BL       strlen
0005fc  4406              ADD      r6,r6,r0
                  |L1.1534|
;;;396      if(size)
0005fe  9812              LDR      r0,[sp,#0x48]
000600  b100              CBZ      r0,|L1.1540|
;;;397        len += strlen("\" size=\"") + 6;
000602  360e              ADDS     r6,r6,#0xe
                  |L1.1540|
;;;398      if(br)
000604  9813              LDR      r0,[sp,#0x4c]
000606  b100              CBZ      r0,|L1.1546|
;;;399        len +=strlen("<br>");
000608  1d36              ADDS     r6,r6,#4
                  |L1.1546|
;;;400      len += 6;
00060a  1db6              ADDS     r6,r6,#6
;;;401      if((strlen(buff) + len) > in_len)
00060c  4628              MOV      r0,r5
00060e  f7fffffe          BL       strlen
000612  1981              ADDS     r1,r0,r6
000614  9814              LDR      r0,[sp,#0x50]
000616  4281              CMP      r1,r0
000618  d904              BLS      |L1.1572|
;;;402        return -1;
00061a  f04f30ff          MOV      r0,#0xffffffff
                  |L1.1566|
;;;403      int pos = strlen(buff);
;;;404      if(tag){
;;;405        sprintf(&buff[pos],"<%s>",tag);  
;;;406      }
;;;407      pos = strlen(buff);
;;;408      sprintf(&buff[pos],"<input type=\"%s\" ",type);
;;;409      pos = strlen(buff);
;;;410      if(name){
;;;411        sprintf(&buff[pos],"name=\"%s\" ",name);
;;;412        pos = strlen(buff);
;;;413      }
;;;414      if(value){
;;;415        sprintf(&buff[pos],"value=\"%s\" ",value);
;;;416        pos = strlen(buff);
;;;417      }
;;;418      if(post){
;;;419        strcat(buff,post);
;;;420        pos = strlen(buff);
;;;421      }  
;;;422      if(style){
;;;423        sprintf(&buff[pos],"style=\"%s\" ",style);
;;;424        pos = strlen(buff);    
;;;425      }
;;;426      if(size){
;;;427        sprintf(&buff[pos],"size=\"%d\" ",size);
;;;428        pos = strlen(buff);    
;;;429      }
;;;430    
;;;431      strcat(buff," /> ");
;;;432      pos = strlen(buff);
;;;433      if(header){
;;;434        sprintf(&buff[pos],"%s",header);
;;;435        pos = strlen(buff);    
;;;436      }
;;;437      if(br){
;;;438        strcat(buff,"<br>");
;;;439        pos = strlen(buff);    
;;;440      }
;;;441      if(tag){
;;;442        sprintf(&buff[pos],"</%s>",tag);
;;;443      }
;;;444      strcat(buff,"\r\n");
;;;445      return strlen(buff);
;;;446    }
00061e  b004              ADD      sp,sp,#0x10
000620  e8bd9ff0          POP      {r4-r12,pc}
                  |L1.1572|
000624  4628              MOV      r0,r5                 ;403
000626  f7fffffe          BL       strlen
00062a  4604              MOV      r4,r0                 ;403
00062c  b127              CBZ      r7,|L1.1592|
00062e  1928              ADDS     r0,r5,r4              ;405
000630  463a              MOV      r2,r7                 ;405
000632  a1f8              ADR      r1,|L1.2580|
000634  f7fffffe          BL       __2sprintf
                  |L1.1592|
000638  4628              MOV      r0,r5                 ;407
00063a  f7fffffe          BL       strlen
00063e  4604              MOV      r4,r0                 ;407
000640  1928              ADDS     r0,r5,r4              ;408
000642  a1f6              ADR      r1,|L1.2588|
000644  9a02              LDR      r2,[sp,#8]            ;408
000646  f7fffffe          BL       __2sprintf
00064a  4628              MOV      r0,r5                 ;409
00064c  f7fffffe          BL       strlen
000650  4604              MOV      r4,r0                 ;409
000652  f1b80f00          CMP      r8,#0                 ;410
000656  d008              BEQ      |L1.1642|
000658  1928              ADDS     r0,r5,r4              ;411
00065a  4642              MOV      r2,r8                 ;411
00065c  a1f4              ADR      r1,|L1.2608|
00065e  f7fffffe          BL       __2sprintf
000662  4628              MOV      r0,r5                 ;412
000664  f7fffffe          BL       strlen
000668  4604              MOV      r4,r0                 ;412
                  |L1.1642|
00066a  f1b90f00          CMP      r9,#0                 ;414
00066e  d008              BEQ      |L1.1666|
000670  1928              ADDS     r0,r5,r4              ;415
000672  464a              MOV      r2,r9                 ;415
000674  a1f1              ADR      r1,|L1.2620|
000676  f7fffffe          BL       __2sprintf
00067a  4628              MOV      r0,r5                 ;416
00067c  f7fffffe          BL       strlen
000680  4604              MOV      r4,r0                 ;416
                  |L1.1666|
000682  9810              LDR      r0,[sp,#0x40]         ;418
000684  b138              CBZ      r0,|L1.1686|
000686  4628              MOV      r0,r5                 ;419
000688  9910              LDR      r1,[sp,#0x40]         ;419
00068a  f7fffffe          BL       strcat
00068e  4628              MOV      r0,r5                 ;420
000690  f7fffffe          BL       strlen
000694  4604              MOV      r4,r0                 ;420
                  |L1.1686|
000696  f1ba0f00          CMP      r10,#0                ;422
00069a  d008              BEQ      |L1.1710|
00069c  1928              ADDS     r0,r5,r4              ;423
00069e  4652              MOV      r2,r10                ;423
0006a0  a1e9              ADR      r1,|L1.2632|
0006a2  f7fffffe          BL       __2sprintf
0006a6  4628              MOV      r0,r5                 ;424
0006a8  f7fffffe          BL       strlen
0006ac  4604              MOV      r4,r0                 ;424
                  |L1.1710|
0006ae  9812              LDR      r0,[sp,#0x48]         ;426
0006b0  b140              CBZ      r0,|L1.1732|
0006b2  1928              ADDS     r0,r5,r4              ;427
0006b4  a1e7              ADR      r1,|L1.2644|
0006b6  9a12              LDR      r2,[sp,#0x48]         ;427
0006b8  f7fffffe          BL       __2sprintf
0006bc  4628              MOV      r0,r5                 ;428
0006be  f7fffffe          BL       strlen
0006c2  4604              MOV      r4,r0                 ;428
                  |L1.1732|
0006c4  a1e6              ADR      r1,|L1.2656|
0006c6  4628              MOV      r0,r5                 ;431
0006c8  f7fffffe          BL       strcat
0006cc  4628              MOV      r0,r5                 ;432
0006ce  f7fffffe          BL       strlen
0006d2  4604              MOV      r4,r0                 ;432
0006d4  f1bb0f00          CMP      r11,#0                ;433
0006d8  d008              BEQ      |L1.1772|
0006da  1928              ADDS     r0,r5,r4              ;434
0006dc  465a              MOV      r2,r11                ;434
0006de  a1e2              ADR      r1,|L1.2664|
0006e0  f7fffffe          BL       __2sprintf
0006e4  4628              MOV      r0,r5                 ;435
0006e6  f7fffffe          BL       strlen
0006ea  4604              MOV      r4,r0                 ;435
                  |L1.1772|
0006ec  9813              LDR      r0,[sp,#0x4c]         ;437
0006ee  b138              CBZ      r0,|L1.1792|
0006f0  a1de              ADR      r1,|L1.2668|
0006f2  4628              MOV      r0,r5                 ;438
0006f4  f7fffffe          BL       strcat
0006f8  4628              MOV      r0,r5                 ;439
0006fa  f7fffffe          BL       strlen
0006fe  4604              MOV      r4,r0                 ;439
                  |L1.1792|
000700  b127              CBZ      r7,|L1.1804|
000702  1928              ADDS     r0,r5,r4              ;442
000704  463a              MOV      r2,r7                 ;442
000706  a1db              ADR      r1,|L1.2676|
000708  f7fffffe          BL       __2sprintf
                  |L1.1804|
00070c  f2af21b0          ADR      r1,|L1.1120|
000710  4628              MOV      r0,r5                 ;444
000712  f7fffffe          BL       strcat
000716  4628              MOV      r0,r5                 ;445
000718  f7fffffe          BL       strlen
00071c  e77f              B        |L1.1566|
;;;447    
                          ENDP

                  HttpdInputBoolType PROC
;;;372    }
;;;373    int HttpdInputBoolType(char * buff, const char * tag, const char *name, 
00071e  e92d4fff          PUSH     {r0-r11,lr}
;;;374                         const char* style, bool num, 
;;;375                         const char * header, int size, bool br, int in_len)
;;;376    {
000722  b087              SUB      sp,sp,#0x1c
000724  4606              MOV      r6,r0
000726  4614              MOV      r4,r2
000728  461d              MOV      r5,r3
00072a  e9dd9a17          LDRD     r9,r10,[sp,#0x5c]
00072e  e9dd7814          LDRD     r7,r8,[sp,#0x50]
;;;377      char * post = num ? "checked":NULL;
000732  b10f              CBZ      r7,|L1.1848|
000734  a0d1              ADR      r0,|L1.2684|
000736  e000              B        |L1.1850|
                  |L1.1848|
000738  2000              MOVS     r0,#0
                  |L1.1850|
00073a  4683              MOV      r11,r0
;;;378      return  HttpdInputType(buff,tag,"checkbox",name,(char*)name,style,post,header,size,br,in_len);
00073c  9816              LDR      r0,[sp,#0x58]
00073e  4623              MOV      r3,r4
000740  a2d0              ADR      r2,|L1.2692|
000742  e88d0830          STM      sp,{r4,r5,r11}
000746  e9cd9a05          STRD     r9,r10,[sp,#0x14]
00074a  e9cd8003          STRD     r8,r0,[sp,#0xc]
00074e  4630              MOV      r0,r6
000750  9908              LDR      r1,[sp,#0x20]
000752  f7fffffe          BL       HttpdInputType
;;;379    }
000756  b00b              ADD      sp,sp,#0x2c
000758  e8bd8ff0          POP      {r4-r11,pc}
;;;380    /* Build input metod string */
                          ENDP

                  HttpdInputIntType PROC
;;;359    
;;;360    int HttpdInputIntType(char * buff, const char * tag, const char *type, const char *name, 
00075c  e92d4fff          PUSH     {r0-r11,lr}
;;;361                         DWORD num, const char* style, const char * post , 
;;;362                         const char * header, int size, bool br, int in_len)
;;;363    {
000760  b087              SUB      sp,sp,#0x1c
000762  4606              MOV      r6,r0
000764  f8ddb068          LDR      r11,[sp,#0x68]
000768  af15              ADD      r7,sp,#0x54
00076a  e8970780          LDM      r7,{r7-r10}
;;;364      char*value = mem_malloc(12);
00076e  200c              MOVS     r0,#0xc
000770  f7fffffe          BL       mem_malloc
000774  4604              MOV      r4,r0
;;;365      if(value == NULL)
000776  b924              CBNZ     r4,|L1.1922|
;;;366      return -1;
000778  f04f30ff          MOV      r0,#0xffffffff
                  |L1.1916|
;;;367      memset(value,0,12);
;;;368      sprintf(value, "%ld",num);
;;;369      int ret = HttpdInputType(buff,tag,type,name,value,style,post,header,size,br,in_len);
;;;370      mem_free(value);
;;;371      return ret;
;;;372    }
00077c  b00b              ADD      sp,sp,#0x2c
00077e  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.1922|
000782  2000              MOVS     r0,#0                 ;367
000784  6020              STR      r0,[r4,#0]            ;367
000786  6060              STR      r0,[r4,#4]            ;367
000788  60a0              STR      r0,[r4,#8]            ;367
00078a  a1c1              ADR      r1,|L1.2704|
00078c  4620              MOV      r0,r4                 ;368
00078e  9a14              LDR      r2,[sp,#0x50]         ;368
000790  f7fffffe          BL       __2sprintf
000794  9819              LDR      r0,[sp,#0x64]         ;369
000796  e9cd0b05          STRD     r0,r11,[sp,#0x14]     ;369
00079a  e88d0790          STM      sp,{r4,r7-r10}        ;369
00079e  4630              MOV      r0,r6                 ;369
0007a0  a908              ADD      r1,sp,#0x20           ;369
0007a2  c90e              LDM      r1,{r1-r3}            ;369
0007a4  f7fffffe          BL       HttpdInputType
0007a8  4605              MOV      r5,r0                 ;369
0007aa  4620              MOV      r0,r4                 ;370
0007ac  f7fffffe          BL       mem_free
0007b0  4628              MOV      r0,r5                 ;371
0007b2  e7e3              B        |L1.1916|
;;;373    int HttpdInputBoolType(char * buff, const char * tag, const char *name, 
                          ENDP

                  HttpdSetVariant PROC
;;;271    
;;;272    int HttpdSetVariant(char * buf, uint16_t buff_max, VARIANT *var)
0007b4  e92d43f0          PUSH     {r4-r9,lr}
;;;273    {
0007b8  b089              SUB      sp,sp,#0x24
0007ba  4607              MOV      r7,r0
0007bc  460d              MOV      r5,r1
0007be  4614              MOV      r4,r2
;;;274      int length = -1;
0007c0  f04f38ff          MOV      r8,#0xffffffff
;;;275      char * style = var->flags&VAR_FLAG_ERROR ?  "color:Red":"color:Black";
0007c4  7ba0              LDRB     r0,[r4,#0xe]
0007c6  f0100f01          TST      r0,#1
0007ca  d001              BEQ      |L1.2000|
0007cc  a0b1              ADR      r0,|L1.2708|
0007ce  e000              B        |L1.2002|
                  |L1.2000|
0007d0  a0b3              ADR      r0,|L1.2720|
                  |L1.2002|
0007d2  4606              MOV      r6,r0
;;;276      if((var->flags&VAR_FLAG_ERROR)==0 && var->flags&VAR_FLAG_COLOR){
0007d4  7ba0              LDRB     r0,[r4,#0xe]
0007d6  f0100f01          TST      r0,#1
0007da  d10a              BNE      |L1.2034|
0007dc  7ba0              LDRB     r0,[r4,#0xe]
0007de  f0100f04          TST      r0,#4
0007e2  d006              BEQ      |L1.2034|
;;;277        char style_buf[32];
;;;278        style = style_buf;
0007e4  ae01              ADD      r6,sp,#4
;;;279        sprintf(style_buf,"color:#%06X",var->color);
0007e6  a1b1              ADR      r1,|L1.2732|
0007e8  a801              ADD      r0,sp,#4
0007ea  6922              LDR      r2,[r4,#0x10]
0007ec  f7fffffe          BL       __2sprintf
;;;280      }  
0007f0  bf00              NOP      
                  |L1.2034|
;;;281      switch(var->type){    
0007f2  7b20              LDRB     r0,[r4,#0xc]
0007f4  280c              CMP      r0,#0xc
0007f6  d21b              BCS      |L1.2096|
0007f8  e8dff000          TBB      [pc,r0]
0007fc  9e061b2f          DCB      0x9e,0x06,0x1b,0x2f
000800  445889b1          DCB      0x44,0x58,0x89,0xb1
000804  1ac6fe73          DCB      0x1a,0xc6,0xfe,0x73
;;;282      case BYTE_VAR:
;;;283        length= HttpdInputIntType(buf,NULL,"text",var->name,var->value.byte_var, 
000808  7ba0              LDRB     r0,[r4,#0xe]
00080a  f3c00040          UBFX     r0,r0,#1,#1
00080e  7be1              LDRB     r1,[r4,#0xf]
000810  6862              LDR      r2,[r4,#4]
000812  e9cd0505          STRD     r0,r5,[sp,#0x14]
000816  e9cd2103          STRD     r2,r1,[sp,#0xc]
00081a  2100              MOVS     r1,#0
00081c  7a20              LDRB     r0,[r4,#8]
00081e  e9cd6101          STRD     r6,r1,[sp,#4]
000822  9000              STR      r0,[sp,#0]
000824  a2a4              ADR      r2,|L1.2744|
000826  4638              MOV      r0,r7
000828  6823              LDR      r3,[r4,#0]
00082a  f7fffffe          BL       HttpdInputIntType
00082e  4680              MOV      r8,r0
                  |L1.2096|
;;;284                          style,NULL,var->hdr_name,var->size,
;;;285                          ((var->flags&VAR_FLAG_BR)?  true:false),buff_max);
;;;286        break;
000830  e17b              B        |L1.2858|
;;;287      case SHORT_VAR:
;;;288        length= HttpdInputIntType(buf,NULL,"text",var->name,var->value.short_var, 
000832  7ba0              LDRB     r0,[r4,#0xe]
000834  f3c00140          UBFX     r1,r0,#1,#1
000838  7be0              LDRB     r0,[r4,#0xf]
00083a  6862              LDR      r2,[r4,#4]
00083c  ab04              ADD      r3,sp,#0x10
00083e  c323              STM      r3!,{r0,r1,r5}
000840  9203              STR      r2,[sp,#0xc]
000842  2100              MOVS     r1,#0
000844  8920              LDRH     r0,[r4,#8]
000846  e9cd6101          STRD     r6,r1,[sp,#4]
00084a  9000              STR      r0,[sp,#0]
00084c  a29a              ADR      r2,|L1.2744|
00084e  4638              MOV      r0,r7
000850  6823              LDR      r3,[r4,#0]
000852  f7fffffe          BL       HttpdInputIntType
000856  4680              MOV      r8,r0
;;;289                          style,NULL,var->hdr_name,var->size,
;;;290                          ((var->flags&VAR_FLAG_BR)?  true:false),buff_max);
;;;291        break;    
000858  e167              B        |L1.2858|
;;;292      case INT_VAR:
;;;293        length= HttpdInputIntType(buf,NULL,"text",var->name,var->value.int_var, 
00085a  7ba0              LDRB     r0,[r4,#0xe]
00085c  f3c00040          UBFX     r0,r0,#1,#1
000860  7be1              LDRB     r1,[r4,#0xf]
000862  6862              LDR      r2,[r4,#4]
000864  e9cd0505          STRD     r0,r5,[sp,#0x14]
000868  e9cd2103          STRD     r2,r1,[sp,#0xc]
00086c  2100              MOVS     r1,#0
00086e  68a0              LDR      r0,[r4,#8]
000870  e9cd6101          STRD     r6,r1,[sp,#4]
000874  9000              STR      r0,[sp,#0]
000876  a290              ADR      r2,|L1.2744|
000878  4638              MOV      r0,r7
00087a  6823              LDR      r3,[r4,#0]
00087c  f7fffffe          BL       HttpdInputIntType
000880  4680              MOV      r8,r0
;;;294                          style,NULL,var->hdr_name,var->size,
;;;295                          ((var->flags&VAR_FLAG_BR)?  true:false),buff_max);
;;;296        break;    
000882  e152              B        |L1.2858|
;;;297      case ULONG_VAR:
;;;298        length= HttpdInputIntType(buf,NULL,"text",var->name,var->value.ulong_var, 
000884  7ba0              LDRB     r0,[r4,#0xe]
000886  f3c00140          UBFX     r1,r0,#1,#1
00088a  7be0              LDRB     r0,[r4,#0xf]
00088c  6862              LDR      r2,[r4,#4]
00088e  ab04              ADD      r3,sp,#0x10
000890  c323              STM      r3!,{r0,r1,r5}
000892  9203              STR      r2,[sp,#0xc]
000894  2100              MOVS     r1,#0
000896  68a0              LDR      r0,[r4,#8]
000898  e9cd6101          STRD     r6,r1,[sp,#4]
00089c  9000              STR      r0,[sp,#0]
00089e  a286              ADR      r2,|L1.2744|
0008a0  4638              MOV      r0,r7
0008a2  6823              LDR      r3,[r4,#0]
0008a4  f7fffffe          BL       HttpdInputIntType
0008a8  4680              MOV      r8,r0
;;;299                          style,NULL,var->hdr_name,var->size,
;;;300                          ((var->flags&VAR_FLAG_BR)?  true:false),buff_max);    
;;;301        break;
0008aa  e13e              B        |L1.2858|
;;;302      case CHAR_VAR:
;;;303        {
;;;304          char char_buf[] = {var->value.char_var,0};
0008ac  2000              MOVS     r0,#0
0008ae  9008              STR      r0,[sp,#0x20]
0008b0  7a20              LDRB     r0,[r4,#8]
0008b2  f88d0020          STRB     r0,[sp,#0x20]
;;;305          length= HttpdInputType(buf,NULL,"text", var->name, char_buf,style,NULL,
0008b6  7ba0              LDRB     r0,[r4,#0xe]
0008b8  f3c00040          UBFX     r0,r0,#1,#1
0008bc  7be1              LDRB     r1,[r4,#0xf]
0008be  6862              LDR      r2,[r4,#4]
0008c0  e9cd0505          STRD     r0,r5,[sp,#0x14]
0008c4  e9cd2103          STRD     r2,r1,[sp,#0xc]
0008c8  2000              MOVS     r0,#0
0008ca  a908              ADD      r1,sp,#0x20
0008cc  e9cd1600          STRD     r1,r6,[sp,#0]
0008d0  9002              STR      r0,[sp,#8]
0008d2  a279              ADR      r2,|L1.2744|
0008d4  4601              MOV      r1,r0
0008d6  4638              MOV      r0,r7
0008d8  6823              LDR      r3,[r4,#0]
0008da  f7fffffe          BL       HttpdInputType
0008de  4680              MOV      r8,r0
;;;306                         var->hdr_name,var->size,
;;;307                         ((var->flags&VAR_FLAG_BR)?  true:false),buff_max);  
;;;308                              
;;;309        }    
;;;310        break;
0008e0  e123              B        |L1.2858|
;;;311      case TAG_VAR:
;;;312        if((strlen(buf)+strlen(var->name))>buff_max){
0008e2  4638              MOV      r0,r7
0008e4  f7fffffe          BL       strlen
0008e8  4681              MOV      r9,r0
0008ea  6820              LDR      r0,[r4,#0]
0008ec  f7fffffe          BL       strlen
0008f0  4448              ADD      r0,r0,r9
0008f2  42a8              CMP      r0,r5
0008f4  d902              BLS      |L1.2300|
;;;313          length = -1;
0008f6  f04f38ff          MOV      r8,#0xffffffff
0008fa  e007              B        |L1.2316|
                  |L1.2300|
;;;314        }else{
;;;315          strcat(buf,var->name);
0008fc  4638              MOV      r0,r7
0008fe  6821              LDR      r1,[r4,#0]
000900  f7fffffe          BL       strcat
;;;316          length =strlen(buf);
000904  4638              MOV      r0,r7
000906  f7fffffe          BL       strlen
00090a  4680              MOV      r8,r0
                  |L1.2316|
;;;317        }     
;;;318        break;
00090c  e10d              B        |L1.2858|
;;;319      case STRING_VAR:
;;;320        length= HttpdInputType(buf,NULL,"text", var->name, var->value.string_var,style,NULL,
00090e  7ba0              LDRB     r0,[r4,#0xe]
000910  f3c00040          UBFX     r0,r0,#1,#1
000914  7be1              LDRB     r1,[r4,#0xf]
000916  6862              LDR      r2,[r4,#4]
000918  e9cd0505          STRD     r0,r5,[sp,#0x14]
00091c  e9cd2103          STRD     r2,r1,[sp,#0xc]
000920  2100              MOVS     r1,#0
000922  68a0              LDR      r0,[r4,#8]
000924  e9cd6101          STRD     r6,r1,[sp,#4]
000928  9000              STR      r0,[sp,#0]
00092a  a263              ADR      r2,|L1.2744|
00092c  4638              MOV      r0,r7
00092e  6823              LDR      r3,[r4,#0]
000930  f7fffffe          BL       HttpdInputType
000934  4680              MOV      r8,r0
;;;321                       var->hdr_name,var->size,
;;;322                       ((var->flags&VAR_FLAG_BR)?  true:false),buff_max);     
;;;323        break;
000936  e0f8              B        |L1.2858|
;;;324      case BOOL_VAR:
;;;325        length= HttpdInputBoolType(buf,NULL,var->name,style, var->value.bool_var,
000938  7ba0              LDRB     r0,[r4,#0xe]
00093a  f3c00040          UBFX     r0,r0,#1,#1
00093e  7be1              LDRB     r1,[r4,#0xf]
000940  6862              LDR      r2,[r4,#4]
000942  e9cd0503          STRD     r0,r5,[sp,#0xc]
000946  e9cd2101          STRD     r2,r1,[sp,#4]
00094a  7a20              LDRB     r0,[r4,#8]
00094c  9000              STR      r0,[sp,#0]
00094e  4633              MOV      r3,r6
000950  2100              MOVS     r1,#0
000952  4638              MOV      r0,r7
000954  6822              LDR      r2,[r4,#0]
000956  f7fffffe          BL       HttpdInputBoolType
00095a  4680              MOV      r8,r0
;;;326                           var->hdr_name,var->size,
;;;327                           ((var->flags&VAR_FLAG_BR)?  true:false),buff_max);     
;;;328        break;
00095c  e0e5              B        |L1.2858|
;;;329      case FUNC_VAR:
;;;330        length = HttpdInputType(buf,NULL,"submit",var->name,(char*)var->name, 
00095e  7ba0              LDRB     r0,[r4,#0xe]
000960  f3c00040          UBFX     r0,r0,#1,#1
000964  7be1              LDRB     r1,[r4,#0xf]
000966  6862              LDR      r2,[r4,#4]
000968  e9cd0505          STRD     r0,r5,[sp,#0x14]
00096c  e9cd2103          STRD     r2,r1,[sp,#0xc]
000970  2100              MOVS     r1,#0
000972  6820              LDR      r0,[r4,#0]
000974  e9cd6101          STRD     r6,r1,[sp,#4]
000978  9000              STR      r0,[sp,#0]
00097a  a251              ADR      r2,|L1.2752|
00097c  4638              MOV      r0,r7
00097e  6823              LDR      r3,[r4,#0]
000980  f7fffffe          BL       HttpdInputType
000984  4680              MOV      r8,r0
;;;331                          style,NULL,var->hdr_name,var->size,
;;;332                         ((var->flags&VAR_FLAG_BR)?  true:false),buff_max);
;;;333        break;
000986  e0d0              B        |L1.2858|
;;;334      case FILE_NAME_VAR:
;;;335        if((strlen(buf) + strlen("<a href=\"") + strlen(var->name) + strlen("\" style=\"")
000988  4638              MOV      r0,r7
00098a  f7fffffe          BL       strlen
00098e  f1000909          ADD      r9,r0,#9
000992  6820              LDR      r0,[r4,#0]
000994  f7fffffe          BL       strlen
000998  4481              ADD      r9,r9,r0
00099a  f1090909          ADD      r9,r9,#9
00099e  4630              MOV      r0,r6
0009a0  f7fffffe          BL       strlen
0009a4  4481              ADD      r9,r9,r0
0009a6  f1090902          ADD      r9,r9,#2
0009aa  6860              LDR      r0,[r4,#4]
0009ac  f7fffffe          BL       strlen
0009b0  4448              ADD      r0,r0,r9
0009b2  3009              ADDS     r0,r0,#9
0009b4  42a8              CMP      r0,r5
0009b6  d902              BLS      |L1.2494|
;;;336           +strlen(style) + strlen("\">") +strlen(var->hdr_name) + strlen("</a>")+5)>buff_max)
;;;337          length =-1;
0009b8  f04f38ff          MOV      r8,#0xffffffff
0009bc  e029              B        |L1.2578|
                  |L1.2494|
;;;338        else{
;;;339          strcat(buf,"<a href=\"");
0009be  a142              ADR      r1,|L1.2760|
0009c0  4638              MOV      r0,r7
0009c2  f7fffffe          BL       strcat
;;;340          strcat(buf,var->value.filename_var);
0009c6  4638              MOV      r0,r7
0009c8  68a1              LDR      r1,[r4,#8]
0009ca  f7fffffe          BL       strcat
;;;341          strcat(buf,"\" style=\"");
0009ce  a141              ADR      r1,|L1.2772|
0009d0  4638              MOV      r0,r7
0009d2  f7fffffe          BL       strcat
;;;342          strcat(buf,style);
0009d6  4631              MOV      r1,r6
0009d8  4638              MOV      r0,r7
0009da  f7fffffe          BL       strcat
;;;343          strcat(buf,"\">");
0009de  a140              ADR      r1,|L1.2784|
0009e0  4638              MOV      r0,r7
0009e2  f7fffffe          BL       strcat
;;;344          strcat(buf,var->hdr_name);
0009e6  4638              MOV      r0,r7
0009e8  6861              LDR      r1,[r4,#4]
0009ea  f7fffffe          BL       strcat
;;;345          strcat(buf,"</a>");
0009ee  a13d              ADR      r1,|L1.2788|
0009f0  4638              MOV      r0,r7
0009f2  f7fffffe          BL       strcat
;;;346          if(var->flags&VAR_FLAG_BR)
0009f6  e000              B        |L1.2554|
0009f8  e07c              B        |L1.2804|
                  |L1.2554|
0009fa  7ba0              LDRB     r0,[r4,#0xe]
0009fc  f0100f02          TST      r0,#2
000a00  d003              BEQ      |L1.2570|
;;;347            strcat(buf,"<br/>");
000a02  a13a              ADR      r1,|L1.2796|
000a04  4638              MOV      r0,r7
000a06  f7fffffe          BL       strcat
                  |L1.2570|
;;;348          length = strlen(buf);
000a0a  4638              MOV      r0,r7
000a0c  f7fffffe          BL       strlen
000a10  4680              MOV      r8,r0
                  |L1.2578|
;;;349        }
;;;350        break;
000a12  e08a              B        |L1.2858|
                  |L1.2580|
000a14  3c25733e          DCB      "<%s>",0
000a18  00      
000a19  00                DCB      0
000a1a  00                DCB      0
000a1b  00                DCB      0
                  |L1.2588|
000a1c  3c696e70          DCB      "<input type=""%s"" ",0
000a20  75742074
000a24  7970653d
000a28  22257322
000a2c  2000    
000a2e  00                DCB      0
000a2f  00                DCB      0
                  |L1.2608|
000a30  6e616d65          DCB      "name=""%s"" ",0
000a34  3d222573
000a38  222000  
000a3b  00                DCB      0
                  |L1.2620|
000a3c  76616c75          DCB      "value=""%s"" ",0
000a40  653d2225
000a44  73222000
                  |L1.2632|
000a48  7374796c          DCB      "style=""%s"" ",0
000a4c  653d2225
000a50  73222000
                  |L1.2644|
000a54  73697a65          DCB      "size=""%d"" ",0
000a58  3d222564
000a5c  222000  
000a5f  00                DCB      0
                  |L1.2656|
000a60  202f3e20          DCB      " /> ",0
000a64  00      
000a65  00                DCB      0
000a66  00                DCB      0
000a67  00                DCB      0
                  |L1.2664|
000a68  257300            DCB      "%s",0
000a6b  00                DCB      0
                  |L1.2668|
000a6c  3c62723e          DCB      "<br>",0
000a70  00      
000a71  00                DCB      0
000a72  00                DCB      0
000a73  00                DCB      0
                  |L1.2676|
000a74  3c2f2573          DCB      "</%s>",0
000a78  3e00    
000a7a  00                DCB      0
000a7b  00                DCB      0
                  |L1.2684|
000a7c  63686563          DCB      "checked",0
000a80  6b656400
                  |L1.2692|
000a84  63686563          DCB      "checkbox",0
000a88  6b626f78
000a8c  00      
000a8d  00                DCB      0
000a8e  00                DCB      0
000a8f  00                DCB      0
                  |L1.2704|
000a90  256c6400          DCB      "%ld",0
                  |L1.2708|
000a94  636f6c6f          DCB      "color:Red",0
000a98  723a5265
000a9c  6400    
000a9e  00                DCB      0
000a9f  00                DCB      0
                  |L1.2720|
000aa0  636f6c6f          DCB      "color:Black",0
000aa4  723a426c
000aa8  61636b00
                  |L1.2732|
000aac  636f6c6f          DCB      "color:#%06X",0
000ab0  723a2325
000ab4  30365800
                  |L1.2744|
000ab8  74657874          DCB      "text",0
000abc  00      
000abd  00                DCB      0
000abe  00                DCB      0
000abf  00                DCB      0
                  |L1.2752|
000ac0  7375626d          DCB      "submit",0
000ac4  697400  
000ac7  00                DCB      0
                  |L1.2760|
000ac8  3c612068          DCB      "<a href=""",0
000acc  7265663d
000ad0  2200    
000ad2  00                DCB      0
000ad3  00                DCB      0
                  |L1.2772|
000ad4  22207374          DCB      """ style=""",0
000ad8  796c653d
000adc  2200    
000ade  00                DCB      0
000adf  00                DCB      0
                  |L1.2784|
000ae0  223e00            DCB      """>",0
000ae3  00                DCB      0
                  |L1.2788|
000ae4  3c2f613e          DCB      "</a>",0
000ae8  00      
000ae9  00                DCB      0
000aea  00                DCB      0
000aeb  00                DCB      0
                  |L1.2796|
000aec  3c62722f          DCB      "<br/>",0
000af0  3e00    
000af2  00                DCB      0
000af3  00                DCB      0
                  |L1.2804|
;;;351      case IP_VAR:
;;;352        length = HttpdInputType(buf,NULL,"text",var->name,
000af4  f1040008          ADD      r0,r4,#8
000af8  f7fffffe          BL       htoa
000afc  4681              MOV      r9,r0
000afe  7ba0              LDRB     r0,[r4,#0xe]
000b00  f3c00040          UBFX     r0,r0,#1,#1
000b04  7be1              LDRB     r1,[r4,#0xf]
000b06  6862              LDR      r2,[r4,#4]
000b08  e9cd0505          STRD     r0,r5,[sp,#0x14]
000b0c  e9cd2103          STRD     r2,r1,[sp,#0xc]
000b10  2000              MOVS     r0,#0
000b12  e9cd9600          STRD     r9,r6,[sp,#0]
000b16  9002              STR      r0,[sp,#8]
000b18  f2af0264          ADR      r2,|L1.2744|
000b1c  4601              MOV      r1,r0
000b1e  4638              MOV      r0,r7
000b20  6823              LDR      r3,[r4,#0]
000b22  f7fffffe          BL       HttpdInputType
000b26  4680              MOV      r8,r0
;;;353                                htoa((struct in_addr*)&var->value.ip_var),style,NULL,var->hdr_name,
;;;354                                var->size,((var->flags&VAR_FLAG_BR)?  true:false),buff_max);     
;;;355        break;
000b28  bf00              NOP      
                  |L1.2858|
000b2a  bf00              NOP                            ;286
;;;356      }
;;;357      return length;
000b2c  4640              MOV      r0,r8
;;;358    }
000b2e  b009              ADD      sp,sp,#0x24
000b30  e8bd83f0          POP      {r4-r9,pc}
;;;359    
                          ENDP

                  HttpdInit PROC
;;;453      */
;;;454    void HttpdInit(WORD port, err_t (* recv)(void *arg, struct tcp_pcb *tpcb,struct pbuf *p, err_t err))
000b34  b570              PUSH     {r4-r6,lr}
;;;455    {
000b36  4604              MOV      r4,r0
000b38  460d              MOV      r5,r1
;;;456      struct tcp_pcb *pcb;
;;;457      pcb = tcp_new();
000b3a  f7fffffe          BL       tcp_new
000b3e  4606              MOV      r6,r0
;;;458      tcp_bind(pcb, IP_ADDR_ANY, port);
000b40  4622              MOV      r2,r4
000b42  4907              LDR      r1,|L1.2912|
000b44  4630              MOV      r0,r6
000b46  f7fffffe          BL       tcp_bind
;;;459      pcb = tcp_listen(pcb);
000b4a  21ff              MOVS     r1,#0xff
000b4c  4630              MOV      r0,r6
000b4e  f7fffffe          BL       tcp_listen_with_backlog
000b52  4606              MOV      r6,r0
;;;460      tcp_recv(pcb, recv);
000b54  4629              MOV      r1,r5
000b56  4630              MOV      r0,r6
000b58  f7fffffe          BL       tcp_recv
;;;461    
;;;462    }
000b5c  bd70              POP      {r4-r6,pc}
;;;463    
                          ENDP

000b5e  0000              DCW      0x0000
                  |L1.2912|
                          DCD      ip_addr_any

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=0

000000  48545450          DCB      "HTTP/1.1 200 OK\r\nMIME-Version: 1.0\r\nServer: unspeci"
000004  2f312e31
000008  20323030
00000c  204f4b0d
000010  0a4d494d
000014  452d5665
000018  7273696f
00001c  6e3a2031
000020  2e300d0a
000024  53657276
000028  65723a20
00002c  756e7370
000030  656369  
000033  66696564          DCB      "fied, UPnP/1.0, unspecified\r\n",0
000037  2c205550
00003b  6e502f31
00003f  2e302c20
000043  756e7370
000047  65636966
00004b  6965640d
00004f  0a00    
000051  436f6e74          DCB      "Content-type: text/html\r\n\r\n<!DOCTYPE HTML PUBLIC """
000055  656e742d
000059  74797065
00005d  3a207465
000061  78742f68
000065  746d6c0d
000069  0a0d0a3c
00006d  21444f43
000071  54595045
000075  2048544d
000079  4c205055
00007d  424c4943
000081  2022    
000083  2d2f2f57          DCB      "-//W3C/DTD HTML 4.0 Transitional//EN"">\r\n",0
000087  33432f44
00008b  54442048
00008f  544d4c20
000093  342e3020
000097  5472616e
00009b  73697469
00009f  6f6e616c
0000a3  2f2f454e
0000a7  223e0d0a
0000ab  00      

                          AREA ||.data||, DATA, ALIGN=2

                  http_response
                          DCD      ||.conststring||
                  http_preamble
                          DCD      ||.conststring||+0x51
