L 1 "web\enet_lwip.c"
N//*****************************************************************************
N//
N// enet_lwip.c - Sample WebServer Application using lwIP.
N//
N// Copyright (c) 2013 Texas Instruments Incorporated.  All rights reserved.
N// Software License Agreement
N// 
N// Texas Instruments (TI) is supplying this software for use solely and
N// exclusively on TI's microcontroller products. The software is owned by
N// TI and/or its suppliers, and is protected under applicable copyright
N// laws. You may not combine this software with "viral" open-source
N// software in order to form a larger program.
N// 
N// THIS SOFTWARE IS PROVIDED "AS IS" AND WITH ALL FAULTS.
N// NO WARRANTIES, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT
N// NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
N// A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE. TI SHALL NOT, UNDER ANY
N// CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR CONSEQUENTIAL
N// DAMAGES, FOR ANY REASON WHATSOEVER.
N// 
N// This is part of revision 2.0.1.11577 of the DK-TM4C129X Firmware Package.
N//
N//*****************************************************************************
N
N#include <stdbool.h>
L 1 "D:\Keil\ARM\ARMCC\bin\..\include\stdbool.h" 1
N/* stdbool.h: ISO/IEC 9899:1999 (C99), section 7.16 */
N
N/* Copyright (C) ARM Ltd., 2002
N * All rights reserved
N * RCS $Revision: 178085 $
N * Checkin $Date: 2012-12-11 14:54:17 +0000 (Tue, 11 Dec 2012) $
N * Revising $Author: drodgman $
N */
N
N#ifndef __bool_true_false_are_defined
N#define __bool_true_false_are_defined 1
N#define __ARMCLIB_VERSION 5030076
N
N  #ifndef __cplusplus /* In C++, 'bool', 'true' and 'false' and keywords */
N    #define bool _Bool
N    #define true 1
N    #define false 0
N  #else
S    #ifdef __GNUC__
S      /* GNU C++ supports direct inclusion of stdbool.h to provide C99
S         compatibility by defining _Bool */
S      #define _Bool bool
S    #endif
N  #endif
N
N#endif /* __bool_true_false_are_defined */
N
L 26 "web\enet_lwip.c" 2
N#include <stdint.h>
L 1 "D:\Keil\ARM\ARMCC\bin\..\include\stdint.h" 1
N/* Copyright (C) ARM Ltd., 1999 */
N/* All rights reserved */
N
N/*
N * RCS $Revision: 178085 $
N * Checkin $Date: 2012-12-11 14:54:17 +0000 (Tue, 11 Dec 2012) $
N * Revising $Author: agrant $
N */
N
N#ifndef __stdint_h
N#define __stdint_h
N#define __ARMCLIB_VERSION 5030076
N
N  #ifndef __STDINT_DECLS
N  #define __STDINT_DECLS
N
N    #undef __CLIBNS
N
N    #ifdef __cplusplus
S      namespace std {
S          #define __CLIBNS std::
S          extern "C" {
N    #else
N      #define __CLIBNS
N    #endif  /* __cplusplus */
N
N
N/*
N * 'signed' is redundant below, except for 'signed char' and if
N * the typedef is used to declare a bitfield.
N * '__int64' is used instead of 'long long' so that this header
N * can be used in --strict mode.
N */
N
N    /* 7.18.1.1 */
N
N    /* exact-width signed integer types */
Ntypedef   signed          char int8_t;
Ntypedef   signed short     int int16_t;
Ntypedef   signed           int int32_t;
Ntypedef   signed       __int64 int64_t;
N
N    /* exact-width unsigned integer types */
Ntypedef unsigned          char uint8_t;
Ntypedef unsigned short     int uint16_t;
Ntypedef unsigned           int uint32_t;
Ntypedef unsigned       __int64 uint64_t;
N
N    /* 7.18.1.2 */
N
N    /* smallest type of at least n bits */
N    /* minimum-width signed integer types */
Ntypedef   signed          char int_least8_t;
Ntypedef   signed short     int int_least16_t;
Ntypedef   signed           int int_least32_t;
Ntypedef   signed       __int64 int_least64_t;
N
N    /* minimum-width unsigned integer types */
Ntypedef unsigned          char uint_least8_t;
Ntypedef unsigned short     int uint_least16_t;
Ntypedef unsigned           int uint_least32_t;
Ntypedef unsigned       __int64 uint_least64_t;
N
N    /* 7.18.1.3 */
N
N    /* fastest minimum-width signed integer types */
Ntypedef   signed           int int_fast8_t;
Ntypedef   signed           int int_fast16_t;
Ntypedef   signed           int int_fast32_t;
Ntypedef   signed       __int64 int_fast64_t;
N
N    /* fastest minimum-width unsigned integer types */
Ntypedef unsigned           int uint_fast8_t;
Ntypedef unsigned           int uint_fast16_t;
Ntypedef unsigned           int uint_fast32_t;
Ntypedef unsigned       __int64 uint_fast64_t;
N
N    /* 7.18.1.4 integer types capable of holding object pointers */
Ntypedef   signed           int intptr_t;
Ntypedef unsigned           int uintptr_t;
N
N    /* 7.18.1.5 greatest-width integer types */
Ntypedef   signed       __int64 intmax_t;
Ntypedef unsigned       __int64 uintmax_t;
N
N
N#if !defined(__cplusplus) || defined(__STDC_LIMIT_MACROS)
X#if !0L || 0L
N
N    /* 7.18.2.1 */
N
N    /* minimum values of exact-width signed integer types */
N#define INT8_MIN                   -128
N#define INT16_MIN                -32768
N#define INT32_MIN          (~0x7fffffff)   /* -2147483648 is unsigned */
N#define INT64_MIN  __ESCAPE__(~0x7fffffffffffffffll) /* -9223372036854775808 is unsigned */
N
N    /* maximum values of exact-width signed integer types */
N#define INT8_MAX                    127
N#define INT16_MAX                 32767
N#define INT32_MAX            2147483647
N#define INT64_MAX  __ESCAPE__(9223372036854775807ll)
N
N    /* maximum values of exact-width unsigned integer types */
N#define UINT8_MAX                   255
N#define UINT16_MAX                65535
N#define UINT32_MAX           4294967295u
N#define UINT64_MAX __ESCAPE__(18446744073709551615ull)
N
N    /* 7.18.2.2 */
N
N    /* minimum values of minimum-width signed integer types */
N#define INT_LEAST8_MIN                   -128
N#define INT_LEAST16_MIN                -32768
N#define INT_LEAST32_MIN          (~0x7fffffff)
N#define INT_LEAST64_MIN  __ESCAPE__(~0x7fffffffffffffffll)
N
N    /* maximum values of minimum-width signed integer types */
N#define INT_LEAST8_MAX                    127
N#define INT_LEAST16_MAX                 32767
N#define INT_LEAST32_MAX            2147483647
N#define INT_LEAST64_MAX  __ESCAPE__(9223372036854775807ll)
N
N    /* maximum values of minimum-width unsigned integer types */
N#define UINT_LEAST8_MAX                   255
N#define UINT_LEAST16_MAX                65535
N#define UINT_LEAST32_MAX           4294967295u
N#define UINT_LEAST64_MAX __ESCAPE__(18446744073709551615ull)
N
N    /* 7.18.2.3 */
N
N    /* minimum values of fastest minimum-width signed integer types */
N#define INT_FAST8_MIN           (~0x7fffffff)
N#define INT_FAST16_MIN          (~0x7fffffff)
N#define INT_FAST32_MIN          (~0x7fffffff)
N#define INT_FAST64_MIN  __ESCAPE__(~0x7fffffffffffffffll)
N
N    /* maximum values of fastest minimum-width signed integer types */
N#define INT_FAST8_MAX             2147483647
N#define INT_FAST16_MAX            2147483647
N#define INT_FAST32_MAX            2147483647
N#define INT_FAST64_MAX  __ESCAPE__(9223372036854775807ll)
N
N    /* maximum values of fastest minimum-width unsigned integer types */
N#define UINT_FAST8_MAX            4294967295u
N#define UINT_FAST16_MAX           4294967295u
N#define UINT_FAST32_MAX           4294967295u
N#define UINT_FAST64_MAX __ESCAPE__(18446744073709551615ull)
N
N    /* 7.18.2.4 */
N
N    /* minimum value of pointer-holding signed integer type */
N#define INTPTR_MIN (~0x7fffffff)
N
N    /* maximum value of pointer-holding signed integer type */
N#define INTPTR_MAX   2147483647
N
N    /* maximum value of pointer-holding unsigned integer type */
N#define UINTPTR_MAX  4294967295u
N
N    /* 7.18.2.5 */
N
N    /* minimum value of greatest-width signed integer type */
N#define INTMAX_MIN  __ESCAPE__(~0x7fffffffffffffffll)
N
N    /* maximum value of greatest-width signed integer type */
N#define INTMAX_MAX  __ESCAPE__(9223372036854775807ll)
N
N    /* maximum value of greatest-width unsigned integer type */
N#define UINTMAX_MAX __ESCAPE__(18446744073709551615ull)
N
N    /* 7.18.3 */
N
N    /* limits of ptrdiff_t */
N#define PTRDIFF_MIN (~0x7fffffff)
N#define PTRDIFF_MAX   2147483647
N
N    /* limits of sig_atomic_t */
N#define SIG_ATOMIC_MIN (~0x7fffffff)
N#define SIG_ATOMIC_MAX   2147483647
N
N    /* limit of size_t */
N#define SIZE_MAX 4294967295u
N
N    /* limits of wchar_t */
N    /* NB we have to undef and redef because they're defined in both
N     * stdint.h and wchar.h */
N#undef WCHAR_MIN
N#undef WCHAR_MAX
N
N#if defined(__WCHAR32)
X#if 0L
S  #define WCHAR_MIN   0
S  #define WCHAR_MAX   0xffffffffU
N#else
N  #define WCHAR_MIN   0
N  #define WCHAR_MAX   65535
N#endif
N
N    /* limits of wint_t */
N#define WINT_MIN (~0x7fffffff)
N#define WINT_MAX 2147483647
N
N#endif /* __STDC_LIMIT_MACROS */
N
N#if !defined(__cplusplus) || defined(__STDC_CONSTANT_MACROS)
X#if !0L || 0L
N
N    /* 7.18.4.1 macros for minimum-width integer constants */
N#define INT8_C(x)   (x)
N#define INT16_C(x)  (x)
N#define INT32_C(x)  (x)
N#define INT64_C(x)  __ESCAPE__(x ## ll)
N
N#define UINT8_C(x)  (x ## u)
N#define UINT16_C(x) (x ## u)
N#define UINT32_C(x) (x ## u)
N#define UINT64_C(x) __ESCAPE__(x ## ull)
N
N    /* 7.18.4.2 macros for greatest-width integer constants */
N#define INTMAX_C(x)  __ESCAPE__(x ## ll)
N#define UINTMAX_C(x) __ESCAPE__(x ## ull)
N
N#endif /* __STDC_CONSTANT_MACROS */
N
N    #ifdef __cplusplus
S         }  /* extern "C" */
S      }  /* namespace std */
N    #endif /* __cplusplus */
N  #endif /* __STDINT_DECLS */
N
N  #ifdef __cplusplus
S    #ifndef __STDINT_NO_EXPORTS
S      using ::std::int8_t;
S      using ::std::int16_t;
S      using ::std::int32_t;
S      using ::std::int64_t;
S      using ::std::uint8_t;
S      using ::std::uint16_t;
S      using ::std::uint32_t;
S      using ::std::uint64_t;
S      using ::std::int_least8_t;
S      using ::std::int_least16_t;
S      using ::std::int_least32_t;
S      using ::std::int_least64_t;
S      using ::std::uint_least8_t;
S      using ::std::uint_least16_t;
S      using ::std::uint_least32_t;
S      using ::std::uint_least64_t;
S      using ::std::int_fast8_t;
S      using ::std::int_fast16_t;
S      using ::std::int_fast32_t;
S      using ::std::int_fast64_t;
S      using ::std::uint_fast8_t;
S      using ::std::uint_fast16_t;
S      using ::std::uint_fast32_t;
S      using ::std::uint_fast64_t;
S      using ::std::intptr_t;
S      using ::std::uintptr_t;
S      using ::std::intmax_t;
S      using ::std::uintmax_t;
S    #endif 
N  #endif /* __cplusplus */
N
N#endif /* __stdint_h */
N
N/* end of stdint.h */
N
N
N
L 27 "web\enet_lwip.c" 2
N#include "inc/hw_ints.h"
L 1 "..\MCU\inc/hw_ints.h" 1
N//*****************************************************************************
N//
N// hw_ints.h - Macros that define the interrupt assignment on Tiva C Series
N// MCUs.
N//
N// Copyright (c) 2005-2013 Texas Instruments Incorporated.  All rights reserved.
N// Software License Agreement
N// 
N//   Redistribution and use in source and binary forms, with or without
N//   modification, are permitted provided that the following conditions
N//   are met:
N// 
N//   Redistributions of source code must retain the above copyright
N//   notice, this list of conditions and the following disclaimer.
N// 
N//   Redistributions in binary form must reproduce the above copyright
N//   notice, this list of conditions and the following disclaimer in the
N//   documentation and/or other materials provided with the  
N//   distribution.
N// 
N//   Neither the name of Texas Instruments Incorporated nor the names of
N//   its contributors may be used to endorse or promote products derived
N//   from this software without specific prior written permission.
N// 
N// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
N// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
N// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
N// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
N// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
N// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
N// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
N// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
N// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
N// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
N// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
N// 
N// This is part of revision 2.0.1.11577 of the Tiva Firmware Development Package.
N//
N//*****************************************************************************
N
N#ifndef __HW_INTS_H__
N#define __HW_INTS_H__
N
N//*****************************************************************************
N//
N// The following are defines for the fault assignments.
N//
N//*****************************************************************************
N#define FAULT_NMI               2           // NMI fault
N#define FAULT_HARD              3           // Hard fault
N#define FAULT_MPU               4           // MPU fault
N#define FAULT_BUS               5           // Bus fault
N#define FAULT_USAGE             6           // Usage fault
N#define FAULT_SVCALL            11          // SVCall
N#define FAULT_DEBUG             12          // Debug monitor
N#define FAULT_PENDSV            14          // PendSV
N#define FAULT_SYSTICK           15          // System Tick
N
N//*****************************************************************************
N//
N// Blizzard Class Interrupts
N//
N//*****************************************************************************
N#define INT_GPIOA_BLIZZARD      16          // GPIO Port A
N#define INT_GPIOB_BLIZZARD      17          // GPIO Port B
N#define INT_GPIOC_BLIZZARD      18          // GPIO Port C
N#define INT_GPIOD_BLIZZARD      19          // GPIO Port D
N#define INT_GPIOE_BLIZZARD      20          // GPIO Port E
N#define INT_UART0_BLIZZARD      21          // UART0
N#define INT_UART1_BLIZZARD      22          // UART1
N#define INT_SSI0_BLIZZARD       23          // SSI0
N#define INT_I2C0_BLIZZARD       24          // I2C0
N#define INT_PWM0_FAULT_BLIZZARD 25          // PWM0 Fault
N#define INT_PWM0_0_BLIZZARD     26          // PWM0 Generator 0
N#define INT_PWM0_1_BLIZZARD     27          // PWM0 Generator 1
N#define INT_PWM0_2_BLIZZARD     28          // PWM0 Generator 2
N#define INT_QEI0_BLIZZARD       29          // QEI0
N#define INT_ADC0SS0_BLIZZARD    30          // ADC0 Sequence 0
N#define INT_ADC0SS1_BLIZZARD    31          // ADC0 Sequence 1
N#define INT_ADC0SS2_BLIZZARD    32          // ADC0 Sequence 2
N#define INT_ADC0SS3_BLIZZARD    33          // ADC0 Sequence 3
N#define INT_WATCHDOG_BLIZZARD   34          // Watchdog Timers 0 and 1
N#define INT_TIMER0A_BLIZZARD    35          // 16/32-Bit Timer 0A
N#define INT_TIMER0B_BLIZZARD    36          // 16/32-Bit Timer 0B
N#define INT_TIMER1A_BLIZZARD    37          // 16/32-Bit Timer 1A
N#define INT_TIMER1B_BLIZZARD    38          // 16/32-Bit Timer 1B
N#define INT_TIMER2A_BLIZZARD    39          // 16/32-Bit Timer 2A
N#define INT_TIMER2B_BLIZZARD    40          // 16/32-Bit Timer 2B
N#define INT_COMP0_BLIZZARD      41          // Analog Comparator 0
N#define INT_COMP1_BLIZZARD      42          // Analog Comparator 1
N#define INT_COMP2_BLIZZARD      43          // Analog Comparator 2
N#define INT_SYSCTL_BLIZZARD     44          // System Control
N#define INT_FLASH_BLIZZARD      45          // Flash Memory Control and EEPROM
N                                            // Control
N#define INT_GPIOF_BLIZZARD      46          // GPIO Port F
N#define INT_GPIOG_BLIZZARD      47          // GPIO Port G
N#define INT_GPIOH_BLIZZARD      48          // GPIO Port H
N#define INT_UART2_BLIZZARD      49          // UART2
N#define INT_SSI1_BLIZZARD       50          // SSI1
N#define INT_TIMER3A_BLIZZARD    51          // Timer 3A
N#define INT_TIMER3B_BLIZZARD    52          // Timer 3B
N#define INT_I2C1_BLIZZARD       53          // I2C1
N#define INT_QEI1_BLIZZARD       54          // QEI1
N#define INT_CAN0_BLIZZARD       55          // CAN0
N#define INT_CAN1_BLIZZARD       56          // CAN1
N#define INT_HIBERNATE_BLIZZARD  59          // Hibernation Module
N#define INT_USB0_BLIZZARD       60          // USB
N#define INT_PWM0_3_BLIZZARD     61          // PWM Generator 3
N#define INT_UDMA_BLIZZARD       62          // uDMA Software
N#define INT_UDMAERR_BLIZZARD    63          // uDMA Error
N#define INT_ADC1SS0_BLIZZARD    64          // ADC1 Sequence 0
N#define INT_ADC1SS1_BLIZZARD    65          // ADC1 Sequence 1
N#define INT_ADC1SS2_BLIZZARD    66          // ADC1 Sequence 2
N#define INT_ADC1SS3_BLIZZARD    67          // ADC1 Sequence 3
N#define INT_GPIOJ_BLIZZARD      70          // GPIO Port J
N#define INT_GPIOK_BLIZZARD      71          // GPIO Port K
N#define INT_GPIOL_BLIZZARD      72          // GPIO Port L
N#define INT_SSI2_BLIZZARD       73          // SSI2
N#define INT_SSI3_BLIZZARD       74          // SSI3
N#define INT_UART3_BLIZZARD      75          // UART3
N#define INT_UART4_BLIZZARD      76          // UART4
N#define INT_UART5_BLIZZARD      77          // UART5
N#define INT_UART6_BLIZZARD      78          // UART6
N#define INT_UART7_BLIZZARD      79          // UART7
N#define INT_I2C2_BLIZZARD       84          // I2C2
N#define INT_I2C3_BLIZZARD       85          // I2C3
N#define INT_TIMER4A_BLIZZARD    86          // 16/32-Bit Timer 4A
N#define INT_TIMER4B_BLIZZARD    87          // 16/32-Bit Timer 4B
N#define INT_TIMER5A_BLIZZARD    108         // 16/32-Bit Timer 5A
N#define INT_TIMER5B_BLIZZARD    109         // 16/32-Bit Timer 5B
N#define INT_WTIMER0A_BLIZZARD   110         // 32/64-Bit Timer 0A
N#define INT_WTIMER0B_BLIZZARD   111         // 32/64-Bit Timer 0B
N#define INT_WTIMER1A_BLIZZARD   112         // 32/64-Bit Timer 1A
N#define INT_WTIMER1B_BLIZZARD   113         // 32/64-Bit Timer 1B
N#define INT_WTIMER2A_BLIZZARD   114         // 32/64-Bit Timer 2A
N#define INT_WTIMER2B_BLIZZARD   115         // 32/64-Bit Timer 2B
N#define INT_WTIMER3A_BLIZZARD   116         // 32/64-Bit Timer 3A
N#define INT_WTIMER3B_BLIZZARD   117         // 32/64-Bit Timer 3B
N#define INT_WTIMER4A_BLIZZARD   118         // 32/64-Bit Timer 4A
N#define INT_WTIMER4B_BLIZZARD   119         // 32/64-Bit Timer 4B
N#define INT_WTIMER5A_BLIZZARD   120         // 32/64-Bit Timer 5A
N#define INT_WTIMER5B_BLIZZARD   121         // 32/64-Bit Timer 5B
N#define INT_SYSEXC_BLIZZARD     122         // System Exception (imprecise)
N#define INT_I2C4_BLIZZARD       125         // I2C4
N#define INT_I2C5_BLIZZARD       126         // I2C5
N#define INT_GPIOM_BLIZZARD      127         // GPIO Port M
N#define INT_GPION_BLIZZARD      128         // GPIO Port N
N#define INT_GPIOP0_BLIZZARD     132         // GPIO Port P (Summary or P0)
N#define INT_GPIOP1_BLIZZARD     133         // GPIO Port P1
N#define INT_GPIOP2_BLIZZARD     134         // GPIO Port P2
N#define INT_GPIOP3_BLIZZARD     135         // GPIO Port P3
N#define INT_GPIOP4_BLIZZARD     136         // GPIO Port P4
N#define INT_GPIOP5_BLIZZARD     137         // GPIO Port P5
N#define INT_GPIOP6_BLIZZARD     138         // GPIO Port P6
N#define INT_GPIOP7_BLIZZARD     139         // GPIO Port P7
N#define INT_GPIOQ0_BLIZZARD     140         // GPIO Port Q (Summary or Q0)
N#define INT_GPIOQ1_BLIZZARD     141         // GPIO Port Q1
N#define INT_GPIOQ2_BLIZZARD     142         // GPIO Port Q2
N#define INT_GPIOQ3_BLIZZARD     143         // GPIO Port Q3
N#define INT_GPIOQ4_BLIZZARD     144         // GPIO Port Q4
N#define INT_GPIOQ5_BLIZZARD     145         // GPIO Port Q5
N#define INT_GPIOQ6_BLIZZARD     146         // GPIO Port Q6
N#define INT_GPIOQ7_BLIZZARD     147         // GPIO Port Q7
N#define INT_PWM1_0_BLIZZARD     150         // PWM1 Generator 0
N#define INT_PWM1_1_BLIZZARD     151         // PWM1 Generator 1
N#define INT_PWM1_2_BLIZZARD     152         // PWM1 Generator 2
N#define INT_PWM1_3_BLIZZARD     153         // PWM1 Generator 3
N#define INT_PWM1_FAULT_BLIZZARD 154         // PWM1 Fault
N#define NUM_INTERRUPTS_BLIZZARD 155
N
N//*****************************************************************************
N//
N// Snowflake Class Interrupts
N//
N//*****************************************************************************
N#define INT_GPIOA_SNOWFLAKE     16          // GPIO Port A
N#define INT_GPIOB_SNOWFLAKE     17          // GPIO Port B
N#define INT_GPIOC_SNOWFLAKE     18          // GPIO Port C
N#define INT_GPIOD_SNOWFLAKE     19          // GPIO Port D
N#define INT_GPIOE_SNOWFLAKE     20          // GPIO Port E
N#define INT_UART0_SNOWFLAKE     21          // UART0
N#define INT_UART1_SNOWFLAKE     22          // UART1
N#define INT_SSI0_SNOWFLAKE      23          // SSI0
N#define INT_I2C0_SNOWFLAKE      24          // I2C0
N#define INT_PWM0_FAULT_SNOWFLAKE                                              \
N                                25          // PWM Fault
X#define INT_PWM0_FAULT_SNOWFLAKE                                                                              25          
N#define INT_PWM0_0_SNOWFLAKE    26          // PWM Generator 0
N#define INT_PWM0_1_SNOWFLAKE    27          // PWM Generator 1
N#define INT_PWM0_2_SNOWFLAKE    28          // PWM Generator 2
N#define INT_QEI0_SNOWFLAKE      29          // QEI0
N#define INT_ADC0SS0_SNOWFLAKE   30          // ADC0 Sequence 0
N#define INT_ADC0SS1_SNOWFLAKE   31          // ADC0 Sequence 1
N#define INT_ADC0SS2_SNOWFLAKE   32          // ADC0 Sequence 2
N#define INT_ADC0SS3_SNOWFLAKE   33          // ADC0 Sequence 3
N#define INT_WATCHDOG_SNOWFLAKE  34          // Watchdog Timers 0 and 1
N#define INT_TIMER0A_SNOWFLAKE   35          // 16/32-Bit Timer 0A
N#define INT_TIMER0B_SNOWFLAKE   36          // 16/32-Bit Timer 0B
N#define INT_TIMER1A_SNOWFLAKE   37          // 16/32-Bit Timer 1A
N#define INT_TIMER1B_SNOWFLAKE   38          // 16/32-Bit Timer 1B
N#define INT_TIMER2A_SNOWFLAKE   39          // 16/32-Bit Timer 2A
N#define INT_TIMER2B_SNOWFLAKE   40          // 16/32-Bit Timer 2B
N#define INT_COMP0_SNOWFLAKE     41          // Analog Comparator 0
N#define INT_COMP1_SNOWFLAKE     42          // Analog Comparator 1
N#define INT_COMP2_SNOWFLAKE     43          // Analog Comparator 2
N#define INT_SYSCTL_SNOWFLAKE    44          // System Control
N#define INT_FLASH_SNOWFLAKE     45          // Flash Memory Control
N#define INT_GPIOF_SNOWFLAKE     46          // GPIO Port F
N#define INT_GPIOG_SNOWFLAKE     47          // GPIO Port G
N#define INT_GPIOH_SNOWFLAKE     48          // GPIO Port H
N#define INT_UART2_SNOWFLAKE     49          // UART2
N#define INT_SSI1_SNOWFLAKE      50          // SSI1
N#define INT_TIMER3A_SNOWFLAKE   51          // 16/32-Bit Timer 3A
N#define INT_TIMER3B_SNOWFLAKE   52          // 16/32-Bit Timer 3B
N#define INT_I2C1_SNOWFLAKE      53          // I2C1
N#define INT_CAN0_SNOWFLAKE      54          // CAN 0
N#define INT_CAN1_SNOWFLAKE      55          // CAN1
N#define INT_EMAC0_SNOWFLAKE     56          // Ethernet MAC
N#define INT_HIBERNATE_SNOWFLAKE 57          // HIB (Power Island)
N#define INT_USB0_SNOWFLAKE      58          // USB MAC
N#define INT_PWM0_3_SNOWFLAKE    59          // PWM Generator 3
N#define INT_UDMA_SNOWFLAKE      60          // uDMA 0 Software
N#define INT_UDMAERR_SNOWFLAKE   61          // uDMA 0 Error
N#define INT_ADC1SS0_SNOWFLAKE   62          // ADC1 Sequence 0
N#define INT_ADC1SS1_SNOWFLAKE   63          // ADC1 Sequence 1
N#define INT_ADC1SS2_SNOWFLAKE   64          // ADC1 Sequence 2
N#define INT_ADC1SS3_SNOWFLAKE   65          // ADC1 Sequence 3
N#define INT_EPI0_SNOWFLAKE      66          // EPI 0
N#define INT_GPIOJ_SNOWFLAKE     67          // GPIO Port J
N#define INT_GPIOK_SNOWFLAKE     68          // GPIO Port K
N#define INT_GPIOL_SNOWFLAKE     69          // GPIO Port L
N#define INT_SSI2_SNOWFLAKE      70          // SSI 2
N#define INT_SSI3_SNOWFLAKE      71          // SSI 3
N#define INT_UART3_SNOWFLAKE     72          // UART 3
N#define INT_UART4_SNOWFLAKE     73          // UART 4
N#define INT_UART5_SNOWFLAKE     74          // UART 5
N#define INT_UART6_SNOWFLAKE     75          // UART 6
N#define INT_UART7_SNOWFLAKE     76          // UART 7
N#define INT_I2C2_SNOWFLAKE      77          // I2C 2
N#define INT_I2C3_SNOWFLAKE      78          // I2C 3
N#define INT_TIMER4A_SNOWFLAKE   79          // Timer 4A
N#define INT_TIMER4B_SNOWFLAKE   80          // Timer 4B
N#define INT_TIMER5A_SNOWFLAKE   81          // Timer 5A
N#define INT_TIMER5B_SNOWFLAKE   82          // Timer 5B
N#define INT_SYSEXC_SNOWFLAKE    83          // Floating-Point Exception
N                                            // (imprecise)
N#define INT_I2C4_SNOWFLAKE      86          // I2C 4
N#define INT_I2C5_SNOWFLAKE      87          // I2C 5
N#define INT_GPIOM_SNOWFLAKE     88          // GPIO Port M
N#define INT_GPION_SNOWFLAKE     89          // GPIO Port N
N#define INT_TAMPER0_SNOWFLAKE   91          // Tamper
N#define INT_GPIOP0_SNOWFLAKE    92          // GPIO Port P (Summary or P0)
N#define INT_GPIOP1_SNOWFLAKE    93          // GPIO Port P1
N#define INT_GPIOP2_SNOWFLAKE    94          // GPIO Port P2
N#define INT_GPIOP3_SNOWFLAKE    95          // GPIO Port P3
N#define INT_GPIOP4_SNOWFLAKE    96          // GPIO Port P4
N#define INT_GPIOP5_SNOWFLAKE    97          // GPIO Port P5
N#define INT_GPIOP6_SNOWFLAKE    98          // GPIO Port P6
N#define INT_GPIOP7_SNOWFLAKE    99          // GPIO Port P7
N#define INT_GPIOQ0_SNOWFLAKE    100         // GPIO Port Q (Summary or Q0)
N#define INT_GPIOQ1_SNOWFLAKE    101         // GPIO Port Q1
N#define INT_GPIOQ2_SNOWFLAKE    102         // GPIO Port Q2
N#define INT_GPIOQ3_SNOWFLAKE    103         // GPIO Port Q3
N#define INT_GPIOQ4_SNOWFLAKE    104         // GPIO Port Q4
N#define INT_GPIOQ5_SNOWFLAKE    105         // GPIO Port Q5
N#define INT_GPIOQ6_SNOWFLAKE    106         // GPIO Port Q6
N#define INT_GPIOQ7_SNOWFLAKE    107         // GPIO Port Q7
N#define INT_GPIOR_SNOWFLAKE     108         // GPIO Port R
N#define INT_GPIOS_SNOWFLAKE     109         // GPIO Port S
N#define INT_SHA0_SNOWFLAKE      110         // SHA/MD5
N#define INT_AES0_SNOWFLAKE      111         // AES
N#define INT_DES0_SNOWFLAKE      112         // DES
N#define INT_LCD0_SNOWFLAKE      113         // LCD
N#define INT_TIMER6A_SNOWFLAKE   114         // 16/32-Bit Timer 6A
N#define INT_TIMER6B_SNOWFLAKE   115         // 16/32-Bit Timer 6B
N#define INT_TIMER7A_SNOWFLAKE   116         // 16/32-Bit Timer 7A
N#define INT_TIMER7B_SNOWFLAKE   117         // 16/32-Bit Timer 7B
N#define INT_I2C6_SNOWFLAKE      118         // I2C 6
N#define INT_I2C7_SNOWFLAKE      119         // I2C 7
N#define INT_ONEWIRE0_SNOWFLAKE  121         // 1-Wire
N#define INT_I2C8_SNOWFLAKE      125         // I2C 8
N#define INT_I2C9_SNOWFLAKE      126         // I2C 9
N#define INT_GPIOT_SNOWFLAKE     127         // GPIO T
N#define NUM_INTERRUPTS_SNOWFLAKE                                              \
N                                129
X#define NUM_INTERRUPTS_SNOWFLAKE                                                                              129
N
N//*****************************************************************************
N//
N// Blizzard Interrupt Class Definition
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) || defined(TARGET_IS_BLIZZARD_RA2) || \
N    defined(TARGET_IS_BLIZZARD_RA3) || defined(TARGET_IS_BLIZZARD_RB0) || \
N    defined(TARGET_IS_BLIZZARD_RB1) || defined(PART_TM4C1230C3PM) || \
N    defined(PART_TM4C1230D5PM) || defined(PART_TM4C1230E6PM) || \
N    defined(PART_TM4C1230H6PM) || defined(PART_TM4C1231C3PM) || \
N    defined(PART_TM4C1231D5PM) || defined(PART_TM4C1231D5PZ) || \
N    defined(PART_TM4C1231E6PM) || defined(PART_TM4C1231E6PZ) || \
N    defined(PART_TM4C1231H6PM) || defined(PART_TM4C1231H6PZ) || \
N    defined(PART_TM4C1232C3PM) || defined(PART_TM4C1232D5PM) || \
N    defined(PART_TM4C1232E6PM) || defined(PART_TM4C1232H6PM) || \
N    defined(PART_TM4C1233C3PM) || defined(PART_TM4C1233D5PM) || \
N    defined(PART_TM4C1233D5PZ) || defined(PART_TM4C1233E6PM) || \
N    defined(PART_TM4C1233E6PZ) || defined(PART_TM4C1233H6PM) || \
N    defined(PART_TM4C1233H6PZ) || defined(PART_TM4C1236D5PM) || \
N    defined(PART_TM4C1236E6PM) || defined(PART_TM4C1236H6PM) || \
N    defined(PART_TM4C1237D5PM) || defined(PART_TM4C1237D5PZ) || \
N    defined(PART_TM4C1237E6PM) || defined(PART_TM4C1237E6PZ) || \
N    defined(PART_TM4C1237H6PM) || defined(PART_TM4C1237H6PZ) || \
N    defined(PART_TM4C123AE6PM) || defined(PART_TM4C123AH6PM) || \
N    defined(PART_TM4C123BE6PM) || defined(PART_TM4C123BE6PZ) || \
N    defined(PART_TM4C123BH6PM) || defined(PART_TM4C123BH6PZ) || \
N    defined(PART_TM4C123FE6PM) || defined(PART_TM4C123FH6PM) || \
N    defined(PART_TM4C123GE6PM) || defined(PART_TM4C123GE6PZ) || \
N    defined(PART_TM4C123GH6PM) || defined(PART_TM4C123GH6PZ) || \
N    defined(PART_TM4C1231H6PGE) || defined(PART_TM4C1233H6PGE) || \
N    defined(PART_TM4C1237H6PGE) || defined(PART_TM4C123BH6PGE) || \
N    defined(PART_TM4C123BH6ZRB) || defined(PART_TM4C123GH6PGE) || \
N    defined(PART_TM4C123GH6ZRB)
X#if 0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L
S#define INT_RESOLVE(intname, class) intname##BLIZZARD
S
S//*****************************************************************************
S//
S// Snowflake Interrupt Class Definition
S//
S//*****************************************************************************
N#elif defined(TARGET_IS_SNOWFLAKE_RA0) || defined(PART_TM4C1290NCPDT) || \
N    defined(PART_TM4C1290NCZAD) || defined(PART_TM4C1292NCPDT) || \
N    defined(PART_TM4C1292NCZAD) || defined(PART_TM4C1294NCPDT) || \
N    defined(PART_TM4C1294NCZAD) || defined(PART_TM4C129CNCPDT) || \
N    defined(PART_TM4C129CNCZAD) || defined(PART_TM4C129DNCPDT) || \
N    defined(PART_TM4C129DNCZAD) || defined(PART_TM4C129ENCPDT) || \
N    defined(PART_TM4C129ENCZAD) || defined(PART_TM4C129XNCZAD)
X#elif 1L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 0L ||     0L || 1L
N#define INT_RESOLVE(intname, class) intname##SNOWFLAKE
N#else
S#define INT_DEVICE_CLASS        "UNKNOWN"
N#endif
N
N//*****************************************************************************
N//
N// Macros to resolve the INT_PERIPH_CLASS name to a common INT_PERIPH name.
N//
N//*****************************************************************************
N#define INT_CONCAT(intname, class)  INT_RESOLVE(intname, class)
N
N//*****************************************************************************
N//
N// The following are defines for the interrupt assignments.
N//
N//*****************************************************************************
N#define INT_ADC0SS0             INT_CONCAT(INT_ADC0SS0_, INT_DEVICE_CLASS)
N#define INT_ADC0SS1             INT_CONCAT(INT_ADC0SS1_, INT_DEVICE_CLASS)
N#define INT_ADC0SS2             INT_CONCAT(INT_ADC0SS2_, INT_DEVICE_CLASS)
N#define INT_ADC0SS3             INT_CONCAT(INT_ADC0SS3_, INT_DEVICE_CLASS)
N#define INT_ADC1SS0             INT_CONCAT(INT_ADC1SS0_, INT_DEVICE_CLASS)
N#define INT_ADC1SS1             INT_CONCAT(INT_ADC1SS1_, INT_DEVICE_CLASS)
N#define INT_ADC1SS2             INT_CONCAT(INT_ADC1SS2_, INT_DEVICE_CLASS)
N#define INT_ADC1SS3             INT_CONCAT(INT_ADC1SS3_, INT_DEVICE_CLASS)
N#define INT_AES0                INT_CONCAT(INT_AES0_, INT_DEVICE_CLASS)
N#define INT_CAN0                INT_CONCAT(INT_CAN0_, INT_DEVICE_CLASS)
N#define INT_CAN1                INT_CONCAT(INT_CAN1_, INT_DEVICE_CLASS)
N#define INT_COMP0               INT_CONCAT(INT_COMP0_, INT_DEVICE_CLASS)
N#define INT_COMP1               INT_CONCAT(INT_COMP1_, INT_DEVICE_CLASS)
N#define INT_COMP2               INT_CONCAT(INT_COMP2_, INT_DEVICE_CLASS)
N#define INT_DES0                INT_CONCAT(INT_DES0_, INT_DEVICE_CLASS)
N#define INT_EMAC0               INT_CONCAT(INT_EMAC0_, INT_DEVICE_CLASS)
N#define INT_EPI0                INT_CONCAT(INT_EPI0_, INT_DEVICE_CLASS)
N#define INT_FLASH               INT_CONCAT(INT_FLASH_, INT_DEVICE_CLASS)
N#define INT_GPIOA               INT_CONCAT(INT_GPIOA_, INT_DEVICE_CLASS)
N#define INT_GPIOB               INT_CONCAT(INT_GPIOB_, INT_DEVICE_CLASS)
N#define INT_GPIOC               INT_CONCAT(INT_GPIOC_, INT_DEVICE_CLASS)
N#define INT_GPIOD               INT_CONCAT(INT_GPIOD_, INT_DEVICE_CLASS)
N#define INT_GPIOE               INT_CONCAT(INT_GPIOE_, INT_DEVICE_CLASS)
N#define INT_GPIOF               INT_CONCAT(INT_GPIOF_, INT_DEVICE_CLASS)
N#define INT_GPIOG               INT_CONCAT(INT_GPIOG_, INT_DEVICE_CLASS)
N#define INT_GPIOH               INT_CONCAT(INT_GPIOH_, INT_DEVICE_CLASS)
N#define INT_GPIOJ               INT_CONCAT(INT_GPIOJ_, INT_DEVICE_CLASS)
N#define INT_GPIOK               INT_CONCAT(INT_GPIOK_, INT_DEVICE_CLASS)
N#define INT_GPIOL               INT_CONCAT(INT_GPIOL_, INT_DEVICE_CLASS)
N#define INT_GPIOM               INT_CONCAT(INT_GPIOM_, INT_DEVICE_CLASS)
N#define INT_GPION               INT_CONCAT(INT_GPION_, INT_DEVICE_CLASS)
N#define INT_GPIOP0              INT_CONCAT(INT_GPIOP0_, INT_DEVICE_CLASS)
N#define INT_GPIOP1              INT_CONCAT(INT_GPIOP1_, INT_DEVICE_CLASS)
N#define INT_GPIOP2              INT_CONCAT(INT_GPIOP2_, INT_DEVICE_CLASS)
N#define INT_GPIOP3              INT_CONCAT(INT_GPIOP3_, INT_DEVICE_CLASS)
N#define INT_GPIOP4              INT_CONCAT(INT_GPIOP4_, INT_DEVICE_CLASS)
N#define INT_GPIOP5              INT_CONCAT(INT_GPIOP5_, INT_DEVICE_CLASS)
N#define INT_GPIOP6              INT_CONCAT(INT_GPIOP6_, INT_DEVICE_CLASS)
N#define INT_GPIOP7              INT_CONCAT(INT_GPIOP7_, INT_DEVICE_CLASS)
N#define INT_GPIOQ0              INT_CONCAT(INT_GPIOQ0_, INT_DEVICE_CLASS)
N#define INT_GPIOQ1              INT_CONCAT(INT_GPIOQ1_, INT_DEVICE_CLASS)
N#define INT_GPIOQ2              INT_CONCAT(INT_GPIOQ2_, INT_DEVICE_CLASS)
N#define INT_GPIOQ3              INT_CONCAT(INT_GPIOQ3_, INT_DEVICE_CLASS)
N#define INT_GPIOQ4              INT_CONCAT(INT_GPIOQ4_, INT_DEVICE_CLASS)
N#define INT_GPIOQ5              INT_CONCAT(INT_GPIOQ5_, INT_DEVICE_CLASS)
N#define INT_GPIOQ6              INT_CONCAT(INT_GPIOQ6_, INT_DEVICE_CLASS)
N#define INT_GPIOQ7              INT_CONCAT(INT_GPIOQ7_, INT_DEVICE_CLASS)
N#define INT_GPIOR               INT_CONCAT(INT_GPIOR_, INT_DEVICE_CLASS)
N#define INT_GPIOS               INT_CONCAT(INT_GPIOS_, INT_DEVICE_CLASS)
N#define INT_GPIOT               INT_CONCAT(INT_GPIOT_, INT_DEVICE_CLASS)
N#define INT_HIBERNATE           INT_CONCAT(INT_HIBERNATE_, INT_DEVICE_CLASS)
N#define INT_I2C0                INT_CONCAT(INT_I2C0_, INT_DEVICE_CLASS)
N#define INT_I2C1                INT_CONCAT(INT_I2C1_, INT_DEVICE_CLASS)
N#define INT_I2C2                INT_CONCAT(INT_I2C2_, INT_DEVICE_CLASS)
N#define INT_I2C3                INT_CONCAT(INT_I2C3_, INT_DEVICE_CLASS)
N#define INT_I2C4                INT_CONCAT(INT_I2C4_, INT_DEVICE_CLASS)
N#define INT_I2C5                INT_CONCAT(INT_I2C5_, INT_DEVICE_CLASS)
N#define INT_I2C6                INT_CONCAT(INT_I2C6_, INT_DEVICE_CLASS)
N#define INT_I2C7                INT_CONCAT(INT_I2C7_, INT_DEVICE_CLASS)
N#define INT_I2C8                INT_CONCAT(INT_I2C8_, INT_DEVICE_CLASS)
N#define INT_I2C9                INT_CONCAT(INT_I2C9_, INT_DEVICE_CLASS)
N#define INT_LCD0                INT_CONCAT(INT_LCD0_, INT_DEVICE_CLASS)
N#define INT_ONEWIRE0            INT_CONCAT(INT_ONEWIRE0_, INT_DEVICE_CLASS)
N#define INT_PWM0_0              INT_CONCAT(INT_PWM0_0_, INT_DEVICE_CLASS)
N#define INT_PWM0_1              INT_CONCAT(INT_PWM0_1_, INT_DEVICE_CLASS)
N#define INT_PWM0_2              INT_CONCAT(INT_PWM0_2_, INT_DEVICE_CLASS)
N#define INT_PWM0_3              INT_CONCAT(INT_PWM0_3_, INT_DEVICE_CLASS)
N#define INT_PWM0_FAULT          INT_CONCAT(INT_PWM0_FAULT_, INT_DEVICE_CLASS)
N#define INT_PWM1_0              INT_CONCAT(INT_PWM1_0_, INT_DEVICE_CLASS)
N#define INT_PWM1_1              INT_CONCAT(INT_PWM1_1_, INT_DEVICE_CLASS)
N#define INT_PWM1_2              INT_CONCAT(INT_PWM1_2_, INT_DEVICE_CLASS)
N#define INT_PWM1_3              INT_CONCAT(INT_PWM1_3_, INT_DEVICE_CLASS)
N#define INT_PWM1_FAULT          INT_CONCAT(INT_PWM1_FAULT_, INT_DEVICE_CLASS)
N#define INT_QEI0                INT_CONCAT(INT_QEI0_, INT_DEVICE_CLASS)
N#define INT_QEI1                INT_CONCAT(INT_QEI1_, INT_DEVICE_CLASS)
N#define INT_SHA0                INT_CONCAT(INT_SHA0_, INT_DEVICE_CLASS)
N#define INT_SSI0                INT_CONCAT(INT_SSI0_, INT_DEVICE_CLASS)
N#define INT_SSI1                INT_CONCAT(INT_SSI1_, INT_DEVICE_CLASS)
N#define INT_SSI2                INT_CONCAT(INT_SSI2_, INT_DEVICE_CLASS)
N#define INT_SSI3                INT_CONCAT(INT_SSI3_, INT_DEVICE_CLASS)
N#define INT_SYSCTL              INT_CONCAT(INT_SYSCTL_, INT_DEVICE_CLASS)
N#define INT_SYSEXC              INT_CONCAT(INT_SYSEXC_, INT_DEVICE_CLASS)
N#define INT_TAMPER0             INT_CONCAT(INT_TAMPER0_, INT_DEVICE_CLASS)
N#define INT_TIMER0A             INT_CONCAT(INT_TIMER0A_, INT_DEVICE_CLASS)
N#define INT_TIMER0B             INT_CONCAT(INT_TIMER0B_, INT_DEVICE_CLASS)
N#define INT_TIMER1A             INT_CONCAT(INT_TIMER1A_, INT_DEVICE_CLASS)
N#define INT_TIMER1B             INT_CONCAT(INT_TIMER1B_, INT_DEVICE_CLASS)
N#define INT_TIMER2A             INT_CONCAT(INT_TIMER2A_, INT_DEVICE_CLASS)
N#define INT_TIMER2B             INT_CONCAT(INT_TIMER2B_, INT_DEVICE_CLASS)
N#define INT_TIMER3A             INT_CONCAT(INT_TIMER3A_, INT_DEVICE_CLASS)
N#define INT_TIMER3B             INT_CONCAT(INT_TIMER3B_, INT_DEVICE_CLASS)
N#define INT_TIMER4A             INT_CONCAT(INT_TIMER4A_, INT_DEVICE_CLASS)
N#define INT_TIMER4B             INT_CONCAT(INT_TIMER4B_, INT_DEVICE_CLASS)
N#define INT_TIMER5A             INT_CONCAT(INT_TIMER5A_, INT_DEVICE_CLASS)
N#define INT_TIMER5B             INT_CONCAT(INT_TIMER5B_, INT_DEVICE_CLASS)
N#define INT_TIMER6A             INT_CONCAT(INT_TIMER6A_, INT_DEVICE_CLASS)
N#define INT_TIMER6B             INT_CONCAT(INT_TIMER6B_, INT_DEVICE_CLASS)
N#define INT_TIMER7A             INT_CONCAT(INT_TIMER7A_, INT_DEVICE_CLASS)
N#define INT_TIMER7B             INT_CONCAT(INT_TIMER7B_, INT_DEVICE_CLASS)
N#define INT_UART0               INT_CONCAT(INT_UART0_, INT_DEVICE_CLASS)
N#define INT_UART1               INT_CONCAT(INT_UART1_, INT_DEVICE_CLASS)
N#define INT_UART2               INT_CONCAT(INT_UART2_, INT_DEVICE_CLASS)
N#define INT_UART3               INT_CONCAT(INT_UART3_, INT_DEVICE_CLASS)
N#define INT_UART4               INT_CONCAT(INT_UART4_, INT_DEVICE_CLASS)
N#define INT_UART5               INT_CONCAT(INT_UART5_, INT_DEVICE_CLASS)
N#define INT_UART6               INT_CONCAT(INT_UART6_, INT_DEVICE_CLASS)
N#define INT_UART7               INT_CONCAT(INT_UART7_, INT_DEVICE_CLASS)
N#define INT_UDMA                INT_CONCAT(INT_UDMA_, INT_DEVICE_CLASS)
N#define INT_UDMAERR             INT_CONCAT(INT_UDMAERR_, INT_DEVICE_CLASS)
N#define INT_USB0                INT_CONCAT(INT_USB0_, INT_DEVICE_CLASS)
N#define INT_WATCHDOG            INT_CONCAT(INT_WATCHDOG_, INT_DEVICE_CLASS)
N#define INT_WTIMER0A            INT_CONCAT(INT_WTIMER0A_, INT_DEVICE_CLASS)
N#define INT_WTIMER0B            INT_CONCAT(INT_WTIMER0B_, INT_DEVICE_CLASS)
N#define INT_WTIMER1A            INT_CONCAT(INT_WTIMER1A_, INT_DEVICE_CLASS)
N#define INT_WTIMER1B            INT_CONCAT(INT_WTIMER1B_, INT_DEVICE_CLASS)
N#define INT_WTIMER2A            INT_CONCAT(INT_WTIMER2A_, INT_DEVICE_CLASS)
N#define INT_WTIMER2B            INT_CONCAT(INT_WTIMER2B_, INT_DEVICE_CLASS)
N#define INT_WTIMER3A            INT_CONCAT(INT_WTIMER3A_, INT_DEVICE_CLASS)
N#define INT_WTIMER3B            INT_CONCAT(INT_WTIMER3B_, INT_DEVICE_CLASS)
N#define INT_WTIMER4A            INT_CONCAT(INT_WTIMER4A_, INT_DEVICE_CLASS)
N#define INT_WTIMER4B            INT_CONCAT(INT_WTIMER4B_, INT_DEVICE_CLASS)
N#define INT_WTIMER5A            INT_CONCAT(INT_WTIMER5A_, INT_DEVICE_CLASS)
N#define INT_WTIMER5B            INT_CONCAT(INT_WTIMER5B_, INT_DEVICE_CLASS)
N
N//*****************************************************************************
N//
N// The following are defines for the total number of interrupts.
N//
N//*****************************************************************************
N#define NUM_INTERRUPTS          INT_CONCAT(NUM_INTERRUPTS_, INT_DEVICE_CLASS)
N
N//*****************************************************************************
N//
N// The following are defines for the total number of priority levels.
N//
N//*****************************************************************************
N#define NUM_PRIORITY            8
N#define NUM_PRIORITY_BITS       3
N
N#endif // __HW_INTS_H__
L 28 "web\enet_lwip.c" 2
N#include "driverlib/interrupt.h"
L 1 "..\MCU\driverlib/interrupt.h" 1
N//*****************************************************************************
N//
N// interrupt.h - Prototypes for the NVIC Interrupt Controller Driver.
N//
N// Copyright (c) 2005-2013 Texas Instruments Incorporated.  All rights reserved.
N// Software License Agreement
N// 
N//   Redistribution and use in source and binary forms, with or without
N//   modification, are permitted provided that the following conditions
N//   are met:
N// 
N//   Redistributions of source code must retain the above copyright
N//   notice, this list of conditions and the following disclaimer.
N// 
N//   Redistributions in binary form must reproduce the above copyright
N//   notice, this list of conditions and the following disclaimer in the
N//   documentation and/or other materials provided with the  
N//   distribution.
N// 
N//   Neither the name of Texas Instruments Incorporated nor the names of
N//   its contributors may be used to endorse or promote products derived
N//   from this software without specific prior written permission.
N// 
N// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
N// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
N// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
N// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
N// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
N// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
N// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
N// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
N// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
N// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
N// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
N// 
N// This is part of revision 2.0.1.11577 of the Tiva Peripheral Driver Library.
N//
N//*****************************************************************************
N
N#ifndef __DRIVERLIB_INTERRUPT_H__
N#define __DRIVERLIB_INTERRUPT_H__
N
N//*****************************************************************************
N//
N// If building with a C++ compiler, make all of the definitions in this header
N// have a C binding.
N//
N//*****************************************************************************
N#ifdef __cplusplus
Sextern "C"
S{
N#endif
N
N//*****************************************************************************
N//
N// Macro to generate an interrupt priority mask based on the number of bits
N// of priority supported by the hardware.
N//
N//*****************************************************************************
N#define INT_PRIORITY_MASK       ((0xFF << (8 - NUM_PRIORITY_BITS)) & 0xFF)
N
N//*****************************************************************************
N//
N// Prototypes for the APIs.
N//
N//*****************************************************************************
Nextern bool IntMasterEnable(void);
Xextern _Bool IntMasterEnable(void);
Nextern bool IntMasterDisable(void);
Xextern _Bool IntMasterDisable(void);
Nextern void IntRegister(uint32_t ui32Interrupt, void (*pfnHandler)(void));
Nextern void IntUnregister(uint32_t ui32Interrupt);
Nextern void IntPriorityGroupingSet(uint32_t ui32Bits);
Nextern uint32_t IntPriorityGroupingGet(void);
Nextern void IntPrioritySet(uint32_t ui32Interrupt,
N                           uint8_t ui8Priority);
Nextern int32_t IntPriorityGet(uint32_t ui32Interrupt);
Nextern void IntEnable(uint32_t ui32Interrupt);
Nextern void IntDisable(uint32_t ui32Interrupt);
Nextern uint32_t IntIsEnabled(uint32_t ui32Interrupt);
Nextern void IntPendSet(uint32_t ui32Interrupt);
Nextern void IntPendClear(uint32_t ui32Interrupt);
Nextern void IntPriorityMaskSet(uint32_t ui32PriorityMask);
Nextern uint32_t IntPriorityMaskGet(void);
Nextern void IntTrigger(uint32_t ui32Interrupt);
N
N//*****************************************************************************
N//
N// Mark the end of the C bindings section for C++ compilers.
N//
N//*****************************************************************************
N#ifdef __cplusplus
S}
N#endif
N
N#endif // __DRIVERLIB_INTERRUPT_H__
L 29 "web\enet_lwip.c" 2
N#include "driverlib/rom.h"
L 1 "..\MCU\driverlib/rom.h" 1
N//*****************************************************************************
N//
N// rom.h - Macros to facilitate calling functions in the ROM.
N//
N// Copyright (c) 2007-2013 Texas Instruments Incorporated.  All rights reserved.
N// Software License Agreement
N// 
N//   Redistribution and use in source and binary forms, with or without
N//   modification, are permitted provided that the following conditions
N//   are met:
N// 
N//   Redistributions of source code must retain the above copyright
N//   notice, this list of conditions and the following disclaimer.
N// 
N//   Redistributions in binary form must reproduce the above copyright
N//   notice, this list of conditions and the following disclaimer in the
N//   documentation and/or other materials provided with the  
N//   distribution.
N// 
N//   Neither the name of Texas Instruments Incorporated nor the names of
N//   its contributors may be used to endorse or promote products derived
N//   from this software without specific prior written permission.
N// 
N// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
N// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
N// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
N// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
N// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
N// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
N// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
N// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
N// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
N// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
N// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
N// 
N// This is part of revision 2.0.1.11577 of the Tiva Peripheral Driver Library.
N//
N//*****************************************************************************
N
N#ifndef __DRIVERLIB_ROM_H__
N#define __DRIVERLIB_ROM_H__
N
N//*****************************************************************************
N//
N// Pointers to the main API tables.
N//
N//*****************************************************************************
N#define ROM_APITABLE            ((uint32_t *)0x01000010)
N#define ROM_VERSION             (ROM_APITABLE[0])
N#define ROM_UARTTABLE           ((uint32_t *)(ROM_APITABLE[1]))
N#define ROM_SSITABLE            ((uint32_t *)(ROM_APITABLE[2]))
N#define ROM_I2CTABLE            ((uint32_t *)(ROM_APITABLE[3]))
N#define ROM_GPIOTABLE           ((uint32_t *)(ROM_APITABLE[4]))
N#define ROM_ADCTABLE            ((uint32_t *)(ROM_APITABLE[5]))
N#define ROM_COMPARATORTABLE     ((uint32_t *)(ROM_APITABLE[6]))
N#define ROM_FLASHTABLE          ((uint32_t *)(ROM_APITABLE[7]))
N#define ROM_PWMTABLE            ((uint32_t *)(ROM_APITABLE[8]))
N#define ROM_QEITABLE            ((uint32_t *)(ROM_APITABLE[9]))
N#define ROM_SYSTICKTABLE        ((uint32_t *)(ROM_APITABLE[10]))
N#define ROM_TIMERTABLE          ((uint32_t *)(ROM_APITABLE[11]))
N#define ROM_WATCHDOGTABLE       ((uint32_t *)(ROM_APITABLE[12]))
N#define ROM_SYSCTLTABLE         ((uint32_t *)(ROM_APITABLE[13]))
N#define ROM_INTERRUPTTABLE      ((uint32_t *)(ROM_APITABLE[14]))
N#define ROM_USBTABLE            ((uint32_t *)(ROM_APITABLE[16]))
N#define ROM_UDMATABLE           ((uint32_t *)(ROM_APITABLE[17]))
N#define ROM_CANTABLE            ((uint32_t *)(ROM_APITABLE[18]))
N#define ROM_HIBERNATETABLE      ((uint32_t *)(ROM_APITABLE[19]))
N#define ROM_MPUTABLE            ((uint32_t *)(ROM_APITABLE[20]))
N#define ROM_SOFTWARETABLE       ((uint32_t *)(ROM_APITABLE[21]))
N#define ROM_EPITABLE            ((uint32_t *)(ROM_APITABLE[23]))
N#define ROM_EEPROMTABLE         ((uint32_t *)(ROM_APITABLE[24]))
N#define ROM_FANTABLE            ((uint32_t *)(ROM_APITABLE[25]))
N#define ROM_FPUTABLE            ((uint32_t *)(ROM_APITABLE[26]))
N#define ROM_LPCTABLE            ((uint32_t *)(ROM_APITABLE[27]))
N#define ROM_PECITABLE           ((uint32_t *)(ROM_APITABLE[28]))
N#define ROM_SMBUSTABLE          ((uint32_t *)(ROM_APITABLE[29]))
N#define ROM_SYSEXCTABLE         ((uint32_t *)(ROM_APITABLE[30]))
N#define ROM_CIRTABLE            ((uint32_t *)(ROM_APITABLE[31]))
N#define ROM_KBSCANTABLE         ((uint32_t *)(ROM_APITABLE[32]))
N#define ROM_LEDSEQTABLE         ((uint32_t *)(ROM_APITABLE[33]))
N#define ROM_ONEWIRETABLE        ((uint32_t *)(ROM_APITABLE[34]))
N#define ROM_PS2TABLE            ((uint32_t *)(ROM_APITABLE[36]))
N#define ROM_SPIFLASHTABLE       ((uint32_t *)(ROM_APITABLE[38]))
N#define ROM_LPCBTABLE           ((uint32_t *)(ROM_APITABLE[40]))
N#define ROM_LCDTABLE            ((uint32_t *)(ROM_APITABLE[41]))
N#define ROM_EMACTABLE           ((uint32_t *)(ROM_APITABLE[42]))
N#define ROM_AESTABLE            ((uint32_t *)(ROM_APITABLE[43]))
N#define ROM_CRCTABLE            ((uint32_t *)(ROM_APITABLE[44]))
N#define ROM_DESTABLE            ((uint32_t *)(ROM_APITABLE[45]))
N#define ROM_SHAMD5TABLE         ((uint32_t *)(ROM_APITABLE[46]))
N#define ROM_PORT80TABLE         ((uint32_t *)(ROM_APITABLE[47]))
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the ADC API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCSequenceDataGet                                                \
N        ((int32_t (*)(uint32_t ui32Base,                                      \
N                      uint32_t ui32SequenceNum,                               \
N                      uint32_t *pui32Buffer))ROM_ADCTABLE[0])
X#define ROM_ADCSequenceDataGet                                                        ((int32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum,                                                     uint32_t *pui32Buffer))ROM_ADCTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCIntDisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SequenceNum))ROM_ADCTABLE[1])
X#define ROM_ADCIntDisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum))ROM_ADCTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCIntEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SequenceNum))ROM_ADCTABLE[2])
X#define ROM_ADCIntEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum))ROM_ADCTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCIntStatus                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32SequenceNum,                              \
N                       bool bMasked))ROM_ADCTABLE[3])
X#define ROM_ADCIntStatus                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum,                                                     bool bMasked))ROM_ADCTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCIntClear                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SequenceNum))ROM_ADCTABLE[4])
X#define ROM_ADCIntClear                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum))ROM_ADCTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCSequenceEnable                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SequenceNum))ROM_ADCTABLE[5])
X#define ROM_ADCSequenceEnable                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum))ROM_ADCTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCSequenceDisable                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SequenceNum))ROM_ADCTABLE[6])
X#define ROM_ADCSequenceDisable                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum))ROM_ADCTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCSequenceConfigure                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SequenceNum,                                  \
N                   uint32_t ui32Trigger,                                      \
N                   uint32_t ui32Priority))ROM_ADCTABLE[7])
X#define ROM_ADCSequenceConfigure                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum,                                                     uint32_t ui32Trigger,                                                         uint32_t ui32Priority))ROM_ADCTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCSequenceStepConfigure                                          \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SequenceNum,                                  \
N                   uint32_t ui32Step,                                         \
N                   uint32_t ui32Config))ROM_ADCTABLE[8])
X#define ROM_ADCSequenceStepConfigure                                                  ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum,                                                     uint32_t ui32Step,                                                            uint32_t ui32Config))ROM_ADCTABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCSequenceOverflow                                               \
N        ((int32_t (*)(uint32_t ui32Base,                                      \
N                      uint32_t ui32SequenceNum))ROM_ADCTABLE[9])
X#define ROM_ADCSequenceOverflow                                                       ((int32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum))ROM_ADCTABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCSequenceOverflowClear                                          \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SequenceNum))ROM_ADCTABLE[10])
X#define ROM_ADCSequenceOverflowClear                                                  ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum))ROM_ADCTABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCSequenceUnderflow                                              \
N        ((int32_t (*)(uint32_t ui32Base,                                      \
N                      uint32_t ui32SequenceNum))ROM_ADCTABLE[11])
X#define ROM_ADCSequenceUnderflow                                                      ((int32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum))ROM_ADCTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCSequenceUnderflowClear                                         \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SequenceNum))ROM_ADCTABLE[12])
X#define ROM_ADCSequenceUnderflowClear                                                 ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum))ROM_ADCTABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCProcessorTrigger                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SequenceNum))ROM_ADCTABLE[13])
X#define ROM_ADCProcessorTrigger                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum))ROM_ADCTABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCHardwareOversampleConfigure                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Factor))ROM_ADCTABLE[14])
X#define ROM_ADCHardwareOversampleConfigure                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Factor))ROM_ADCTABLE[14])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCComparatorConfigure                                            \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Comp,                                         \
N                   uint32_t ui32Config))ROM_ADCTABLE[15])
X#define ROM_ADCComparatorConfigure                                                    ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Comp,                                                            uint32_t ui32Config))ROM_ADCTABLE[15])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCComparatorRegionSet                                            \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Comp,                                         \
N                   uint32_t ui32LowRef,                                       \
N                   uint32_t ui32HighRef))ROM_ADCTABLE[16])
X#define ROM_ADCComparatorRegionSet                                                    ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Comp,                                                            uint32_t ui32LowRef,                                                          uint32_t ui32HighRef))ROM_ADCTABLE[16])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCComparatorReset                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Comp,                                         \
N                   bool bTrigger,                                             \
N                   bool bInterrupt))ROM_ADCTABLE[17])
X#define ROM_ADCComparatorReset                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Comp,                                                            bool bTrigger,                                                                bool bInterrupt))ROM_ADCTABLE[17])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCComparatorIntDisable                                           \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SequenceNum))ROM_ADCTABLE[18])
X#define ROM_ADCComparatorIntDisable                                                   ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum))ROM_ADCTABLE[18])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCComparatorIntEnable                                            \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SequenceNum))ROM_ADCTABLE[19])
X#define ROM_ADCComparatorIntEnable                                                    ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum))ROM_ADCTABLE[19])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCComparatorIntStatus                                            \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_ADCTABLE[20])
X#define ROM_ADCComparatorIntStatus                                                    ((uint32_t (*)(uint32_t ui32Base))ROM_ADCTABLE[20])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCComparatorIntClear                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Status))ROM_ADCTABLE[21])
X#define ROM_ADCComparatorIntClear                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Status))ROM_ADCTABLE[21])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCReferenceSet                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Ref))ROM_ADCTABLE[22])
X#define ROM_ADCReferenceSet                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Ref))ROM_ADCTABLE[22])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCReferenceGet                                                   \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_ADCTABLE[23])
X#define ROM_ADCReferenceGet                                                           ((uint32_t (*)(uint32_t ui32Base))ROM_ADCTABLE[23])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCPhaseDelaySet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Phase))ROM_ADCTABLE[24])
X#define ROM_ADCPhaseDelaySet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Phase))ROM_ADCTABLE[24])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ADCPhaseDelayGet                                                  \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_ADCTABLE[25])
X#define ROM_ADCPhaseDelayGet                                                          ((uint32_t (*)(uint32_t ui32Base))ROM_ADCTABLE[25])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_ADCIntClearEx                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_ADCTABLE[28])
X#define ROM_ADCIntClearEx                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_ADCTABLE[28])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_ADCIntDisableEx                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_ADCTABLE[29])
X#define ROM_ADCIntDisableEx                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_ADCTABLE[29])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_ADCIntEnableEx                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_ADCTABLE[30])
X#define ROM_ADCIntEnableEx                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_ADCTABLE[30])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_ADCIntStatusEx                                                    \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_ADCTABLE[31])
X#define ROM_ADCIntStatusEx                                                            ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_ADCTABLE[31])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_ADCSequenceDMAEnable                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SequenceNum))ROM_ADCTABLE[32])
X#define ROM_ADCSequenceDMAEnable                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum))ROM_ADCTABLE[32])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_ADCSequenceDMADisable                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SequenceNum))ROM_ADCTABLE[33])
X#define ROM_ADCSequenceDMADisable                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SequenceNum))ROM_ADCTABLE[33])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_ADCBusy                                                           \
N        ((bool (*)(uint32_t ui32Base))ROM_ADCTABLE[34])
X#define ROM_ADCBusy                                                                   ((bool (*)(uint32_t ui32Base))ROM_ADCTABLE[34])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the AES API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESIntStatus                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_AESTABLE[0])
X#define ROM_AESIntStatus                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_AESTABLE[0])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESAuthLengthSet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Length))ROM_AESTABLE[1])
X#define ROM_AESAuthLengthSet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Length))ROM_AESTABLE[1])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESConfigSet                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_AESTABLE[2])
X#define ROM_AESConfigSet                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_AESTABLE[2])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESDataAuth                                                       \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Src,                                        \
N                   uint32_t ui32Length,                                       \
N                   uint32_t *pui32Tag))ROM_AESTABLE[3])
X#define ROM_AESDataAuth                                                               ((bool (*)(uint32_t ui32Base,                                                            uint32_t *pui32Src,                                                           uint32_t ui32Length,                                                          uint32_t *pui32Tag))ROM_AESTABLE[3])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESDataProcess                                                    \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Src,                                        \
N                   uint32_t *pui32Dest,                                       \
N                   uint32_t ui32Length))ROM_AESTABLE[4])
X#define ROM_AESDataProcess                                                            ((bool (*)(uint32_t ui32Base,                                                            uint32_t *pui32Src,                                                           uint32_t *pui32Dest,                                                          uint32_t ui32Length))ROM_AESTABLE[4])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESDataProcessAuth                                                \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Src,                                        \
N                   uint32_t *pui32Dest,                                       \
N                   uint32_t ui32Length,                                       \
N                   uint32_t *pui32AuthSrc,                                    \
N                   uint32_t ui32AuthLength,                                   \
N                   uint32_t *pui32Tag))ROM_AESTABLE[5])
X#define ROM_AESDataProcessAuth                                                        ((bool (*)(uint32_t ui32Base,                                                            uint32_t *pui32Src,                                                           uint32_t *pui32Dest,                                                          uint32_t ui32Length,                                                          uint32_t *pui32AuthSrc,                                                       uint32_t ui32AuthLength,                                                      uint32_t *pui32Tag))ROM_AESTABLE[5])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESDataRead                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Dest))ROM_AESTABLE[6])
X#define ROM_AESDataRead                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32Dest))ROM_AESTABLE[6])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESDataReadNonBlocking                                            \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Dest))ROM_AESTABLE[7])
X#define ROM_AESDataReadNonBlocking                                                    ((bool (*)(uint32_t ui32Base,                                                            uint32_t *pui32Dest))ROM_AESTABLE[7])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESDataWrite                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Src))ROM_AESTABLE[8])
X#define ROM_AESDataWrite                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32Src))ROM_AESTABLE[8])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESDataWriteNonBlocking                                           \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Src))ROM_AESTABLE[9])
X#define ROM_AESDataWriteNonBlocking                                                   ((bool (*)(uint32_t ui32Base,                                                            uint32_t *pui32Src))ROM_AESTABLE[9])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESDMADisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Flags))ROM_AESTABLE[10])
X#define ROM_AESDMADisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Flags))ROM_AESTABLE[10])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESDMAEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Flags))ROM_AESTABLE[11])
X#define ROM_AESDMAEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Flags))ROM_AESTABLE[11])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESIntClear                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_AESTABLE[12])
X#define ROM_AESIntClear                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_AESTABLE[12])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESIntDisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_AESTABLE[13])
X#define ROM_AESIntDisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_AESTABLE[13])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESIntEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_AESTABLE[14])
X#define ROM_AESIntEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_AESTABLE[14])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESIVSet                                                          \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32IVdata))ROM_AESTABLE[15])
X#define ROM_AESIVSet                                                                  ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32IVdata))ROM_AESTABLE[15])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESKey1Set                                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Key,                                        \
N                   uint32_t ui32Keysize))ROM_AESTABLE[16])
X#define ROM_AESKey1Set                                                                ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32Key,                                                           uint32_t ui32Keysize))ROM_AESTABLE[16])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESKey2Set                                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Key,                                        \
N                   uint32_t ui32Keysize))ROM_AESTABLE[17])
X#define ROM_AESKey2Set                                                                ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32Key,                                                           uint32_t ui32Keysize))ROM_AESTABLE[17])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESKey3Set                                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Key))ROM_AESTABLE[18])
X#define ROM_AESKey3Set                                                                ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32Key))ROM_AESTABLE[18])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESLengthSet                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint64_t ui64Length))ROM_AESTABLE[19])
X#define ROM_AESLengthSet                                                              ((void (*)(uint32_t ui32Base,                                                            uint64_t ui64Length))ROM_AESTABLE[19])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESReset                                                          \
N        ((void (*)(uint32_t ui32Base))ROM_AESTABLE[20])
X#define ROM_AESReset                                                                  ((void (*)(uint32_t ui32Base))ROM_AESTABLE[20])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_AESTagRead                                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32TagData))ROM_AESTABLE[21])
X#define ROM_AESTagRead                                                                ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32TagData))ROM_AESTABLE[21])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the CAN API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANIntClear                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntClr))ROM_CANTABLE[0])
X#define ROM_CANIntClear                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntClr))ROM_CANTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANInit                                                           \
N        ((void (*)(uint32_t ui32Base))ROM_CANTABLE[1])
X#define ROM_CANInit                                                                   ((void (*)(uint32_t ui32Base))ROM_CANTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANEnable                                                         \
N        ((void (*)(uint32_t ui32Base))ROM_CANTABLE[2])
X#define ROM_CANEnable                                                                 ((void (*)(uint32_t ui32Base))ROM_CANTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANDisable                                                        \
N        ((void (*)(uint32_t ui32Base))ROM_CANTABLE[3])
X#define ROM_CANDisable                                                                ((void (*)(uint32_t ui32Base))ROM_CANTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANBitTimingSet                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   tCANBitClkParms *psClkParms))ROM_CANTABLE[4])
X#define ROM_CANBitTimingSet                                                           ((void (*)(uint32_t ui32Base,                                                            tCANBitClkParms *psClkParms))ROM_CANTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANBitTimingGet                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   tCANBitClkParms *psClkParms))ROM_CANTABLE[5])
X#define ROM_CANBitTimingGet                                                           ((void (*)(uint32_t ui32Base,                                                            tCANBitClkParms *psClkParms))ROM_CANTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANMessageSet                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32ObjID,                                        \
N                   tCANMsgObject *psMsgObject,                                \
N                   tMsgObjType eMsgType))ROM_CANTABLE[6])
X#define ROM_CANMessageSet                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32ObjID,                                                           tCANMsgObject *psMsgObject,                                                   tMsgObjType eMsgType))ROM_CANTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANMessageGet                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32ObjID,                                        \
N                   tCANMsgObject *psMsgObject,                                \
N                   bool bClrPendingInt))ROM_CANTABLE[7])
X#define ROM_CANMessageGet                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32ObjID,                                                           tCANMsgObject *psMsgObject,                                                   bool bClrPendingInt))ROM_CANTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANStatusGet                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       tCANStsReg eStatusReg))ROM_CANTABLE[8])
X#define ROM_CANStatusGet                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            tCANStsReg eStatusReg))ROM_CANTABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANMessageClear                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32ObjID))ROM_CANTABLE[9])
X#define ROM_CANMessageClear                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32ObjID))ROM_CANTABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANIntEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_CANTABLE[10])
X#define ROM_CANIntEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_CANTABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANIntDisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_CANTABLE[11])
X#define ROM_CANIntDisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_CANTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANIntStatus                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       tCANIntStsReg eIntStsReg))ROM_CANTABLE[12])
X#define ROM_CANIntStatus                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            tCANIntStsReg eIntStsReg))ROM_CANTABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANRetryGet                                                       \
N        ((bool (*)(uint32_t ui32Base))ROM_CANTABLE[13])
X#define ROM_CANRetryGet                                                               ((bool (*)(uint32_t ui32Base))ROM_CANTABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANRetrySet                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   bool bAutoRetry))ROM_CANTABLE[14])
X#define ROM_CANRetrySet                                                               ((void (*)(uint32_t ui32Base,                                                            bool bAutoRetry))ROM_CANTABLE[14])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANErrCntrGet                                                     \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32RxCount,                                    \
N                   uint32_t *pui32TxCount))ROM_CANTABLE[15])
X#define ROM_CANErrCntrGet                                                             ((bool (*)(uint32_t ui32Base,                                                            uint32_t *pui32RxCount,                                                       uint32_t *pui32TxCount))ROM_CANTABLE[15])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_CANBitRateSet                                                     \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32SourceClock,                              \
N                       uint32_t ui32BitRate))ROM_CANTABLE[16])
X#define ROM_CANBitRateSet                                                             ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32SourceClock,                                                     uint32_t ui32BitRate))ROM_CANTABLE[16])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the CIR API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRIntStatus                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_CIRTABLE[0])
X#define ROM_CIRIntStatus                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_CIRTABLE[0])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRConfigGet                                                      \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_CIRTABLE[1])
X#define ROM_CIRConfigGet                                                              ((uint32_t (*)(uint32_t ui32Base))ROM_CIRTABLE[1])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRConfigSet                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_CIRTABLE[2])
X#define ROM_CIRConfigSet                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_CIRTABLE[2])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRIntClear                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_CIRTABLE[3])
X#define ROM_CIRIntClear                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_CIRTABLE[3])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRIntDisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_CIRTABLE[4])
X#define ROM_CIRIntDisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_CIRTABLE[4])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRIntEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_CIRTABLE[5])
X#define ROM_CIRIntEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_CIRTABLE[5])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRRxCountGet                                                     \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t *pui32Output,                                 \
N                       uint32_t *pui32Silence))ROM_CIRTABLE[6])
X#define ROM_CIRRxCountGet                                                             ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t *pui32Output,                                                        uint32_t *pui32Silence))ROM_CIRTABLE[6])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRRxDisable                                                      \
N        ((void (*)(uint32_t ui32Base))ROM_CIRTABLE[7])
X#define ROM_CIRRxDisable                                                              ((void (*)(uint32_t ui32Base))ROM_CIRTABLE[7])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRRxEnable                                                       \
N        ((void (*)(uint32_t ui32Base))ROM_CIRTABLE[8])
X#define ROM_CIRRxEnable                                                               ((void (*)(uint32_t ui32Base))ROM_CIRTABLE[8])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRRxMinMaxSet                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Min10uS,                                        \
N                   uint8_t ui8MaxOutput50uS,                                  \
N                   uint8_t ui8MaxSilence50uS,                                 \
N                   bool bMaxSilenceIsError))ROM_CIRTABLE[9])
X#define ROM_CIRRxMinMaxSet                                                            ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Min10uS,                                                           uint8_t ui8MaxOutput50uS,                                                     uint8_t ui8MaxSilence50uS,                                                    bool bMaxSilenceIsError))ROM_CIRTABLE[9])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRRxStatusGet                                                    \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_CIRTABLE[10])
X#define ROM_CIRRxStatusGet                                                            ((uint32_t (*)(uint32_t ui32Base))ROM_CIRTABLE[10])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRRxWaitForOutput                                                \
N        ((void (*)(uint32_t ui32Base))ROM_CIRTABLE[11])
X#define ROM_CIRRxWaitForOutput                                                        ((void (*)(uint32_t ui32Base))ROM_CIRTABLE[11])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRTxDisable                                                      \
N        ((void (*)(uint32_t ui32Base))ROM_CIRTABLE[12])
X#define ROM_CIRTxDisable                                                              ((void (*)(uint32_t ui32Base))ROM_CIRTABLE[12])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRTxEnable                                                       \
N        ((void (*)(uint32_t ui32Base))ROM_CIRTABLE[13])
X#define ROM_CIRTxEnable                                                               ((void (*)(uint32_t ui32Base))ROM_CIRTABLE[13])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRTxCountSet                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Output,                                       \
N                   uint32_t ui32Silence))ROM_CIRTABLE[14])
X#define ROM_CIRTxCountSet                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Output,                                                          uint32_t ui32Silence))ROM_CIRTABLE[14])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CIRTxStatusGet                                                    \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_CIRTABLE[15])
X#define ROM_CIRTxStatusGet                                                            ((uint32_t (*)(uint32_t ui32Base))ROM_CIRTABLE[15])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the Comparator API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ComparatorIntClear                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Comp))ROM_COMPARATORTABLE[0])
X#define ROM_ComparatorIntClear                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Comp))ROM_COMPARATORTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ComparatorConfigure                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Comp,                                         \
N                   uint32_t ui32Config))ROM_COMPARATORTABLE[1])
X#define ROM_ComparatorConfigure                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Comp,                                                            uint32_t ui32Config))ROM_COMPARATORTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ComparatorRefSet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Ref))ROM_COMPARATORTABLE[2])
X#define ROM_ComparatorRefSet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Ref))ROM_COMPARATORTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ComparatorValueGet                                                \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Comp))ROM_COMPARATORTABLE[3])
X#define ROM_ComparatorValueGet                                                        ((bool (*)(uint32_t ui32Base,                                                            uint32_t ui32Comp))ROM_COMPARATORTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ComparatorIntEnable                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Comp))ROM_COMPARATORTABLE[4])
X#define ROM_ComparatorIntEnable                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Comp))ROM_COMPARATORTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ComparatorIntDisable                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Comp))ROM_COMPARATORTABLE[5])
X#define ROM_ComparatorIntDisable                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Comp))ROM_COMPARATORTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_ComparatorIntStatus                                               \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Comp,                                         \
N                   bool bMasked))ROM_COMPARATORTABLE[6])
X#define ROM_ComparatorIntStatus                                                       ((bool (*)(uint32_t ui32Base,                                                            uint32_t ui32Comp,                                                            bool bMasked))ROM_COMPARATORTABLE[6])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the CRC API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CRCConfigSet                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32CRCConfig))ROM_CRCTABLE[0])
X#define ROM_CRCConfigSet                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32CRCConfig))ROM_CRCTABLE[0])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CRCDataProcess                                                    \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t *pui32DataIn,                                 \
N                       uint32_t ui32DataLength,                               \
N                       bool bPPResult))ROM_CRCTABLE[1])
X#define ROM_CRCDataProcess                                                            ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t *pui32DataIn,                                                        uint32_t ui32DataLength,                                                      bool bPPResult))ROM_CRCTABLE[1])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CRCDataWrite                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Data))ROM_CRCTABLE[2])
X#define ROM_CRCDataWrite                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Data))ROM_CRCTABLE[2])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CRCResultRead                                                     \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bPPResult))ROM_CRCTABLE[3])
X#define ROM_CRCResultRead                                                             ((uint32_t (*)(uint32_t ui32Base,                                                            bool bPPResult))ROM_CRCTABLE[3])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_CRCSeedSet                                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Seed))ROM_CRCTABLE[4])
X#define ROM_CRCSeedSet                                                                ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Seed))ROM_CRCTABLE[4])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the DES API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESIntStatus                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_DESTABLE[0])
X#define ROM_DESIntStatus                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_DESTABLE[0])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESConfigSet                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_DESTABLE[1])
X#define ROM_DESConfigSet                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_DESTABLE[1])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESDataRead                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Dest))ROM_DESTABLE[2])
X#define ROM_DESDataRead                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32Dest))ROM_DESTABLE[2])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESDataReadNonBlocking                                            \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Dest))ROM_DESTABLE[3])
X#define ROM_DESDataReadNonBlocking                                                    ((bool (*)(uint32_t ui32Base,                                                            uint32_t *pui32Dest))ROM_DESTABLE[3])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESDataProcess                                                    \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Src,                                        \
N                   uint32_t *pui32Dest,                                       \
N                   uint32_t ui32Length))ROM_DESTABLE[4])
X#define ROM_DESDataProcess                                                            ((bool (*)(uint32_t ui32Base,                                                            uint32_t *pui32Src,                                                           uint32_t *pui32Dest,                                                          uint32_t ui32Length))ROM_DESTABLE[4])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESDataWrite                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Src))ROM_DESTABLE[5])
X#define ROM_DESDataWrite                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32Src))ROM_DESTABLE[5])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESDataWriteNonBlocking                                           \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Src))ROM_DESTABLE[6])
X#define ROM_DESDataWriteNonBlocking                                                   ((bool (*)(uint32_t ui32Base,                                                            uint32_t *pui32Src))ROM_DESTABLE[6])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESDMADisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Flags))ROM_DESTABLE[7])
X#define ROM_DESDMADisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Flags))ROM_DESTABLE[7])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESDMAEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Flags))ROM_DESTABLE[8])
X#define ROM_DESDMAEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Flags))ROM_DESTABLE[8])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESIntClear                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_DESTABLE[9])
X#define ROM_DESIntClear                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_DESTABLE[9])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESIntDisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_DESTABLE[10])
X#define ROM_DESIntDisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_DESTABLE[10])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESIntEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_DESTABLE[11])
X#define ROM_DESIntEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_DESTABLE[11])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESIVSet                                                          \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32IVdata))ROM_DESTABLE[12])
X#define ROM_DESIVSet                                                                  ((bool (*)(uint32_t ui32Base,                                                            uint32_t *pui32IVdata))ROM_DESTABLE[12])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESKeySet                                                         \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Key))ROM_DESTABLE[13])
X#define ROM_DESKeySet                                                                 ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32Key))ROM_DESTABLE[13])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESLengthSet                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Length))ROM_DESTABLE[14])
X#define ROM_DESLengthSet                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Length))ROM_DESTABLE[14])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_DESReset                                                          \
N        ((void (*)(uint32_t ui32Base))ROM_DESTABLE[15])
X#define ROM_DESReset                                                                  ((void (*)(uint32_t ui32Base))ROM_DESTABLE[15])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the EEPROM API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMRead                                                        \
N        ((void (*)(uint32_t *pui32Data,                                       \
N                   uint32_t ui32Address,                                      \
N                   uint32_t ui32Count))ROM_EEPROMTABLE[0])
X#define ROM_EEPROMRead                                                                ((void (*)(uint32_t *pui32Data,                                                          uint32_t ui32Address,                                                         uint32_t ui32Count))ROM_EEPROMTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMBlockCountGet                                               \
N        ((uint32_t (*)(void))ROM_EEPROMTABLE[1])
X#define ROM_EEPROMBlockCountGet                                                       ((uint32_t (*)(void))ROM_EEPROMTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMBlockHide                                                   \
N        ((void (*)(uint32_t ui32Block))ROM_EEPROMTABLE[2])
X#define ROM_EEPROMBlockHide                                                           ((void (*)(uint32_t ui32Block))ROM_EEPROMTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMBlockLock                                                   \
N        ((uint32_t (*)(uint32_t ui32Block))ROM_EEPROMTABLE[3])
X#define ROM_EEPROMBlockLock                                                           ((uint32_t (*)(uint32_t ui32Block))ROM_EEPROMTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMBlockPasswordSet                                            \
N        ((uint32_t (*)(uint32_t ui32Block,                                    \
N                       uint32_t *pui32Password,                               \
N                       uint32_t ui32Count))ROM_EEPROMTABLE[4])
X#define ROM_EEPROMBlockPasswordSet                                                    ((uint32_t (*)(uint32_t ui32Block,                                                           uint32_t *pui32Password,                                                      uint32_t ui32Count))ROM_EEPROMTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMBlockProtectGet                                             \
N        ((uint32_t (*)(uint32_t ui32Block))ROM_EEPROMTABLE[5])
X#define ROM_EEPROMBlockProtectGet                                                     ((uint32_t (*)(uint32_t ui32Block))ROM_EEPROMTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMBlockProtectSet                                             \
N        ((uint32_t (*)(uint32_t ui32Block,                                    \
N                       uint32_t ui32Protect))ROM_EEPROMTABLE[6])
X#define ROM_EEPROMBlockProtectSet                                                     ((uint32_t (*)(uint32_t ui32Block,                                                           uint32_t ui32Protect))ROM_EEPROMTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMBlockUnlock                                                 \
N        ((uint32_t (*)(uint32_t ui32Block,                                    \
N                       uint32_t *pui32Password,                               \
N                       uint32_t ui32Count))ROM_EEPROMTABLE[7])
X#define ROM_EEPROMBlockUnlock                                                         ((uint32_t (*)(uint32_t ui32Block,                                                           uint32_t *pui32Password,                                                      uint32_t ui32Count))ROM_EEPROMTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMIntClear                                                    \
N        ((void (*)(uint32_t ui32IntFlags))ROM_EEPROMTABLE[8])
X#define ROM_EEPROMIntClear                                                            ((void (*)(uint32_t ui32IntFlags))ROM_EEPROMTABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMIntDisable                                                  \
N        ((void (*)(uint32_t ui32IntFlags))ROM_EEPROMTABLE[9])
X#define ROM_EEPROMIntDisable                                                          ((void (*)(uint32_t ui32IntFlags))ROM_EEPROMTABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMIntEnable                                                   \
N        ((void (*)(uint32_t ui32IntFlags))ROM_EEPROMTABLE[10])
X#define ROM_EEPROMIntEnable                                                           ((void (*)(uint32_t ui32IntFlags))ROM_EEPROMTABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMIntStatus                                                   \
N        ((uint32_t (*)(bool bMasked))ROM_EEPROMTABLE[11])
X#define ROM_EEPROMIntStatus                                                           ((uint32_t (*)(bool bMasked))ROM_EEPROMTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L
S#define ROM_EEPROMMassErase                                                   \
S        ((uint32_t (*)(void))ROM_EEPROMTABLE[12])
X#define ROM_EEPROMMassErase                                                           ((uint32_t (*)(void))ROM_EEPROMTABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMProgram                                                     \
N        ((uint32_t (*)(uint32_t *pui32Data,                                   \
N                       uint32_t ui32Address,                                  \
N                       uint32_t ui32Count))ROM_EEPROMTABLE[13])
X#define ROM_EEPROMProgram                                                             ((uint32_t (*)(uint32_t *pui32Data,                                                          uint32_t ui32Address,                                                         uint32_t ui32Count))ROM_EEPROMTABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMProgramNonBlocking                                          \
N        ((uint32_t (*)(uint32_t ui32Data,                                     \
N                       uint32_t ui32Address))ROM_EEPROMTABLE[14])
X#define ROM_EEPROMProgramNonBlocking                                                  ((uint32_t (*)(uint32_t ui32Data,                                                            uint32_t ui32Address))ROM_EEPROMTABLE[14])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMSizeGet                                                     \
N        ((uint32_t (*)(void))ROM_EEPROMTABLE[15])
X#define ROM_EEPROMSizeGet                                                             ((uint32_t (*)(void))ROM_EEPROMTABLE[15])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMStatusGet                                                   \
N        ((uint32_t (*)(void))ROM_EEPROMTABLE[16])
X#define ROM_EEPROMStatusGet                                                           ((uint32_t (*)(void))ROM_EEPROMTABLE[16])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_EEPROMInit                                                        \
N        ((uint32_t (*)(void))ROM_EEPROMTABLE[17])
X#define ROM_EEPROMInit                                                                ((uint32_t (*)(void))ROM_EEPROMTABLE[17])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the EPI API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIIntStatus                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_EPITABLE[0])
X#define ROM_EPIIntStatus                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_EPITABLE[0])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIModeSet                                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Mode))ROM_EPITABLE[1])
X#define ROM_EPIModeSet                                                                ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Mode))ROM_EPITABLE[1])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIDividerSet                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Divider))ROM_EPITABLE[2])
X#define ROM_EPIDividerSet                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Divider))ROM_EPITABLE[2])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIConfigSDRAMSet                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config,                                       \
N                   uint32_t ui32Refresh))ROM_EPITABLE[3])
X#define ROM_EPIConfigSDRAMSet                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config,                                                          uint32_t ui32Refresh))ROM_EPITABLE[3])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIConfigGPModeSet                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config,                                       \
N                   uint32_t ui32FrameCount,                                   \
N                   uint32_t ui32MaxWait))ROM_EPITABLE[4])
X#define ROM_EPIConfigGPModeSet                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config,                                                          uint32_t ui32FrameCount,                                                      uint32_t ui32MaxWait))ROM_EPITABLE[4])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIConfigHB8Set                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config,                                       \
N                   uint32_t ui32MaxWait))ROM_EPITABLE[5])
X#define ROM_EPIConfigHB8Set                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config,                                                          uint32_t ui32MaxWait))ROM_EPITABLE[5])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIConfigHB16Set                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config,                                       \
N                   uint32_t ui32MaxWait))ROM_EPITABLE[6])
X#define ROM_EPIConfigHB16Set                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config,                                                          uint32_t ui32MaxWait))ROM_EPITABLE[6])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIAddressMapSet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Map))ROM_EPITABLE[7])
X#define ROM_EPIAddressMapSet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Map))ROM_EPITABLE[7])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPINonBlockingReadConfigure                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel,                                      \
N                   uint32_t ui32DataSize,                                     \
N                   uint32_t ui32Address))ROM_EPITABLE[8])
X#define ROM_EPINonBlockingReadConfigure                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t ui32DataSize,                                                        uint32_t ui32Address))ROM_EPITABLE[8])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPINonBlockingReadStart                                           \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel,                                      \
N                   uint32_t ui32Count))ROM_EPITABLE[9])
X#define ROM_EPINonBlockingReadStart                                                   ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t ui32Count))ROM_EPITABLE[9])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPINonBlockingReadStop                                            \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel))ROM_EPITABLE[10])
X#define ROM_EPINonBlockingReadStop                                                    ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_EPITABLE[10])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPINonBlockingReadCount                                           \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Channel))ROM_EPITABLE[11])
X#define ROM_EPINonBlockingReadCount                                                   ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_EPITABLE[11])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPINonBlockingReadAvail                                           \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_EPITABLE[12])
X#define ROM_EPINonBlockingReadAvail                                                   ((uint32_t (*)(uint32_t ui32Base))ROM_EPITABLE[12])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPINonBlockingReadGet32                                           \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Count,                                    \
N                       uint32_t *pui32Buf))ROM_EPITABLE[13])
X#define ROM_EPINonBlockingReadGet32                                                   ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Count,                                                           uint32_t *pui32Buf))ROM_EPITABLE[13])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPINonBlockingReadGet16                                           \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Count,                                    \
N                       uint16_t *pui16Buf))ROM_EPITABLE[14])
X#define ROM_EPINonBlockingReadGet16                                                   ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Count,                                                           uint16_t *pui16Buf))ROM_EPITABLE[14])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPINonBlockingReadGet8                                            \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Count,                                    \
N                       uint8_t *pui8Buf))ROM_EPITABLE[15])
X#define ROM_EPINonBlockingReadGet8                                                    ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Count,                                                           uint8_t *pui8Buf))ROM_EPITABLE[15])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIFIFOConfig                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_EPITABLE[16])
X#define ROM_EPIFIFOConfig                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_EPITABLE[16])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIWriteFIFOCountGet                                              \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_EPITABLE[17])
X#define ROM_EPIWriteFIFOCountGet                                                      ((uint32_t (*)(uint32_t ui32Base))ROM_EPITABLE[17])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIIntEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_EPITABLE[18])
X#define ROM_EPIIntEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_EPITABLE[18])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIIntDisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_EPITABLE[19])
X#define ROM_EPIIntDisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_EPITABLE[19])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIIntErrorStatus                                                 \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_EPITABLE[20])
X#define ROM_EPIIntErrorStatus                                                         ((uint32_t (*)(uint32_t ui32Base))ROM_EPITABLE[20])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIIntErrorClear                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32ErrFlags))ROM_EPITABLE[21])
X#define ROM_EPIIntErrorClear                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32ErrFlags))ROM_EPITABLE[21])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIDividerCSSet                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32CS,                                           \
N                   uint32_t ui32Divider))ROM_EPITABLE[22])
X#define ROM_EPIDividerCSSet                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32CS,                                                              uint32_t ui32Divider))ROM_EPITABLE[22])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIDMATxCount                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Count))ROM_EPITABLE[23])
X#define ROM_EPIDMATxCount                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Count))ROM_EPITABLE[23])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIConfigHB8CSSet                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32CS,                                           \
N                   uint32_t ui32Config))ROM_EPITABLE[24])
X#define ROM_EPIConfigHB8CSSet                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32CS,                                                              uint32_t ui32Config))ROM_EPITABLE[24])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIConfigHB16CSSet                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32CS,                                           \
N                   uint32_t ui32Config))ROM_EPITABLE[25])
X#define ROM_EPIConfigHB16CSSet                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32CS,                                                              uint32_t ui32Config))ROM_EPITABLE[25])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIConfigHB8TimingSet                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32CS,                                           \
N                   uint32_t ui32Config))ROM_EPITABLE[26])
X#define ROM_EPIConfigHB8TimingSet                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32CS,                                                              uint32_t ui32Config))ROM_EPITABLE[26])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIConfigHB16TimingSet                                            \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32CS,                                           \
N                   uint32_t ui32Config))ROM_EPITABLE[27])
X#define ROM_EPIConfigHB16TimingSet                                                    ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32CS,                                                              uint32_t ui32Config))ROM_EPITABLE[27])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIPSRAMConfigRegSet                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32CS,                                           \
N                   uint32_t ui32CR))ROM_EPITABLE[28])
X#define ROM_EPIPSRAMConfigRegSet                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32CS,                                                              uint32_t ui32CR))ROM_EPITABLE[28])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIPSRAMConfigRegRead                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32CS))ROM_EPITABLE[29])
X#define ROM_EPIPSRAMConfigRegRead                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32CS))ROM_EPITABLE[29])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIPSRAMConfigRegGetNonBlocking                                   \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32CS,                                           \
N                   uint32_t *pui32CR))ROM_EPITABLE[30])
X#define ROM_EPIPSRAMConfigRegGetNonBlocking                                           ((bool (*)(uint32_t ui32Base,                                                            uint32_t ui32CS,                                                              uint32_t *pui32CR))ROM_EPITABLE[30])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EPIPSRAMConfigRegGet                                              \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32CS))ROM_EPITABLE[31])
X#define ROM_EPIPSRAMConfigRegGet                                                      ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32CS))ROM_EPITABLE[31])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the EMAC API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACIntStatus                                                     \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_EMACTABLE[0])
X#define ROM_EMACIntStatus                                                             ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_EMACTABLE[0])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACAddrGet                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Index,                                        \
N                   uint8_t *pui8MACAddr))ROM_EMACTABLE[1])
X#define ROM_EMACAddrGet                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Index,                                                           uint8_t *pui8MACAddr))ROM_EMACTABLE[1])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACAddrSet                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Index,                                        \
N                   const uint8_t *pui8MACAddr))ROM_EMACTABLE[2])
X#define ROM_EMACAddrSet                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Index,                                                           const uint8_t *pui8MACAddr))ROM_EMACTABLE[2])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACConfigGet                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Config,                                     \
N                   uint32_t *pui32Mode,                                       \
N                   uint32_t *pui32RxMaxFrameSize))ROM_EMACTABLE[3])
X#define ROM_EMACConfigGet                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32Config,                                                        uint32_t *pui32Mode,                                                          uint32_t *pui32RxMaxFrameSize))ROM_EMACTABLE[3])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACConfigSet                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config,                                       \
N                   uint32_t ui32ModeFlags,                                    \
N                   uint32_t ui32RxMaxFrameSize))ROM_EMACTABLE[4])
X#define ROM_EMACConfigSet                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config,                                                          uint32_t ui32ModeFlags,                                                       uint32_t ui32RxMaxFrameSize))ROM_EMACTABLE[4])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACDMAStateGet                                                   \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_EMACTABLE[5])
X#define ROM_EMACDMAStateGet                                                           ((uint32_t (*)(uint32_t ui32Base))ROM_EMACTABLE[5])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACFrameFilterGet                                                \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_EMACTABLE[6])
X#define ROM_EMACFrameFilterGet                                                        ((uint32_t (*)(uint32_t ui32Base))ROM_EMACTABLE[6])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACFrameFilterSet                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32FilterOpts))ROM_EMACTABLE[7])
X#define ROM_EMACFrameFilterSet                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32FilterOpts))ROM_EMACTABLE[7])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACInit                                                          \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SysClk,                                       \
N                   uint32_t ui32BusConfig,                                    \
N                   uint32_t ui32RxBurst,                                      \
N                   uint32_t ui32TxBurst,                                      \
N                   uint32_t ui32DescSkipSize))ROM_EMACTABLE[8])
X#define ROM_EMACInit                                                                  ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SysClk,                                                          uint32_t ui32BusConfig,                                                       uint32_t ui32RxBurst,                                                         uint32_t ui32TxBurst,                                                         uint32_t ui32DescSkipSize))ROM_EMACTABLE[8])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACIntClear                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_EMACTABLE[9])
X#define ROM_EMACIntClear                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_EMACTABLE[9])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACIntDisable                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_EMACTABLE[10])
X#define ROM_EMACIntDisable                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_EMACTABLE[10])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACIntEnable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_EMACTABLE[11])
X#define ROM_EMACIntEnable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_EMACTABLE[11])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACPHYConfigSet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_EMACTABLE[12])
X#define ROM_EMACPHYConfigSet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_EMACTABLE[12])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACPHYPowerOff                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8PhyAddr))ROM_EMACTABLE[13])
X#define ROM_EMACPHYPowerOff                                                           ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8PhyAddr))ROM_EMACTABLE[13])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACPHYPowerOn                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8PhyAddr))ROM_EMACTABLE[14])
X#define ROM_EMACPHYPowerOn                                                            ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8PhyAddr))ROM_EMACTABLE[14])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACPHYRead                                                       \
N        ((uint16_t (*)(uint32_t ui32Base,                                     \
N                        uint8_t ui8PhyAddr,                                   \
N                       uint8_t ui8RegAddr))ROM_EMACTABLE[15])
X#define ROM_EMACPHYRead                                                               ((uint16_t (*)(uint32_t ui32Base,                                                             uint8_t ui8PhyAddr,                                                          uint8_t ui8RegAddr))ROM_EMACTABLE[15])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACPHYWrite                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8PhyAddr,                                        \
N                   uint8_t ui8RegAddr,                                        \
N                   uint16_t ui16Data))ROM_EMACTABLE[16])
X#define ROM_EMACPHYWrite                                                              ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8PhyAddr,                                                           uint8_t ui8RegAddr,                                                           uint16_t ui16Data))ROM_EMACTABLE[16])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACReset                                                         \
N        ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[17])
X#define ROM_EMACReset                                                                 ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[17])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACRxDisable                                                     \
N        ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[18])
X#define ROM_EMACRxDisable                                                             ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[18])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACRxDMACurrentBufferGet                                         \
N        ((uint8_t * (*)(uint32_t ui32Base))ROM_EMACTABLE[19])
X#define ROM_EMACRxDMACurrentBufferGet                                                 ((uint8_t * (*)(uint32_t ui32Base))ROM_EMACTABLE[19])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACRxDMACurrentDescriptorGet                                     \
N        ((tEMACDMADescriptor * (*)(uint32_t ui32Base))ROM_EMACTABLE[20])
X#define ROM_EMACRxDMACurrentDescriptorGet                                             ((tEMACDMADescriptor * (*)(uint32_t ui32Base))ROM_EMACTABLE[20])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACRxDMADescriptorListGet                                        \
N        ((tEMACDMADescriptor * (*)(uint32_t ui32Base))ROM_EMACTABLE[21])
X#define ROM_EMACRxDMADescriptorListGet                                                ((tEMACDMADescriptor * (*)(uint32_t ui32Base))ROM_EMACTABLE[21])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACRxDMADescriptorListSet                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   tEMACDMADescriptor *pDescriptor))ROM_EMACTABLE[22])
X#define ROM_EMACRxDMADescriptorListSet                                                ((void (*)(uint32_t ui32Base,                                                            tEMACDMADescriptor *pDescriptor))ROM_EMACTABLE[22])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACRxDMAPollDemand                                               \
N        ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[23])
X#define ROM_EMACRxDMAPollDemand                                                       ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[23])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACRxEnable                                                      \
N        ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[24])
X#define ROM_EMACRxEnable                                                              ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[24])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACRxWatchdogTimerSet                                            \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Timeout))ROM_EMACTABLE[25])
X#define ROM_EMACRxWatchdogTimerSet                                                    ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Timeout))ROM_EMACTABLE[25])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACStatusGet                                                     \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_EMACTABLE[26])
X#define ROM_EMACStatusGet                                                             ((uint32_t (*)(uint32_t ui32Base))ROM_EMACTABLE[26])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACTxDisable                                                     \
N        ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[27])
X#define ROM_EMACTxDisable                                                             ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[27])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACTxDMACurrentBufferGet                                         \
N        ((uint8_t * (*)(uint32_t ui32Base))ROM_EMACTABLE[28])
X#define ROM_EMACTxDMACurrentBufferGet                                                 ((uint8_t * (*)(uint32_t ui32Base))ROM_EMACTABLE[28])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACTxDMACurrentDescriptorGet                                     \
N        ((tEMACDMADescriptor * (*)(uint32_t ui32Base))ROM_EMACTABLE[29])
X#define ROM_EMACTxDMACurrentDescriptorGet                                             ((tEMACDMADescriptor * (*)(uint32_t ui32Base))ROM_EMACTABLE[29])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACTxDMADescriptorListGet                                        \
N        ((tEMACDMADescriptor * (*)(uint32_t ui32Base))ROM_EMACTABLE[30])
X#define ROM_EMACTxDMADescriptorListGet                                                ((tEMACDMADescriptor * (*)(uint32_t ui32Base))ROM_EMACTABLE[30])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACTxDMADescriptorListSet                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   tEMACDMADescriptor *pDescriptor))ROM_EMACTABLE[31])
X#define ROM_EMACTxDMADescriptorListSet                                                ((void (*)(uint32_t ui32Base,                                                            tEMACDMADescriptor *pDescriptor))ROM_EMACTABLE[31])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACTxDMAPollDemand                                               \
N        ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[32])
X#define ROM_EMACTxDMAPollDemand                                                       ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[32])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACTxEnable                                                      \
N        ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[33])
X#define ROM_EMACTxEnable                                                              ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[33])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACTxFlush                                                       \
N        ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[34])
X#define ROM_EMACTxFlush                                                               ((void (*)(uint32_t ui32Base))ROM_EMACTABLE[34])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_EMACHashFilterSet                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32HashHi,                                       \
N                   uint32_t ui32HashLo))ROM_EMACTABLE[39])
X#define ROM_EMACHashFilterSet                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32HashHi,                                                          uint32_t ui32HashLo))ROM_EMACTABLE[39])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the Fan API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FanIntClear                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Flags))ROM_FANTABLE[0])
X#define ROM_FanIntClear                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Flags))ROM_FANTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FanChannelConfigAuto                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel,                                      \
N                   uint32_t ui32Config))ROM_FANTABLE[1])
X#define ROM_FanChannelConfigAuto                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t ui32Config))ROM_FANTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FanChannelConfigManual                                            \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel,                                      \
N                   uint32_t ui32Config))ROM_FANTABLE[2])
X#define ROM_FanChannelConfigManual                                                    ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t ui32Config))ROM_FANTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FanChannelDisable                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel))ROM_FANTABLE[3])
X#define ROM_FanChannelDisable                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_FANTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FanChannelDutyGet                                                 \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Channel))ROM_FANTABLE[4])
X#define ROM_FanChannelDutyGet                                                         ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_FANTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FanChannelDutySet                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel,                                      \
N                   uint32_t ui32Duty))ROM_FANTABLE[5])
X#define ROM_FanChannelDutySet                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t ui32Duty))ROM_FANTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FanChannelEnable                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel))ROM_FANTABLE[6])
X#define ROM_FanChannelEnable                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_FANTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FanChannelRPMGet                                                  \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Channel))ROM_FANTABLE[7])
X#define ROM_FanChannelRPMGet                                                          ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_FANTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FanChannelRPMSet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel,                                      \
N                   uint32_t ui32RPM))ROM_FANTABLE[8])
X#define ROM_FanChannelRPMSet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t ui32RPM))ROM_FANTABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FanChannelStatus                                                  \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Channel))ROM_FANTABLE[9])
X#define ROM_FanChannelStatus                                                          ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_FANTABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FanChannelsGet                                                    \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_FANTABLE[10])
X#define ROM_FanChannelsGet                                                            ((uint32_t (*)(uint32_t ui32Base))ROM_FANTABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FanIntDisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Flags))ROM_FANTABLE[11])
X#define ROM_FanIntDisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Flags))ROM_FANTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FanIntEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Flags))ROM_FANTABLE[12])
X#define ROM_FanIntEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Flags))ROM_FANTABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FanIntStatus                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_FANTABLE[13])
X#define ROM_FanIntStatus                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_FANTABLE[13])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_FanFractionalRPMDisable                                           \
N        ((void (*)(uint32_t ui32Base))ROM_FANTABLE[14])
X#define ROM_FanFractionalRPMDisable                                                   ((void (*)(uint32_t ui32Base))ROM_FANTABLE[14])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_FanFractionalRPMEnable                                            \
N        ((void (*)(uint32_t ui32Base))ROM_FANTABLE[15])
X#define ROM_FanFractionalRPMEnable                                                    ((void (*)(uint32_t ui32Base))ROM_FANTABLE[15])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the Flash API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FlashProgram                                                      \
N        ((int32_t (*)(uint32_t *pui32Data,                                    \
N                      uint32_t ui32Address,                                   \
N                      uint32_t ui32Count))ROM_FLASHTABLE[0])
X#define ROM_FlashProgram                                                              ((int32_t (*)(uint32_t *pui32Data,                                                          uint32_t ui32Address,                                                         uint32_t ui32Count))ROM_FLASHTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FlashErase                                                        \
N        ((int32_t (*)(uint32_t ui32Address))ROM_FLASHTABLE[3])
X#define ROM_FlashErase                                                                ((int32_t (*)(uint32_t ui32Address))ROM_FLASHTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FlashProtectGet                                                   \
N        ((tFlashProtection (*)(uint32_t ui32Address))ROM_FLASHTABLE[4])
X#define ROM_FlashProtectGet                                                           ((tFlashProtection (*)(uint32_t ui32Address))ROM_FLASHTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FlashProtectSet                                                   \
N        ((int32_t (*)(uint32_t ui32Address,                                   \
N                      tFlashProtection eProtect))ROM_FLASHTABLE[5])
X#define ROM_FlashProtectSet                                                           ((int32_t (*)(uint32_t ui32Address,                                                         tFlashProtection eProtect))ROM_FLASHTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FlashProtectSave                                                  \
N        ((int32_t (*)(void))ROM_FLASHTABLE[6])
X#define ROM_FlashProtectSave                                                          ((int32_t (*)(void))ROM_FLASHTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FlashUserGet                                                      \
N        ((int32_t (*)(uint32_t *pui32User0,                                   \
N                      uint32_t *pui32User1))ROM_FLASHTABLE[7])
X#define ROM_FlashUserGet                                                              ((int32_t (*)(uint32_t *pui32User0,                                                         uint32_t *pui32User1))ROM_FLASHTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FlashUserSet                                                      \
N        ((int32_t (*)(uint32_t ui32User0,                                     \
N                      uint32_t ui32User1))ROM_FLASHTABLE[8])
X#define ROM_FlashUserSet                                                              ((int32_t (*)(uint32_t ui32User0,                                                           uint32_t ui32User1))ROM_FLASHTABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FlashUserSave                                                     \
N        ((int32_t (*)(void))ROM_FLASHTABLE[9])
X#define ROM_FlashUserSave                                                             ((int32_t (*)(void))ROM_FLASHTABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FlashIntEnable                                                    \
N        ((void (*)(uint32_t ui32IntFlags))ROM_FLASHTABLE[10])
X#define ROM_FlashIntEnable                                                            ((void (*)(uint32_t ui32IntFlags))ROM_FLASHTABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FlashIntDisable                                                   \
N        ((void (*)(uint32_t ui32IntFlags))ROM_FLASHTABLE[11])
X#define ROM_FlashIntDisable                                                           ((void (*)(uint32_t ui32IntFlags))ROM_FLASHTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FlashIntStatus                                                    \
N        ((uint32_t (*)(bool bMasked))ROM_FLASHTABLE[12])
X#define ROM_FlashIntStatus                                                            ((uint32_t (*)(bool bMasked))ROM_FLASHTABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FlashIntClear                                                     \
N        ((void (*)(uint32_t ui32IntFlags))ROM_FLASHTABLE[13])
X#define ROM_FlashIntClear                                                             ((void (*)(uint32_t ui32IntFlags))ROM_FLASHTABLE[13])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the FPU API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FPUEnable                                                         \
N        ((void (*)(void))ROM_FPUTABLE[0])
X#define ROM_FPUEnable                                                                 ((void (*)(void))ROM_FPUTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FPUDisable                                                        \
N        ((void (*)(void))ROM_FPUTABLE[1])
X#define ROM_FPUDisable                                                                ((void (*)(void))ROM_FPUTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FPUFlushToZeroModeSet                                             \
N        ((void (*)(uint32_t ui32Mode))ROM_FPUTABLE[2])
X#define ROM_FPUFlushToZeroModeSet                                                     ((void (*)(uint32_t ui32Mode))ROM_FPUTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FPUHalfPrecisionModeSet                                           \
N        ((void (*)(uint32_t ui32Mode))ROM_FPUTABLE[3])
X#define ROM_FPUHalfPrecisionModeSet                                                   ((void (*)(uint32_t ui32Mode))ROM_FPUTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FPULazyStackingEnable                                             \
N        ((void (*)(void))ROM_FPUTABLE[4])
X#define ROM_FPULazyStackingEnable                                                     ((void (*)(void))ROM_FPUTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FPUNaNModeSet                                                     \
N        ((void (*)(uint32_t ui32Mode))ROM_FPUTABLE[5])
X#define ROM_FPUNaNModeSet                                                             ((void (*)(uint32_t ui32Mode))ROM_FPUTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FPURoundingModeSet                                                \
N        ((void (*)(uint32_t ui32Mode))ROM_FPUTABLE[6])
X#define ROM_FPURoundingModeSet                                                        ((void (*)(uint32_t ui32Mode))ROM_FPUTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FPUStackingDisable                                                \
N        ((void (*)(void))ROM_FPUTABLE[7])
X#define ROM_FPUStackingDisable                                                        ((void (*)(void))ROM_FPUTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_FPUStackingEnable                                                 \
N        ((void (*)(void))ROM_FPUTABLE[8])
X#define ROM_FPUStackingEnable                                                         ((void (*)(void))ROM_FPUTABLE[8])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the GPIO API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinWrite                                                      \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins,                                           \
N                   uint8_t ui8Val))ROM_GPIOTABLE[0])
X#define ROM_GPIOPinWrite                                                              ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins,                                                              uint8_t ui8Val))ROM_GPIOTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIODirModeSet                                                    \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins,                                           \
N                   uint32_t ui32PinIO))ROM_GPIOTABLE[1])
X#define ROM_GPIODirModeSet                                                            ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins,                                                              uint32_t ui32PinIO))ROM_GPIOTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIODirModeGet                                                    \
N        ((uint32_t (*)(uint32_t ui32Port,                                     \
N                       uint8_t ui8Pin))ROM_GPIOTABLE[2])
X#define ROM_GPIODirModeGet                                                            ((uint32_t (*)(uint32_t ui32Port,                                                            uint8_t ui8Pin))ROM_GPIOTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOIntTypeSet                                                    \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins,                                           \
N                   uint32_t ui32IntType))ROM_GPIOTABLE[3])
X#define ROM_GPIOIntTypeSet                                                            ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins,                                                              uint32_t ui32IntType))ROM_GPIOTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOIntTypeGet                                                    \
N        ((uint32_t (*)(uint32_t ui32Port,                                     \
N                       uint8_t ui8Pin))ROM_GPIOTABLE[4])
X#define ROM_GPIOIntTypeGet                                                            ((uint32_t (*)(uint32_t ui32Port,                                                            uint8_t ui8Pin))ROM_GPIOTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPadConfigSet                                                  \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins,                                           \
N                   uint32_t ui32Strength,                                     \
N                   uint32_t ui32PadType))ROM_GPIOTABLE[5])
X#define ROM_GPIOPadConfigSet                                                          ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins,                                                              uint32_t ui32Strength,                                                        uint32_t ui32PadType))ROM_GPIOTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPadConfigGet                                                  \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pin,                                            \
N                   uint32_t *pui32Strength,                                   \
N                   uint32_t *pui32PadType))ROM_GPIOTABLE[6])
X#define ROM_GPIOPadConfigGet                                                          ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pin,                                                               uint32_t *pui32Strength,                                                      uint32_t *pui32PadType))ROM_GPIOTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinRead                                                       \
N        ((int32_t (*)(uint32_t ui32Port,                                      \
N                      uint8_t ui8Pins))ROM_GPIOTABLE[11])
X#define ROM_GPIOPinRead                                                               ((int32_t (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeCAN                                                    \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[12])
X#define ROM_GPIOPinTypeCAN                                                            ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeComparator                                             \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[13])
X#define ROM_GPIOPinTypeComparator                                                     ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeGPIOInput                                              \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[14])
X#define ROM_GPIOPinTypeGPIOInput                                                      ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[14])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeGPIOOutput                                             \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[15])
X#define ROM_GPIOPinTypeGPIOOutput                                                     ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[15])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeI2C                                                    \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[16])
X#define ROM_GPIOPinTypeI2C                                                            ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[16])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypePWM                                                    \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[17])
X#define ROM_GPIOPinTypePWM                                                            ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[17])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeQEI                                                    \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[18])
X#define ROM_GPIOPinTypeQEI                                                            ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[18])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeSSI                                                    \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[19])
X#define ROM_GPIOPinTypeSSI                                                            ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[19])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeTimer                                                  \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[20])
X#define ROM_GPIOPinTypeTimer                                                          ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[20])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeUART                                                   \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[21])
X#define ROM_GPIOPinTypeUART                                                           ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[21])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeGPIOOutputOD                                           \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[22])
X#define ROM_GPIOPinTypeGPIOOutputOD                                                   ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[22])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeADC                                                    \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[23])
X#define ROM_GPIOPinTypeADC                                                            ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[23])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeUSBDigital                                             \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[24])
X#define ROM_GPIOPinTypeUSBDigital                                                     ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[24])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinConfigure                                                  \
N        ((void (*)(uint32_t ui32PinConfig))ROM_GPIOTABLE[26])
X#define ROM_GPIOPinConfigure                                                          ((void (*)(uint32_t ui32PinConfig))ROM_GPIOTABLE[26])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeUSBAnalog                                              \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[28])
X#define ROM_GPIOPinTypeUSBAnalog                                                      ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[28])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOPinTypeEPI                                                    \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[29])
X#define ROM_GPIOPinTypeEPI                                                            ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[29])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIODMATriggerEnable                                              \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[31])
X#define ROM_GPIODMATriggerEnable                                                      ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[31])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIODMATriggerDisable                                             \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[32])
X#define ROM_GPIODMATriggerDisable                                                     ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[32])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOADCTriggerEnable                                              \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[33])
X#define ROM_GPIOADCTriggerEnable                                                      ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[33])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOADCTriggerDisable                                             \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[34])
X#define ROM_GPIOADCTriggerDisable                                                     ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[34])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeFan                                                    \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[35])
X#define ROM_GPIOPinTypeFan                                                            ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[35])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeLPC                                                    \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[36])
X#define ROM_GPIOPinTypeLPC                                                            ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[36])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_GPIOPinTypePECIRx                                                 \
S        ((void (*)(uint32_t ui32Port,                                         \
S                   uint8_t ui8Pins))ROM_GPIOTABLE[37])
X#define ROM_GPIOPinTypePECIRx                                                         ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[37])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_GPIOPinTypePECITx                                                 \
S        ((void (*)(uint32_t ui32Port,                                         \
S                   uint8_t ui8Pins))ROM_GPIOTABLE[38])
X#define ROM_GPIOPinTypePECITx                                                         ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[38])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_GPIOPinTypeI2CSCL                                                 \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[39])
X#define ROM_GPIOPinTypeI2CSCL                                                         ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[39])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOPinTypeCIR                                                    \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[40])
X#define ROM_GPIOPinTypeCIR                                                            ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[40])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOPinTypeKBRow                                                  \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[41])
X#define ROM_GPIOPinTypeKBRow                                                          ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[41])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOPinTypeKBColumn                                               \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[42])
X#define ROM_GPIOPinTypeKBColumn                                                       ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[42])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOPinTypeLEDSeq                                                 \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[43])
X#define ROM_GPIOPinTypeLEDSeq                                                         ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[43])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOPinTypeOneWire                                                \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[44])
X#define ROM_GPIOPinTypeOneWire                                                        ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[44])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOPinTypePS2                                                    \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[46])
X#define ROM_GPIOPinTypePS2                                                            ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[46])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOPinTypeWakeHigh                                               \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[48])
X#define ROM_GPIOPinTypeWakeHigh                                                       ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[48])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOPinTypeWakeLow                                                \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[49])
X#define ROM_GPIOPinTypeWakeLow                                                        ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[49])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOPinTypePECIAnalog                                             \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[50])
X#define ROM_GPIOPinTypePECIAnalog                                                     ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[50])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOIntClear                                                      \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint32_t ui32IntFlags))ROM_GPIOTABLE[51])
X#define ROM_GPIOIntClear                                                              ((void (*)(uint32_t ui32Port,                                                            uint32_t ui32IntFlags))ROM_GPIOTABLE[51])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOIntDisable                                                    \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint32_t ui32IntFlags))ROM_GPIOTABLE[52])
X#define ROM_GPIOIntDisable                                                            ((void (*)(uint32_t ui32Port,                                                            uint32_t ui32IntFlags))ROM_GPIOTABLE[52])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOIntEnable                                                     \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint32_t ui32IntFlags))ROM_GPIOTABLE[53])
X#define ROM_GPIOIntEnable                                                             ((void (*)(uint32_t ui32Port,                                                            uint32_t ui32IntFlags))ROM_GPIOTABLE[53])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOIntStatus                                                     \
N        ((uint32_t (*)(uint32_t ui32Port,                                     \
N                       bool bMasked))ROM_GPIOTABLE[54])
X#define ROM_GPIOIntStatus                                                             ((uint32_t (*)(uint32_t ui32Port,                                                            bool bMasked))ROM_GPIOTABLE[54])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOPinWakeStatus                                                 \
N        ((uint32_t (*)(uint32_t ui32Port))ROM_GPIOTABLE[55])
X#define ROM_GPIOPinWakeStatus                                                         ((uint32_t (*)(uint32_t ui32Port))ROM_GPIOTABLE[55])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_GPIOPinTypeLCD                                                    \
N        ((void (*)(uint32_t ui32Port,                                         \
N                   uint8_t ui8Pins))ROM_GPIOTABLE[56])
X#define ROM_GPIOPinTypeLCD                                                            ((void (*)(uint32_t ui32Port,                                                            uint8_t ui8Pins))ROM_GPIOTABLE[56])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the Hibernate API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateIntClear                                                 \
N        ((void (*)(uint32_t ui32IntFlags))ROM_HIBERNATETABLE[0])
X#define ROM_HibernateIntClear                                                         ((void (*)(uint32_t ui32IntFlags))ROM_HIBERNATETABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateEnableExpClk                                             \
N        ((void (*)(uint32_t ui32HibClk))ROM_HIBERNATETABLE[1])
X#define ROM_HibernateEnableExpClk                                                     ((void (*)(uint32_t ui32HibClk))ROM_HIBERNATETABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateDisable                                                  \
N        ((void (*)(void))ROM_HIBERNATETABLE[2])
X#define ROM_HibernateDisable                                                          ((void (*)(void))ROM_HIBERNATETABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateRTCEnable                                                \
N        ((void (*)(void))ROM_HIBERNATETABLE[4])
X#define ROM_HibernateRTCEnable                                                        ((void (*)(void))ROM_HIBERNATETABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateRTCDisable                                               \
N        ((void (*)(void))ROM_HIBERNATETABLE[5])
X#define ROM_HibernateRTCDisable                                                       ((void (*)(void))ROM_HIBERNATETABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateWakeSet                                                  \
N        ((void (*)(uint32_t ui32WakeFlags))ROM_HIBERNATETABLE[6])
X#define ROM_HibernateWakeSet                                                          ((void (*)(uint32_t ui32WakeFlags))ROM_HIBERNATETABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateWakeGet                                                  \
N        ((uint32_t (*)(void))ROM_HIBERNATETABLE[7])
X#define ROM_HibernateWakeGet                                                          ((uint32_t (*)(void))ROM_HIBERNATETABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateLowBatSet                                                \
N        ((void (*)(uint32_t ui32LowBatFlags))ROM_HIBERNATETABLE[8])
X#define ROM_HibernateLowBatSet                                                        ((void (*)(uint32_t ui32LowBatFlags))ROM_HIBERNATETABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateLowBatGet                                                \
N        ((uint32_t (*)(void))ROM_HIBERNATETABLE[9])
X#define ROM_HibernateLowBatGet                                                        ((uint32_t (*)(void))ROM_HIBERNATETABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateRTCSet                                                   \
N        ((void (*)(uint32_t ui32RTCValue))ROM_HIBERNATETABLE[10])
X#define ROM_HibernateRTCSet                                                           ((void (*)(uint32_t ui32RTCValue))ROM_HIBERNATETABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateRTCGet                                                   \
N        ((uint32_t (*)(void))ROM_HIBERNATETABLE[11])
X#define ROM_HibernateRTCGet                                                           ((uint32_t (*)(void))ROM_HIBERNATETABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateRTCTrimSet                                               \
N        ((void (*)(uint32_t ui32Trim))ROM_HIBERNATETABLE[16])
X#define ROM_HibernateRTCTrimSet                                                       ((void (*)(uint32_t ui32Trim))ROM_HIBERNATETABLE[16])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateRTCTrimGet                                               \
N        ((uint32_t (*)(void))ROM_HIBERNATETABLE[17])
X#define ROM_HibernateRTCTrimGet                                                       ((uint32_t (*)(void))ROM_HIBERNATETABLE[17])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateDataSet                                                  \
N        ((void (*)(uint32_t *pui32Data,                                       \
N                   uint32_t ui32Count))ROM_HIBERNATETABLE[18])
X#define ROM_HibernateDataSet                                                          ((void (*)(uint32_t *pui32Data,                                                          uint32_t ui32Count))ROM_HIBERNATETABLE[18])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateDataGet                                                  \
N        ((void (*)(uint32_t *pui32Data,                                       \
N                   uint32_t ui32Count))ROM_HIBERNATETABLE[19])
X#define ROM_HibernateDataGet                                                          ((void (*)(uint32_t *pui32Data,                                                          uint32_t ui32Count))ROM_HIBERNATETABLE[19])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateRequest                                                  \
N        ((void (*)(void))ROM_HIBERNATETABLE[20])
X#define ROM_HibernateRequest                                                          ((void (*)(void))ROM_HIBERNATETABLE[20])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateIntEnable                                                \
N        ((void (*)(uint32_t ui32IntFlags))ROM_HIBERNATETABLE[21])
X#define ROM_HibernateIntEnable                                                        ((void (*)(uint32_t ui32IntFlags))ROM_HIBERNATETABLE[21])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateIntDisable                                               \
N        ((void (*)(uint32_t ui32IntFlags))ROM_HIBERNATETABLE[22])
X#define ROM_HibernateIntDisable                                                       ((void (*)(uint32_t ui32IntFlags))ROM_HIBERNATETABLE[22])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateIntStatus                                                \
N        ((uint32_t (*)(bool bMasked))ROM_HIBERNATETABLE[23])
X#define ROM_HibernateIntStatus                                                        ((uint32_t (*)(bool bMasked))ROM_HIBERNATETABLE[23])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateIsActive                                                 \
N        ((uint32_t (*)(void))ROM_HIBERNATETABLE[24])
X#define ROM_HibernateIsActive                                                         ((uint32_t (*)(void))ROM_HIBERNATETABLE[24])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateRTCSSGet                                                 \
N        ((uint32_t (*)(void))ROM_HIBERNATETABLE[27])
X#define ROM_HibernateRTCSSGet                                                         ((uint32_t (*)(void))ROM_HIBERNATETABLE[27])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateClockConfig                                              \
N        ((void (*)(uint32_t ui32Config))ROM_HIBERNATETABLE[28])
X#define ROM_HibernateClockConfig                                                      ((void (*)(uint32_t ui32Config))ROM_HIBERNATETABLE[28])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateBatCheckStart                                            \
N        ((void (*)(void))ROM_HIBERNATETABLE[29])
X#define ROM_HibernateBatCheckStart                                                    ((void (*)(void))ROM_HIBERNATETABLE[29])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_HibernateBatCheckDone                                             \
N        ((uint32_t (*)(void))ROM_HIBERNATETABLE[30])
X#define ROM_HibernateBatCheckDone                                                     ((uint32_t (*)(void))ROM_HIBERNATETABLE[30])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateGPIORetentionEnable                                      \
N        ((void (*)(void))ROM_HIBERNATETABLE[31])
X#define ROM_HibernateGPIORetentionEnable                                              ((void (*)(void))ROM_HIBERNATETABLE[31])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateGPIORetentionDisable                                     \
N        ((void (*)(void))ROM_HIBERNATETABLE[32])
X#define ROM_HibernateGPIORetentionDisable                                             ((void (*)(void))ROM_HIBERNATETABLE[32])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateGPIORetentionGet                                         \
N        ((bool (*)(void))ROM_HIBERNATETABLE[33])
X#define ROM_HibernateGPIORetentionGet                                                 ((bool (*)(void))ROM_HIBERNATETABLE[33])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateCounterMode                                              \
N        ((void (*)(uint32_t ui32Config))ROM_HIBERNATETABLE[34])
X#define ROM_HibernateCounterMode                                                      ((void (*)(uint32_t ui32Config))ROM_HIBERNATETABLE[34])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            1L
N#define ROM_HibernateCalendarSet                                              \
N        ((void (*)(struct tm *psTime))ROM_HIBERNATETABLE[35])
X#define ROM_HibernateCalendarSet                                                      ((void (*)(struct tm *psTime))ROM_HIBERNATETABLE[35])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateCalendarGet                                              \
N        ((int (*)(struct tm *psTime))ROM_HIBERNATETABLE[36])
X#define ROM_HibernateCalendarGet                                                      ((int (*)(struct tm *psTime))ROM_HIBERNATETABLE[36])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateCalendarMatchSet                                         \
N        ((void (*)(uint32_t ui32Index,                                        \
N                   struct tm *psTime))ROM_HIBERNATETABLE[37])
X#define ROM_HibernateCalendarMatchSet                                                 ((void (*)(uint32_t ui32Index,                                                           struct tm *psTime))ROM_HIBERNATETABLE[37])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateCalendarMatchGet                                         \
N        ((void (*)(uint32_t ui32Index,                                        \
N                   struct tm *psTime))ROM_HIBERNATETABLE[38])
X#define ROM_HibernateCalendarMatchGet                                                 ((void (*)(uint32_t ui32Index,                                                           struct tm *psTime))ROM_HIBERNATETABLE[38])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateTamperDisable                                            \
N        ((void (*)(void))ROM_HIBERNATETABLE[39])
X#define ROM_HibernateTamperDisable                                                    ((void (*)(void))ROM_HIBERNATETABLE[39])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateTamperEnable                                             \
N        ((void (*)(void))ROM_HIBERNATETABLE[40])
X#define ROM_HibernateTamperEnable                                                     ((void (*)(void))ROM_HIBERNATETABLE[40])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateTamperEventsClear                                        \
N        ((void (*)(void))ROM_HIBERNATETABLE[41])
X#define ROM_HibernateTamperEventsClear                                                ((void (*)(void))ROM_HIBERNATETABLE[41])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateTamperEventsConfig                                       \
N        ((void (*)(uint32_t ui32Config))ROM_HIBERNATETABLE[42])
X#define ROM_HibernateTamperEventsConfig                                               ((void (*)(uint32_t ui32Config))ROM_HIBERNATETABLE[42])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateTamperEventsGet                                          \
N        ((bool (*)(uint32_t ui32Index,                                        \
N                   uint32_t *pui32RTC,                                        \
N                   uint32_t *pui32Event))ROM_HIBERNATETABLE[43])
X#define ROM_HibernateTamperEventsGet                                                  ((bool (*)(uint32_t ui32Index,                                                           uint32_t *pui32RTC,                                                           uint32_t *pui32Event))ROM_HIBERNATETABLE[43])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateTamperExtOscValid                                        \
N        ((bool (*)(void))ROM_HIBERNATETABLE[44])
X#define ROM_HibernateTamperExtOscValid                                                ((bool (*)(void))ROM_HIBERNATETABLE[44])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateTamperExtOscRecover                                      \
N        ((void (*)(void))ROM_HIBERNATETABLE[45])
X#define ROM_HibernateTamperExtOscRecover                                              ((void (*)(void))ROM_HIBERNATETABLE[45])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateTamperIODisable                                          \
N        ((void (*)(uint32_t ui32Input))ROM_HIBERNATETABLE[46])
X#define ROM_HibernateTamperIODisable                                                  ((void (*)(uint32_t ui32Input))ROM_HIBERNATETABLE[46])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateTamperIOEnable                                           \
N        ((void (*)(uint32_t ui32Input,                                        \
N                   uint32_t ui32Config))ROM_HIBERNATETABLE[47])
X#define ROM_HibernateTamperIOEnable                                                   ((void (*)(uint32_t ui32Input,                                                           uint32_t ui32Config))ROM_HIBERNATETABLE[47])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateTamperStatusGet                                          \
N        ((uint32_t (*)(void))ROM_HIBERNATETABLE[48])
X#define ROM_HibernateTamperStatusGet                                                  ((uint32_t (*)(void))ROM_HIBERNATETABLE[48])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_HibernateRTCSSMatchGet                                            \
N        ((uint32_t (*)(uint32_t ui32Match))ROM_HIBERNATETABLE[51])
X#define ROM_HibernateRTCSSMatchGet                                                    ((uint32_t (*)(uint32_t ui32Match))ROM_HIBERNATETABLE[51])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the I2C API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterDataPut                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Data))ROM_I2CTABLE[0])
X#define ROM_I2CMasterDataPut                                                          ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Data))ROM_I2CTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterInitExpClk                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32I2CClk,                                       \
N                   bool bFast))ROM_I2CTABLE[1])
X#define ROM_I2CMasterInitExpClk                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32I2CClk,                                                          bool bFast))ROM_I2CTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterEnable                                                   \
N        ((void (*)(uint32_t ui32Base))ROM_I2CTABLE[3])
X#define ROM_I2CMasterEnable                                                           ((void (*)(uint32_t ui32Base))ROM_I2CTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterDisable                                                  \
N        ((void (*)(uint32_t ui32Base))ROM_I2CTABLE[5])
X#define ROM_I2CMasterDisable                                                          ((void (*)(uint32_t ui32Base))ROM_I2CTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterIntEnable                                                \
N        ((void (*)(uint32_t ui32Base))ROM_I2CTABLE[7])
X#define ROM_I2CMasterIntEnable                                                        ((void (*)(uint32_t ui32Base))ROM_I2CTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterIntDisable                                               \
N        ((void (*)(uint32_t ui32Base))ROM_I2CTABLE[9])
X#define ROM_I2CMasterIntDisable                                                       ((void (*)(uint32_t ui32Base))ROM_I2CTABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterIntStatus                                                \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   bool bMasked))ROM_I2CTABLE[11])
X#define ROM_I2CMasterIntStatus                                                        ((bool (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_I2CTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterIntClear                                                 \
N        ((void (*)(uint32_t ui32Base))ROM_I2CTABLE[13])
X#define ROM_I2CMasterIntClear                                                         ((void (*)(uint32_t ui32Base))ROM_I2CTABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterSlaveAddrSet                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8SlaveAddr,                                      \
N                   bool bReceive))ROM_I2CTABLE[15])
X#define ROM_I2CMasterSlaveAddrSet                                                     ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8SlaveAddr,                                                         bool bReceive))ROM_I2CTABLE[15])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterBusy                                                     \
N        ((bool (*)(uint32_t ui32Base))ROM_I2CTABLE[16])
X#define ROM_I2CMasterBusy                                                             ((bool (*)(uint32_t ui32Base))ROM_I2CTABLE[16])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterBusBusy                                                  \
N        ((bool (*)(uint32_t ui32Base))ROM_I2CTABLE[17])
X#define ROM_I2CMasterBusBusy                                                          ((bool (*)(uint32_t ui32Base))ROM_I2CTABLE[17])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterControl                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Cmd))ROM_I2CTABLE[18])
X#define ROM_I2CMasterControl                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Cmd))ROM_I2CTABLE[18])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterErr                                                      \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_I2CTABLE[19])
X#define ROM_I2CMasterErr                                                              ((uint32_t (*)(uint32_t ui32Base))ROM_I2CTABLE[19])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterDataGet                                                  \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_I2CTABLE[20])
X#define ROM_I2CMasterDataGet                                                          ((uint32_t (*)(uint32_t ui32Base))ROM_I2CTABLE[20])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UpdateI2C                                                         \
N        ((void (*)(void))ROM_I2CTABLE[24])
X#define ROM_UpdateI2C                                                                 ((void (*)(void))ROM_I2CTABLE[24])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterIntEnableEx                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_I2CTABLE[29])
X#define ROM_I2CMasterIntEnableEx                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_I2CTABLE[29])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterIntDisableEx                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_I2CTABLE[30])
X#define ROM_I2CMasterIntDisableEx                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_I2CTABLE[30])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterIntStatusEx                                              \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_I2CTABLE[31])
X#define ROM_I2CMasterIntStatusEx                                                      ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_I2CTABLE[31])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterIntClearEx                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_I2CTABLE[32])
X#define ROM_I2CMasterIntClearEx                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_I2CTABLE[32])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterTimeoutSet                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Value))ROM_I2CTABLE[33])
X#define ROM_I2CMasterTimeoutSet                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Value))ROM_I2CTABLE[33])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_I2CMasterLineStateGet                                             \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_I2CTABLE[38])
X#define ROM_I2CMasterLineStateGet                                                     ((uint32_t (*)(uint32_t ui32Base))ROM_I2CTABLE[38])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_I2CTxFIFOConfigSet                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_I2CTABLE[39])
X#define ROM_I2CTxFIFOConfigSet                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_I2CTABLE[39])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_I2CTxFIFOFlush                                                    \
N        ((void (*)(uint32_t ui32Base))ROM_I2CTABLE[40])
X#define ROM_I2CTxFIFOFlush                                                            ((void (*)(uint32_t ui32Base))ROM_I2CTABLE[40])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_I2CRxFIFOConfigSet                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_I2CTABLE[41])
X#define ROM_I2CRxFIFOConfigSet                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_I2CTABLE[41])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_I2CRxFIFOFlush                                                    \
N        ((void (*)(uint32_t ui32Base))ROM_I2CTABLE[42])
X#define ROM_I2CRxFIFOFlush                                                            ((void (*)(uint32_t ui32Base))ROM_I2CTABLE[42])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_I2CFIFOStatus                                                     \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_I2CTABLE[43])
X#define ROM_I2CFIFOStatus                                                             ((uint32_t (*)(uint32_t ui32Base))ROM_I2CTABLE[43])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_I2CFIFODataPut                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Data))ROM_I2CTABLE[44])
X#define ROM_I2CFIFODataPut                                                            ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Data))ROM_I2CTABLE[44])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_I2CFIFODataPutNonBlocking                                         \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint8_t ui8Data))ROM_I2CTABLE[45])
X#define ROM_I2CFIFODataPutNonBlocking                                                 ((uint32_t (*)(uint32_t ui32Base,                                                            uint8_t ui8Data))ROM_I2CTABLE[45])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_I2CFIFODataGet                                                    \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_I2CTABLE[46])
X#define ROM_I2CFIFODataGet                                                            ((uint32_t (*)(uint32_t ui32Base))ROM_I2CTABLE[46])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_I2CFIFODataGetNonBlocking                                         \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint8_t *pui8Data))ROM_I2CTABLE[47])
X#define ROM_I2CFIFODataGetNonBlocking                                                 ((uint32_t (*)(uint32_t ui32Base,                                                            uint8_t *pui8Data))ROM_I2CTABLE[47])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_I2CMasterBurstLengthSet                                           \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Length))ROM_I2CTABLE[48])
X#define ROM_I2CMasterBurstLengthSet                                                   ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Length))ROM_I2CTABLE[48])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_I2CMasterBurstCountGet                                            \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_I2CTABLE[49])
X#define ROM_I2CMasterBurstCountGet                                                    ((uint32_t (*)(uint32_t ui32Base))ROM_I2CTABLE[49])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_I2CMasterGlitchFilterConfigSet                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_I2CTABLE[54])
X#define ROM_I2CMasterGlitchFilterConfigSet                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_I2CTABLE[54])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the Interrupt API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_IntEnable                                                         \
N        ((void (*)(uint32_t ui32Interrupt))ROM_INTERRUPTTABLE[0])
X#define ROM_IntEnable                                                                 ((void (*)(uint32_t ui32Interrupt))ROM_INTERRUPTTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_IntMasterEnable                                                   \
N        ((bool (*)(void))ROM_INTERRUPTTABLE[1])
X#define ROM_IntMasterEnable                                                           ((bool (*)(void))ROM_INTERRUPTTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_IntMasterDisable                                                  \
N        ((bool (*)(void))ROM_INTERRUPTTABLE[2])
X#define ROM_IntMasterDisable                                                          ((bool (*)(void))ROM_INTERRUPTTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_IntDisable                                                        \
N        ((void (*)(uint32_t ui32Interrupt))ROM_INTERRUPTTABLE[3])
X#define ROM_IntDisable                                                                ((void (*)(uint32_t ui32Interrupt))ROM_INTERRUPTTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_IntPriorityGroupingSet                                            \
N        ((void (*)(uint32_t ui32Bits))ROM_INTERRUPTTABLE[4])
X#define ROM_IntPriorityGroupingSet                                                    ((void (*)(uint32_t ui32Bits))ROM_INTERRUPTTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_IntPriorityGroupingGet                                            \
N        ((uint32_t (*)(void))ROM_INTERRUPTTABLE[5])
X#define ROM_IntPriorityGroupingGet                                                    ((uint32_t (*)(void))ROM_INTERRUPTTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_IntPrioritySet                                                    \
N        ((void (*)(uint32_t ui32Interrupt,                                    \
N                   uint8_t ui8Priority))ROM_INTERRUPTTABLE[6])
X#define ROM_IntPrioritySet                                                            ((void (*)(uint32_t ui32Interrupt,                                                       uint8_t ui8Priority))ROM_INTERRUPTTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_IntPriorityGet                                                    \
N        ((int32_t (*)(uint32_t ui32Interrupt))ROM_INTERRUPTTABLE[7])
X#define ROM_IntPriorityGet                                                            ((int32_t (*)(uint32_t ui32Interrupt))ROM_INTERRUPTTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_IntPendSet                                                        \
N        ((void (*)(uint32_t ui32Interrupt))ROM_INTERRUPTTABLE[8])
X#define ROM_IntPendSet                                                                ((void (*)(uint32_t ui32Interrupt))ROM_INTERRUPTTABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_IntPendClear                                                      \
N        ((void (*)(uint32_t ui32Interrupt))ROM_INTERRUPTTABLE[9])
X#define ROM_IntPendClear                                                              ((void (*)(uint32_t ui32Interrupt))ROM_INTERRUPTTABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_IntPriorityMaskSet                                                \
N        ((void (*)(uint32_t ui32PriorityMask))ROM_INTERRUPTTABLE[10])
X#define ROM_IntPriorityMaskSet                                                        ((void (*)(uint32_t ui32PriorityMask))ROM_INTERRUPTTABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_IntPriorityMaskGet                                                \
N        ((uint32_t (*)(void))ROM_INTERRUPTTABLE[11])
X#define ROM_IntPriorityMaskGet                                                        ((uint32_t (*)(void))ROM_INTERRUPTTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            1L
N#define ROM_IntIsEnabled                                                      \
N        ((uint32_t (*)(uint32_t ui32Interrupt))ROM_INTERRUPTTABLE[12])
X#define ROM_IntIsEnabled                                                              ((uint32_t (*)(uint32_t ui32Interrupt))ROM_INTERRUPTTABLE[12])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the KBScan API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_KBScanIntStatus                                                   \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_KBSCANTABLE[0])
X#define ROM_KBScanIntStatus                                                           ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_KBSCANTABLE[0])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_KBScanConfigGet                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t *pui8ScanRows,                                     \
N                   uint8_t *pui8ScanCols,                                     \
N                   uint16_t *pui16ScanRowDelayuS,                             \
N                   uint16_t *pui16ScanRatemS,                                 \
N                   uint32_t *pui32Flags))ROM_KBSCANTABLE[1])
X#define ROM_KBScanConfigGet                                                           ((void (*)(uint32_t ui32Base,                                                            uint8_t *pui8ScanRows,                                                        uint8_t *pui8ScanCols,                                                        uint16_t *pui16ScanRowDelayuS,                                                uint16_t *pui16ScanRatemS,                                                    uint32_t *pui32Flags))ROM_KBSCANTABLE[1])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_KBScanConfigSet                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8ScanRows,                                       \
N                   uint8_t ui8ScanCols,                                       \
N                   uint16_t ui16ScanRowDelayuS,                               \
N                   uint16_t ui16ScanRatemS,                                   \
N                   uint32_t ui32Flags))ROM_KBSCANTABLE[2])
X#define ROM_KBScanConfigSet                                                           ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8ScanRows,                                                          uint8_t ui8ScanCols,                                                          uint16_t ui16ScanRowDelayuS,                                                  uint16_t ui16ScanRatemS,                                                      uint32_t ui32Flags))ROM_KBSCANTABLE[2])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_KBScanDisable                                                     \
N        ((void (*)(uint32_t ui32Base))ROM_KBSCANTABLE[3])
X#define ROM_KBScanDisable                                                             ((void (*)(uint32_t ui32Base))ROM_KBSCANTABLE[3])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_KBScanEnable                                                      \
N        ((void (*)(uint32_t ui32Base))ROM_KBSCANTABLE[4])
X#define ROM_KBScanEnable                                                              ((void (*)(uint32_t ui32Base))ROM_KBSCANTABLE[4])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_KBScanIntClear                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_KBSCANTABLE[5])
X#define ROM_KBScanIntClear                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_KBSCANTABLE[5])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_KBScanIntDisable                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_KBSCANTABLE[6])
X#define ROM_KBScanIntDisable                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_KBSCANTABLE[6])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_KBScanIntEnable                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_KBSCANTABLE[7])
X#define ROM_KBScanIntEnable                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_KBSCANTABLE[7])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_KBScanStatusGet                                                   \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t *pui32RowChange,                              \
N                       uint8_t *pui32Cols))ROM_KBSCANTABLE[8])
X#define ROM_KBScanStatusGet                                                           ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t *pui32RowChange,                                                     uint8_t *pui32Cols))ROM_KBSCANTABLE[8])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_KBScanTrigger                                                     \
N        ((void (*)(uint32_t ui32Base))ROM_KBSCANTABLE[9])
X#define ROM_KBScanTrigger                                                             ((void (*)(uint32_t ui32Base))ROM_KBSCANTABLE[9])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the LCD API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDIntStatus                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_LCDTABLE[0])
X#define ROM_LCDIntStatus                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_LCDTABLE[0])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDClockReset                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Clocks))ROM_LCDTABLE[1])
X#define ROM_LCDClockReset                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Clocks))ROM_LCDTABLE[1])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDDMAConfigSet                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_LCDTABLE[2])
X#define ROM_LCDDMAConfigSet                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_LCDTABLE[2])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDIDDCommandWrite                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32CS,                                           \
N                   uint16_t ui16Cmd))ROM_LCDTABLE[3])
X#define ROM_LCDIDDCommandWrite                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32CS,                                                              uint16_t ui16Cmd))ROM_LCDTABLE[3])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDIDDConfigSet                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_LCDTABLE[4])
X#define ROM_LCDIDDConfigSet                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_LCDTABLE[4])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDIDDDataRead                                                    \
N        ((uint16_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32CS))ROM_LCDTABLE[5])
X#define ROM_LCDIDDDataRead                                                            ((uint16_t (*)(uint32_t ui32Base,                                                            uint32_t ui32CS))ROM_LCDTABLE[5])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDIDDDataWrite                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32CS,                                           \
N                   uint16_t ui16Data))ROM_LCDTABLE[6])
X#define ROM_LCDIDDDataWrite                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32CS,                                                              uint16_t ui16Data))ROM_LCDTABLE[6])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDIDDDMADisable                                                  \
N        ((void (*)(uint32_t ui32Base))ROM_LCDTABLE[7])
X#define ROM_LCDIDDDMADisable                                                          ((void (*)(uint32_t ui32Base))ROM_LCDTABLE[7])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDIDDDMAWrite                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32CS,                                           \
N                   const uint32_t *pui32Data,                                 \
N                   uint32_t ui32Count))ROM_LCDTABLE[8])
X#define ROM_LCDIDDDMAWrite                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32CS,                                                              const uint32_t *pui32Data,                                                    uint32_t ui32Count))ROM_LCDTABLE[8])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDIDDIndexedRead                                                 \
N        ((uint16_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32CS,                                       \
N                       uint16_t ui16Addr))ROM_LCDTABLE[9])
X#define ROM_LCDIDDIndexedRead                                                         ((uint16_t (*)(uint32_t ui32Base,                                                            uint32_t ui32CS,                                                              uint16_t ui16Addr))ROM_LCDTABLE[9])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDIDDIndexedWrite                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32CS,                                           \
N                   uint16_t ui16Addr,                                         \
N                   uint16_t ui16Data))ROM_LCDTABLE[10])
X#define ROM_LCDIDDIndexedWrite                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32CS,                                                              uint16_t ui16Addr,                                                            uint16_t ui16Data))ROM_LCDTABLE[10])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDIDDStatusRead                                                  \
N        ((uint16_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32CS))ROM_LCDTABLE[11])
X#define ROM_LCDIDDStatusRead                                                          ((uint16_t (*)(uint32_t ui32Base,                                                            uint32_t ui32CS))ROM_LCDTABLE[11])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDIDDTimingSet                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32CS,                                           \
N                   const tLCDIDDTiming *pTiming))ROM_LCDTABLE[12])
X#define ROM_LCDIDDTimingSet                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32CS,                                                              const tLCDIDDTiming *pTiming))ROM_LCDTABLE[12])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDIntClear                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_LCDTABLE[13])
X#define ROM_LCDIntClear                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_LCDTABLE[13])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDIntDisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_LCDTABLE[14])
X#define ROM_LCDIntDisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_LCDTABLE[14])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDIntEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_LCDTABLE[15])
X#define ROM_LCDIntEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_LCDTABLE[15])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDModeSet                                                        \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint8_t ui8Mode,                                       \
N                       uint32_t ui32PixClk,                                   \
N                       uint32_t ui32SysClk))ROM_LCDTABLE[16])
X#define ROM_LCDModeSet                                                                ((uint32_t (*)(uint32_t ui32Base,                                                            uint8_t ui8Mode,                                                              uint32_t ui32PixClk,                                                          uint32_t ui32SysClk))ROM_LCDTABLE[16])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDRasterACBiasIntCountSet                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Count))ROM_LCDTABLE[17])
X#define ROM_LCDRasterACBiasIntCountSet                                                ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Count))ROM_LCDTABLE[17])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDRasterConfigSet                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config,                                       \
N                   uint8_t ui8PalLoadDelay))ROM_LCDTABLE[18])
X#define ROM_LCDRasterConfigSet                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config,                                                          uint8_t ui8PalLoadDelay))ROM_LCDTABLE[18])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDRasterDisable                                                  \
N        ((void (*)(uint32_t ui32Base))ROM_LCDTABLE[19])
X#define ROM_LCDRasterDisable                                                          ((void (*)(uint32_t ui32Base))ROM_LCDTABLE[19])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDRasterEnable                                                   \
N        ((void (*)(uint32_t ui32Base))ROM_LCDTABLE[20])
X#define ROM_LCDRasterEnable                                                           ((void (*)(uint32_t ui32Base))ROM_LCDTABLE[20])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDRasterFrameBufferSet                                           \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Buffer,                                         \
N                   uint32_t *pui32Addr,                                       \
N                   uint32_t ui32NumBytes))ROM_LCDTABLE[21])
X#define ROM_LCDRasterFrameBufferSet                                                   ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Buffer,                                                            uint32_t *pui32Addr,                                                          uint32_t ui32NumBytes))ROM_LCDTABLE[21])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDRasterPaletteSet                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Type,                                         \
N                   uint32_t *pui32PalAddr,                                    \
N                   const uint32_t *pui32SrcColors,                            \
N                   uint32_t ui32Start,                                        \
N                   uint32_t ui32Count))ROM_LCDTABLE[22])
X#define ROM_LCDRasterPaletteSet                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Type,                                                            uint32_t *pui32PalAddr,                                                       const uint32_t *pui32SrcColors,                                               uint32_t ui32Start,                                                           uint32_t ui32Count))ROM_LCDTABLE[22])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDRasterSubPanelConfigSet                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Flags,                                        \
N                   uint32_t ui32BottomLines,                                  \
N                   uint32_t ui32DefaultPixel))ROM_LCDTABLE[23])
X#define ROM_LCDRasterSubPanelConfigSet                                                ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Flags,                                                           uint32_t ui32BottomLines,                                                     uint32_t ui32DefaultPixel))ROM_LCDTABLE[23])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDRasterSubPanelDisable                                          \
N        ((void (*)(uint32_t ui32Base))ROM_LCDTABLE[24])
X#define ROM_LCDRasterSubPanelDisable                                                  ((void (*)(uint32_t ui32Base))ROM_LCDTABLE[24])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDRasterSubPanelEnable                                           \
N        ((void (*)(uint32_t ui32Base))ROM_LCDTABLE[25])
X#define ROM_LCDRasterSubPanelEnable                                                   ((void (*)(uint32_t ui32Base))ROM_LCDTABLE[25])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LCDRasterTimingSet                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   const tLCDRasterTiming *pTiming))ROM_LCDTABLE[26])
X#define ROM_LCDRasterTimingSet                                                        ((void (*)(uint32_t ui32Base,                                                            const tLCDRasterTiming *pTiming))ROM_LCDTABLE[26])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the LEDSeq API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LEDSeqIntStatus                                                   \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_LEDSEQTABLE[0])
X#define ROM_LEDSeqIntStatus                                                           ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_LEDSEQTABLE[0])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LEDSeqConfigGet                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Sequencer,                                      \
N                   uint8_t *pui8StepIndex,                                    \
N                   uint8_t *pui8NumSteps,                                     \
N                   uint32_t *pui32Flags))ROM_LEDSEQTABLE[1])
X#define ROM_LEDSeqConfigGet                                                           ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Sequencer,                                                         uint8_t *pui8StepIndex,                                                       uint8_t *pui8NumSteps,                                                        uint32_t *pui32Flags))ROM_LEDSEQTABLE[1])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LEDSeqConfigSet                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Sequencer,                                      \
N                   uint8_t ui8StepIndex,                                      \
N                   uint8_t ui8NumSteps,                                       \
N                   uint32_t ui32Flags))ROM_LEDSEQTABLE[2])
X#define ROM_LEDSeqConfigSet                                                           ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Sequencer,                                                         uint8_t ui8StepIndex,                                                         uint8_t ui8NumSteps,                                                          uint32_t ui32Flags))ROM_LEDSEQTABLE[2])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LEDSeqDisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Sequence))ROM_LEDSEQTABLE[3])
X#define ROM_LEDSeqDisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Sequence))ROM_LEDSEQTABLE[3])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LEDSeqEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Sequence))ROM_LEDSEQTABLE[4])
X#define ROM_LEDSeqEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Sequence))ROM_LEDSEQTABLE[4])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LEDSeqIntClear                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_LEDSEQTABLE[5])
X#define ROM_LEDSeqIntClear                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_LEDSEQTABLE[5])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LEDSeqIntDisable                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_LEDSEQTABLE[6])
X#define ROM_LEDSeqIntDisable                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_LEDSEQTABLE[6])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LEDSeqIntEnable                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_LEDSEQTABLE[7])
X#define ROM_LEDSeqIntEnable                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_LEDSEQTABLE[7])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LEDSeqSequenceGet                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8StartIndex,                                     \
N                   uint32_t *pui32Steps,                                      \
N                   uint8_t ui8NumSteps))ROM_LEDSEQTABLE[8])
X#define ROM_LEDSeqSequenceGet                                                         ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8StartIndex,                                                        uint32_t *pui32Steps,                                                         uint8_t ui8NumSteps))ROM_LEDSEQTABLE[8])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LEDSeqSequenceSet                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8StartIndex,                                     \
N                   uint32_t *pui32Steps,                                      \
N                   uint8_t ui8NumSteps))ROM_LEDSEQTABLE[9])
X#define ROM_LEDSeqSequenceSet                                                         ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8StartIndex,                                                        uint32_t *pui32Steps,                                                         uint8_t ui8NumSteps))ROM_LEDSEQTABLE[9])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the LPC API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCIntClear                                                       \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32IntFlags))ROM_LPCTABLE[0])
X#define ROM_LPCIntClear                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_LPCTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCByteRead                                                       \
S        ((uint8_t (*)(uint32_t ui32Base,                                      \
S                      uint32_t ui32Offset))ROM_LPCTABLE[1])
X#define ROM_LPCByteRead                                                               ((uint8_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Offset))ROM_LPCTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCByteWrite                                                      \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32Offset,                                       \
S                   uint8_t ui8Data))ROM_LPCTABLE[2])
X#define ROM_LPCByteWrite                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Offset,                                                          uint8_t ui8Data))ROM_LPCTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCChannelConfigCOMxSet                                           \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32Channel,                                      \
S                   uint32_t ui32Config,                                       \
S                   uint32_t ui32Address,                                      \
S                   uint32_t ui32Offset,                                       \
S                   uint32_t ui32COMxMode))ROM_LPCTABLE[3])
X#define ROM_LPCChannelConfigCOMxSet                                                   ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t ui32Config,                                                          uint32_t ui32Address,                                                         uint32_t ui32Offset,                                                          uint32_t ui32COMxMode))ROM_LPCTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCChannelConfigGet                                               \
S        ((uint32_t (*)(uint32_t ui32Base,                                     \
S                       uint32_t ui32Channel,                                  \
S                       uint32_t *pui32Address,                                \
S                       uint32_t *pui32Offset,                                 \
S                       uint32_t *pui32COMxMode))ROM_LPCTABLE[4])
X#define ROM_LPCChannelConfigGet                                                       ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t *pui32Address,                                                       uint32_t *pui32Offset,                                                        uint32_t *pui32COMxMode))ROM_LPCTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCChannelConfigEPSet                                             \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32Channel,                                      \
S                   uint32_t ui32Config,                                       \
S                   uint32_t ui32Address,                                      \
S                   uint32_t ui32Offset))ROM_LPCTABLE[5])
X#define ROM_LPCChannelConfigEPSet                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t ui32Config,                                                          uint32_t ui32Address,                                                         uint32_t ui32Offset))ROM_LPCTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCChannelConfigMBSet                                             \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32Channel,                                      \
S                   uint32_t ui32Config,                                       \
S                   uint32_t ui32Address,                                      \
S                   uint32_t ui32Offset))ROM_LPCTABLE[6])
X#define ROM_LPCChannelConfigMBSet                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t ui32Config,                                                          uint32_t ui32Address,                                                         uint32_t ui32Offset))ROM_LPCTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCChannelDMAConfigGet                                            \
S        ((uint32_t (*)(uint32_t ui32Base))ROM_LPCTABLE[7])
X#define ROM_LPCChannelDMAConfigGet                                                    ((uint32_t (*)(uint32_t ui32Base))ROM_LPCTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCChannelDMAConfigSet                                            \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32Config,                                       \
S                   uint32_t ui32Mask))ROM_LPCTABLE[8])
X#define ROM_LPCChannelDMAConfigSet                                                    ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config,                                                          uint32_t ui32Mask))ROM_LPCTABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCChannelDisable                                                 \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32Channel))ROM_LPCTABLE[9])
X#define ROM_LPCChannelDisable                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_LPCTABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCChannelEnable                                                  \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32Channel))ROM_LPCTABLE[10])
X#define ROM_LPCChannelEnable                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_LPCTABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCChannelStatusClear                                             \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32Channel,                                      \
S                   uint32_t ui32Status))ROM_LPCTABLE[11])
X#define ROM_LPCChannelStatusClear                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t ui32Status))ROM_LPCTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCChannelStatusGet                                               \
S        ((uint32_t (*)(uint32_t ui32Base,                                     \
S                       uint32_t ui32Channel))ROM_LPCTABLE[12])
X#define ROM_LPCChannelStatusGet                                                       ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_LPCTABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCChannelStatusSet                                               \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32Channel,                                      \
S                   uint32_t ui32Status))ROM_LPCTABLE[13])
X#define ROM_LPCChannelStatusSet                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t ui32Status))ROM_LPCTABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCCOMxIntClear                                                   \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32IntFlags))ROM_LPCTABLE[14])
X#define ROM_LPCCOMxIntClear                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_LPCTABLE[14])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCCOMxIntDisable                                                 \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32IntFlags))ROM_LPCTABLE[15])
X#define ROM_LPCCOMxIntDisable                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_LPCTABLE[15])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCCOMxIntEnable                                                  \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32IntFlags))ROM_LPCTABLE[16])
X#define ROM_LPCCOMxIntEnable                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_LPCTABLE[16])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCCOMxIntStatus                                                  \
S        ((uint32_t (*)(uint32_t ui32Base,                                     \
S                       bool bMasked))ROM_LPCTABLE[17])
X#define ROM_LPCCOMxIntStatus                                                          ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_LPCTABLE[17])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCConfigGet                                                      \
S        ((uint32_t (*)(uint32_t ui32Base))ROM_LPCTABLE[18])
X#define ROM_LPCConfigGet                                                              ((uint32_t (*)(uint32_t ui32Base))ROM_LPCTABLE[18])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCConfigSet                                                      \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32Config))ROM_LPCTABLE[19])
X#define ROM_LPCConfigSet                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_LPCTABLE[19])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCHalfWordRead                                                   \
S        ((uint16_t (*)(uint32_t ui32Base,                                     \
S                       uint32_t ui32Offset))ROM_LPCTABLE[20])
X#define ROM_LPCHalfWordRead                                                           ((uint16_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Offset))ROM_LPCTABLE[20])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCHalfWordWrite                                                  \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32Offset,                                       \
S                   uint16_t ui16Data))ROM_LPCTABLE[21])
X#define ROM_LPCHalfWordWrite                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Offset,                                                          uint16_t ui16Data))ROM_LPCTABLE[21])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCIRQClear                                                       \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32IRQ))ROM_LPCTABLE[22])
X#define ROM_LPCIRQClear                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IRQ))ROM_LPCTABLE[22])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCIRQConfig                                                      \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   bool bIRQPulse,                                            \
S                   bool bIRQOnChange))ROM_LPCTABLE[23])
X#define ROM_LPCIRQConfig                                                              ((void (*)(uint32_t ui32Base,                                                            bool bIRQPulse,                                                               bool bIRQOnChange))ROM_LPCTABLE[23])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCIRQGet                                                         \
S        ((uint32_t (*)(uint32_t ui32Base))ROM_LPCTABLE[24])
X#define ROM_LPCIRQGet                                                                 ((uint32_t (*)(uint32_t ui32Base))ROM_LPCTABLE[24])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCIRQSend                                                        \
S        ((void (*)(uint32_t ui32Base))ROM_LPCTABLE[25])
X#define ROM_LPCIRQSend                                                                ((void (*)(uint32_t ui32Base))ROM_LPCTABLE[25])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCIRQSet                                                         \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32IRQ))ROM_LPCTABLE[26])
X#define ROM_LPCIRQSet                                                                 ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IRQ))ROM_LPCTABLE[26])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCIntDisable                                                     \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32IntFlags))ROM_LPCTABLE[27])
X#define ROM_LPCIntDisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_LPCTABLE[27])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCIntEnable                                                      \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32IntFlags))ROM_LPCTABLE[28])
X#define ROM_LPCIntEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_LPCTABLE[28])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCIntStatus                                                      \
S        ((uint32_t (*)(uint32_t ui32Base,                                     \
S                       bool bMasked))ROM_LPCTABLE[29])
X#define ROM_LPCIntStatus                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_LPCTABLE[29])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCSCIAssert                                                      \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32Count))ROM_LPCTABLE[30])
X#define ROM_LPCSCIAssert                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Count))ROM_LPCTABLE[30])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCStatusGet                                                      \
S        ((uint32_t (*)(uint32_t ui32Base,                                     \
S                       uint32_t *pui32Count,                                  \
S                       uint32_t *pui32PoolSize))ROM_LPCTABLE[31])
X#define ROM_LPCStatusGet                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t *pui32Count,                                                         uint32_t *pui32PoolSize))ROM_LPCTABLE[31])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCWordRead                                                       \
S        ((uint32_t (*)(uint32_t ui32Base,                                     \
S                       uint32_t ui32Offset))ROM_LPCTABLE[32])
X#define ROM_LPCWordRead                                                               ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Offset))ROM_LPCTABLE[32])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCWordWrite                                                      \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32Offset,                                       \
S                   uint32_t ui32Data))ROM_LPCTABLE[33])
X#define ROM_LPCWordWrite                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Offset,                                                          uint32_t ui32Data))ROM_LPCTABLE[33])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCChannelPoolAddressGet                                          \
S        ((uint32_t (*)(uint32_t ui32Base,                                     \
S                       uint32_t ui32Channel))ROM_LPCTABLE[34])
X#define ROM_LPCChannelPoolAddressGet                                                  ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_LPCTABLE[34])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCStatusBlockAddressGet                                          \
S        ((uint32_t (*)(uint32_t ui32Base))ROM_LPCTABLE[35])
X#define ROM_LPCStatusBlockAddressGet                                                  ((uint32_t (*)(uint32_t ui32Base))ROM_LPCTABLE[35])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_LPCStatusBlockAddressSet                                          \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32Address,                                      \
S                   bool bEnabled))ROM_LPCTABLE[36])
X#define ROM_LPCStatusBlockAddressSet                                                  ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Address,                                                         bool bEnabled))ROM_LPCTABLE[36])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the LPCB API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBIntClear                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint64_t ui64IntFlags))ROM_LPCBTABLE[0])
X#define ROM_LPCBIntClear                                                              ((void (*)(uint32_t ui32Base,                                                            uint64_t ui64IntFlags))ROM_LPCBTABLE[0])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBByteRead                                                      \
N        ((uint8_t (*)(uint32_t ui32Base,                                      \
N                      uint32_t ui32Offset))ROM_LPCBTABLE[1])
X#define ROM_LPCBByteRead                                                              ((uint8_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Offset))ROM_LPCBTABLE[1])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBByteWrite                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Offset,                                       \
N                   uint8_t ui8Data))ROM_LPCBTABLE[2])
X#define ROM_LPCBByteWrite                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Offset,                                                          uint8_t ui8Data))ROM_LPCBTABLE[2])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBChannelConfigCOMxSet                                          \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Address,                                      \
N                   uint32_t ui32COMxMode))ROM_LPCBTABLE[3])
X#define ROM_LPCBChannelConfigCOMxSet                                                  ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Address,                                                         uint32_t ui32COMxMode))ROM_LPCBTABLE[3])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBChannelConfigGet                                              \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Channel,                                  \
N                       uint32_t *pui32Address,                                \
N                       uint32_t *pui32Offset,                                 \
N                       uint32_t *pui32COMxMode))ROM_LPCBTABLE[4])
X#define ROM_LPCBChannelConfigGet                                                      ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t *pui32Address,                                                       uint32_t *pui32Offset,                                                        uint32_t *pui32COMxMode))ROM_LPCBTABLE[4])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBChannelConfigEPSet                                            \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel,                                      \
N                   uint32_t ui32Config,                                       \
N                   uint32_t ui32Address,                                      \
N                   uint32_t ui32Offset))ROM_LPCBTABLE[5])
X#define ROM_LPCBChannelConfigEPSet                                                    ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t ui32Config,                                                          uint32_t ui32Address,                                                         uint32_t ui32Offset))ROM_LPCBTABLE[5])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBChannelConfigMBSet                                            \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel,                                      \
N                   uint32_t ui32Config,                                       \
N                   uint32_t ui32Address,                                      \
N                   uint32_t ui32Offset))ROM_LPCBTABLE[6])
X#define ROM_LPCBChannelConfigMBSet                                                    ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t ui32Config,                                                          uint32_t ui32Address,                                                         uint32_t ui32Offset))ROM_LPCBTABLE[6])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBChannelDMAConfigGet                                           \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_LPCBTABLE[7])
X#define ROM_LPCBChannelDMAConfigGet                                                   ((uint32_t (*)(uint32_t ui32Base))ROM_LPCBTABLE[7])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBChannelDMAConfigSet                                           \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config,                                       \
N                   uint32_t ui32Mask))ROM_LPCBTABLE[8])
X#define ROM_LPCBChannelDMAConfigSet                                                   ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config,                                                          uint32_t ui32Mask))ROM_LPCBTABLE[8])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBChannelDisable                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel))ROM_LPCBTABLE[9])
X#define ROM_LPCBChannelDisable                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_LPCBTABLE[9])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBChannelEnable                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel))ROM_LPCBTABLE[10])
X#define ROM_LPCBChannelEnable                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_LPCBTABLE[10])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBChannelStatusClear                                            \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel,                                      \
N                   uint64_t ui64Status))ROM_LPCBTABLE[11])
X#define ROM_LPCBChannelStatusClear                                                    ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint64_t ui64Status))ROM_LPCBTABLE[11])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBChannelStatusGet                                              \
N        ((uint64_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Channel))ROM_LPCBTABLE[12])
X#define ROM_LPCBChannelStatusGet                                                      ((uint64_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_LPCBTABLE[12])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBChannelStatusSet                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel,                                      \
N                   uint64_t ui64Status))ROM_LPCBTABLE[13])
X#define ROM_LPCBChannelStatusSet                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint64_t ui64Status))ROM_LPCBTABLE[13])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBConfigGet                                                     \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_LPCBTABLE[14])
X#define ROM_LPCBConfigGet                                                             ((uint32_t (*)(uint32_t ui32Base))ROM_LPCBTABLE[14])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBConfigSet                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_LPCBTABLE[15])
X#define ROM_LPCBConfigSet                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_LPCBTABLE[15])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBHalfWordRead                                                  \
N        ((uint16_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Offset))ROM_LPCBTABLE[16])
X#define ROM_LPCBHalfWordRead                                                          ((uint16_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Offset))ROM_LPCBTABLE[16])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBHalfWordWrite                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Offset,                                       \
N                   uint16_t ui16Data))ROM_LPCBTABLE[17])
X#define ROM_LPCBHalfWordWrite                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Offset,                                                          uint16_t ui16Data))ROM_LPCBTABLE[17])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBIRQClear                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IRQ))ROM_LPCBTABLE[18])
X#define ROM_LPCBIRQClear                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IRQ))ROM_LPCBTABLE[18])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBIRQConfig                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   bool bIRQOnChange))ROM_LPCBTABLE[19])
X#define ROM_LPCBIRQConfig                                                             ((void (*)(uint32_t ui32Base,                                                            bool bIRQOnChange))ROM_LPCBTABLE[19])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBIRQGet                                                        \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_LPCBTABLE[20])
X#define ROM_LPCBIRQGet                                                                ((uint32_t (*)(uint32_t ui32Base))ROM_LPCBTABLE[20])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBIRQSend                                                       \
N        ((void (*)(uint32_t ui32Base))ROM_LPCBTABLE[21])
X#define ROM_LPCBIRQSend                                                               ((void (*)(uint32_t ui32Base))ROM_LPCBTABLE[21])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBIRQSet                                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IRQ))ROM_LPCBTABLE[22])
X#define ROM_LPCBIRQSet                                                                ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IRQ))ROM_LPCBTABLE[22])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBIntDisable                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint64_t ui64IntFlags))ROM_LPCBTABLE[23])
X#define ROM_LPCBIntDisable                                                            ((void (*)(uint32_t ui32Base,                                                            uint64_t ui64IntFlags))ROM_LPCBTABLE[23])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBIntEnable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint64_t ui64IntFlags))ROM_LPCBTABLE[24])
X#define ROM_LPCBIntEnable                                                             ((void (*)(uint32_t ui32Base,                                                            uint64_t ui64IntFlags))ROM_LPCBTABLE[24])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBIntStatus                                                     \
N        ((uint64_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_LPCBTABLE[25])
X#define ROM_LPCBIntStatus                                                             ((uint64_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_LPCBTABLE[25])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBSCIAssert                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Count))ROM_LPCBTABLE[26])
X#define ROM_LPCBSCIAssert                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Count))ROM_LPCBTABLE[26])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBStatusGet                                                     \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t *pui32Count,                                  \
N                       uint32_t *pui32PoolSize))ROM_LPCBTABLE[27])
X#define ROM_LPCBStatusGet                                                             ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t *pui32Count,                                                         uint32_t *pui32PoolSize))ROM_LPCBTABLE[27])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBWordRead                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Offset))ROM_LPCBTABLE[28])
X#define ROM_LPCBWordRead                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Offset))ROM_LPCBTABLE[28])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBWordWrite                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Offset,                                       \
N                   uint32_t ui32Data))ROM_LPCBTABLE[29])
X#define ROM_LPCBWordWrite                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Offset,                                                          uint32_t ui32Data))ROM_LPCBTABLE[29])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBChannelPoolAddressGet                                         \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Channel))ROM_LPCBTABLE[30])
X#define ROM_LPCBChannelPoolAddressGet                                                 ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_LPCBTABLE[30])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBStatusBlockAddressGet                                         \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_LPCBTABLE[31])
X#define ROM_LPCBStatusBlockAddressGet                                                 ((uint32_t (*)(uint32_t ui32Base))ROM_LPCBTABLE[31])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBStatusBlockAddressSet                                         \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Address,                                      \
N                   bool bEnabled))ROM_LPCBTABLE[32])
X#define ROM_LPCBStatusBlockAddressSet                                                 ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Address,                                                         bool bEnabled))ROM_LPCBTABLE[32])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBChannelConfigCOMSet                                           \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32COM,                                          \
N                   uint32_t ui32Address,                                      \
N                   uint32_t ui32COMMode))ROM_LPCBTABLE[38])
X#define ROM_LPCBChannelConfigCOMSet                                                   ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32COM,                                                             uint32_t ui32Address,                                                         uint32_t ui32COMMode))ROM_LPCBTABLE[38])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBChannelConfigCOMGet                                           \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32COM,                                          \
N                   uint32_t *pui32Address,                                    \
N                   uint32_t *pui32COMMode))ROM_LPCBTABLE[39])
X#define ROM_LPCBChannelConfigCOMGet                                                   ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32COM,                                                             uint32_t *pui32Address,                                                       uint32_t *pui32COMMode))ROM_LPCBTABLE[39])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBCOMIntEnable                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32COM,                                          \
N                   uint32_t ui32Flags))ROM_LPCBTABLE[40])
X#define ROM_LPCBCOMIntEnable                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32COM,                                                             uint32_t ui32Flags))ROM_LPCBTABLE[40])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBCOMIntDisable                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32COM,                                          \
N                   uint32_t ui32Flags))ROM_LPCBTABLE[41])
X#define ROM_LPCBCOMIntDisable                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32COM,                                                             uint32_t ui32Flags))ROM_LPCBTABLE[41])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBCOMCTSSet                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32COM,                                          \
N                   bool bValue))ROM_LPCBTABLE[42])
X#define ROM_LPCBCOMCTSSet                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32COM,                                                             bool bValue))ROM_LPCBTABLE[42])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBCOMDSRSet                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32COM,                                          \
N                   bool bValue))ROM_LPCBTABLE[43])
X#define ROM_LPCBCOMDSRSet                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32COM,                                                             bool bValue))ROM_LPCBTABLE[43])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBCOMStatusGet                                                  \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32COM))ROM_LPCBTABLE[44])
X#define ROM_LPCBCOMStatusGet                                                          ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32COM))ROM_LPCBTABLE[44])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBCOMInterceptRXFIFOWrite                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32COM,                                          \
N                   uint8_t ui8Data))ROM_LPCBTABLE[45])
X#define ROM_LPCBCOMInterceptRXFIFOWrite                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32COM,                                                             uint8_t ui8Data))ROM_LPCBTABLE[45])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBCOMInterceptTXFIFORead                                        \
N        ((uint8_t (*)(uint32_t ui32Base,                                      \
N                      uint32_t ui32COM))ROM_LPCBTABLE[46])
X#define ROM_LPCBCOMInterceptTXFIFORead                                                ((uint8_t (*)(uint32_t ui32Base,                                                            uint32_t ui32COM))ROM_LPCBTABLE[46])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBChannelStallClear                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel))ROM_LPCBTABLE[47])
X#define ROM_LPCBChannelStallClear                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_LPCBTABLE[47])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_LPCBRTCAddressSet                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Address))ROM_LPCBTABLE[51])
X#define ROM_LPCBRTCAddressSet                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Address))ROM_LPCBTABLE[51])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the MPU API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_MPUEnable                                                         \
N        ((void (*)(uint32_t ui32MPUConfig))ROM_MPUTABLE[0])
X#define ROM_MPUEnable                                                                 ((void (*)(uint32_t ui32MPUConfig))ROM_MPUTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_MPUDisable                                                        \
N        ((void (*)(void))ROM_MPUTABLE[1])
X#define ROM_MPUDisable                                                                ((void (*)(void))ROM_MPUTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_MPURegionCountGet                                                 \
N        ((uint32_t (*)(void))ROM_MPUTABLE[2])
X#define ROM_MPURegionCountGet                                                         ((uint32_t (*)(void))ROM_MPUTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_MPURegionEnable                                                   \
N        ((void (*)(uint32_t ui32Region))ROM_MPUTABLE[3])
X#define ROM_MPURegionEnable                                                           ((void (*)(uint32_t ui32Region))ROM_MPUTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_MPURegionDisable                                                  \
N        ((void (*)(uint32_t ui32Region))ROM_MPUTABLE[4])
X#define ROM_MPURegionDisable                                                          ((void (*)(uint32_t ui32Region))ROM_MPUTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_MPURegionSet                                                      \
N        ((void (*)(uint32_t ui32Region,                                       \
N                   uint32_t ui32Addr,                                         \
N                   uint32_t ui32Flags))ROM_MPUTABLE[5])
X#define ROM_MPURegionSet                                                              ((void (*)(uint32_t ui32Region,                                                          uint32_t ui32Addr,                                                            uint32_t ui32Flags))ROM_MPUTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_MPURegionGet                                                      \
N        ((void (*)(uint32_t ui32Region,                                       \
N                   uint32_t *pui32Addr,                                       \
N                   uint32_t *pui32Flags))ROM_MPUTABLE[6])
X#define ROM_MPURegionGet                                                              ((void (*)(uint32_t ui32Region,                                                          uint32_t *pui32Addr,                                                          uint32_t *pui32Flags))ROM_MPUTABLE[6])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the OneWire API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_OneWireIntStatus                                                  \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_ONEWIRETABLE[0])
X#define ROM_OneWireIntStatus                                                          ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_ONEWIRETABLE[0])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_OneWireBusReset                                                   \
N        ((void (*)(uint32_t ui32Base))ROM_ONEWIRETABLE[1])
X#define ROM_OneWireBusReset                                                           ((void (*)(uint32_t ui32Base))ROM_ONEWIRETABLE[1])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_OneWireBusStatus                                                  \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_ONEWIRETABLE[2])
X#define ROM_OneWireBusStatus                                                          ((uint32_t (*)(uint32_t ui32Base))ROM_ONEWIRETABLE[2])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_OneWireDataGet                                                    \
N        ((void (*)(uint32_t u3i2Base,                                         \
N                   uint32_t *pui32Data))ROM_ONEWIRETABLE[3])
X#define ROM_OneWireDataGet                                                            ((void (*)(uint32_t u3i2Base,                                                            uint32_t *pui32Data))ROM_ONEWIRETABLE[3])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_OneWireDataGetNonBlocking                                         \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Data))ROM_ONEWIRETABLE[4])
X#define ROM_OneWireDataGetNonBlocking                                                 ((bool (*)(uint32_t ui32Base,                                                            uint32_t *pui32Data))ROM_ONEWIRETABLE[4])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_OneWireInit                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32InitFlags))ROM_ONEWIRETABLE[5])
X#define ROM_OneWireInit                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32InitFlags))ROM_ONEWIRETABLE[5])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_OneWireIntClear                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_ONEWIRETABLE[6])
X#define ROM_OneWireIntClear                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_ONEWIRETABLE[6])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_OneWireIntDisable                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_ONEWIRETABLE[7])
X#define ROM_OneWireIntDisable                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_ONEWIRETABLE[7])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_OneWireIntEnable                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_ONEWIRETABLE[8])
X#define ROM_OneWireIntEnable                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_ONEWIRETABLE[8])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_OneWireTransaction                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32OpFlags,                                      \
N                   uint32_t ui32Data,                                         \
N                   uint32_t ui32BitCnt))ROM_ONEWIRETABLE[9])
X#define ROM_OneWireTransaction                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32OpFlags,                                                         uint32_t ui32Data,                                                            uint32_t ui32BitCnt))ROM_ONEWIRETABLE[9])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_OneWireDMADisable                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32DMAFlags))ROM_ONEWIRETABLE[10])
X#define ROM_OneWireDMADisable                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32DMAFlags))ROM_ONEWIRETABLE[10])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_OneWireDMAEnable                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32DMAFlags))ROM_ONEWIRETABLE[11])
X#define ROM_OneWireDMAEnable                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32DMAFlags))ROM_ONEWIRETABLE[11])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the PECI API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIIntClear                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_PECITABLE[0])
X#define ROM_PECIIntClear                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_PECITABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIAdvCmdSend                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Cmd,                                            \
N                   uint8_t ui8HidRe,                                          \
N                   uint8_t ui8Domain,                                         \
N                   uint8_t ui8Proi8Add,                                       \
N                   uint32_t ui32Arg,                                          \
N                   uint8_t ui8Size,                                           \
N                   uint32_t ui32Data0,                                        \
N                   uint32_t ui32Data1))ROM_PECITABLE[1])
X#define ROM_PECIAdvCmdSend                                                            ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Cmd,                                                               uint8_t ui8HidRe,                                                             uint8_t ui8Domain,                                                            uint8_t ui8Proi8Add,                                                          uint32_t ui32Arg,                                                             uint8_t ui8Size,                                                              uint32_t ui32Data0,                                                           uint32_t ui32Data1))ROM_PECITABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIAdvCmdSendNonBlocking                                         \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint8_t ui8Cmd,                                        \
N                       uint8_t ui8HidRe,                                      \
N                       uint8_t ui8Domain,                                     \
N                       uint8_t ui8Proi8Add,                                   \
N                       uint32_t ui32Arg,                                      \
N                       uint8_t ui8Size,                                       \
N                       uint32_t ui32Data0,                                    \
N                       uint32_t ui32Data1))ROM_PECITABLE[2])
X#define ROM_PECIAdvCmdSendNonBlocking                                                 ((uint32_t (*)(uint32_t ui32Base,                                                            uint8_t ui8Cmd,                                                               uint8_t ui8HidRe,                                                             uint8_t ui8Domain,                                                            uint8_t ui8Proi8Add,                                                          uint32_t ui32Arg,                                                             uint8_t ui8Size,                                                              uint32_t ui32Data0,                                                           uint32_t ui32Data1))ROM_PECITABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIAdvCmdStatusGet                                               \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t *pui32Data0,                                  \
N                       uint32_t *pui32Data1))ROM_PECITABLE[3])
X#define ROM_PECIAdvCmdStatusGet                                                       ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t *pui32Data0,                                                         uint32_t *pui32Data1))ROM_PECITABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIConfigGet                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32PECIClk,                                      \
N                   uint32_t *pui32Baud,                                       \
N                   uint32_t *pui32Poll,                                       \
N                   uint32_t *pui32Offset,                                     \
N                   uint32_t *pui32Retry))ROM_PECITABLE[4])
X#define ROM_PECIConfigGet                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32PECIClk,                                                         uint32_t *pui32Baud,                                                          uint32_t *pui32Poll,                                                          uint32_t *pui32Offset,                                                        uint32_t *pui32Retry))ROM_PECITABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIConfigSet                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32PECIClk,                                      \
N                   uint32_t ui32Baud,                                         \
N                   uint32_t ui32Poll,                                         \
N                   uint32_t ui32Offset,                                       \
N                   uint32_t ui32Retry))ROM_PECITABLE[5])
X#define ROM_PECIConfigSet                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32PECIClk,                                                         uint32_t ui32Baud,                                                            uint32_t ui32Poll,                                                            uint32_t ui32Offset,                                                          uint32_t ui32Retry))ROM_PECITABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIDomainMaxReadClear                                            \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Domain))ROM_PECITABLE[6])
X#define ROM_PECIDomainMaxReadClear                                                    ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Domain))ROM_PECITABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIDomainValueClear                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Domain))ROM_PECITABLE[7])
X#define ROM_PECIDomainValueClear                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Domain))ROM_PECITABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIDomainConfigGet                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Domain,                                       \
N                   uint32_t *pui32High,                                       \
N                   uint32_t *pui32Low))ROM_PECITABLE[8])
X#define ROM_PECIDomainConfigGet                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Domain,                                                          uint32_t *pui32High,                                                          uint32_t *pui32Low))ROM_PECITABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIDomainConfigSet                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Domain,                                       \
N                   uint32_t ui32High,                                         \
N                   uint32_t ui32Low))ROM_PECITABLE[9])
X#define ROM_PECIDomainConfigSet                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Domain,                                                          uint32_t ui32High,                                                            uint32_t ui32Low))ROM_PECITABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIDomainDisable                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Domain))ROM_PECITABLE[10])
X#define ROM_PECIDomainDisable                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Domain))ROM_PECITABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIDomainEnable                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Domain))ROM_PECITABLE[11])
X#define ROM_PECIDomainEnable                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Domain))ROM_PECITABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIDomainMaxReadGet                                              \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Domain))ROM_PECITABLE[12])
X#define ROM_PECIDomainMaxReadGet                                                      ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Domain))ROM_PECITABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIDomainValueGet                                                \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Domain))ROM_PECITABLE[13])
X#define ROM_PECIDomainValueGet                                                        ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Domain))ROM_PECITABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIIntDisable                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_PECITABLE[14])
X#define ROM_PECIIntDisable                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_PECITABLE[14])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIIntEnable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags,                                     \
N                   uint32_t ui32IntMode))ROM_PECITABLE[15])
X#define ROM_PECIIntEnable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags,                                                        uint32_t ui32IntMode))ROM_PECITABLE[15])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIIntStatus                                                     \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_PECITABLE[16])
X#define ROM_PECIIntStatus                                                             ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_PECITABLE[16])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIBypassEnable                                                  \
N        ((void (*)(uint32_t ui32Base))ROM_PECITABLE[17])
X#define ROM_PECIBypassEnable                                                          ((void (*)(uint32_t ui32Base))ROM_PECITABLE[17])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PECIBypassDisable                                                 \
N        ((void (*)(uint32_t ui32Base))ROM_PECITABLE[18])
X#define ROM_PECIBypassDisable                                                         ((void (*)(uint32_t ui32Base))ROM_PECITABLE[18])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PECIDomainAverageConfigSet                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Domain,                                       \
N                   uint32_t ui32Config))ROM_PECITABLE[19])
X#define ROM_PECIDomainAverageConfigSet                                                ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Domain,                                                          uint32_t ui32Config))ROM_PECITABLE[19])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PECIDomainAverageGet                                              \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Domain))ROM_PECITABLE[20])
X#define ROM_PECIDomainAverageGet                                                      ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Domain))ROM_PECITABLE[20])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PECIDomainAverageConfigGet                                        \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Domain))ROM_PECITABLE[21])
X#define ROM_PECIDomainAverageConfigGet                                                ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Domain))ROM_PECITABLE[21])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PECIBaudGet                                                       \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32PECIClk))ROM_PECITABLE[22])
X#define ROM_PECIBaudGet                                                               ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32PECIClk))ROM_PECITABLE[22])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the Port80 API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_Port80DataWrite                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint16_t ui16Data))ROM_PORT80TABLE[0])
X#define ROM_Port80DataWrite                                                           ((void (*)(uint32_t ui32Base,                                                            uint16_t ui16Data))ROM_PORT80TABLE[0])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_Port80Config                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_PORT80TABLE[1])
X#define ROM_Port80Config                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_PORT80TABLE[1])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the PS2 API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PS2IntStatus                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Bus,                                      \
N                       bool bMasked))ROM_PS2TABLE[0])
X#define ROM_PS2IntStatus                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Bus,                                                             bool bMasked))ROM_PS2TABLE[0])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PS2CommandWrite                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Bus,                                          \
N                   uint8_t ui8Command,                                        \
N                   bool bExpectAck,                                           \
N                   uint8_t ui8RxCount))ROM_PS2TABLE[1])
X#define ROM_PS2CommandWrite                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Bus,                                                             uint8_t ui8Command,                                                           bool bExpectAck,                                                              uint8_t ui8RxCount))ROM_PS2TABLE[1])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PS2ConfigGet                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Bus))ROM_PS2TABLE[2])
X#define ROM_PS2ConfigGet                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Bus))ROM_PS2TABLE[2])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PS2ConfigSet                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Bus,                                          \
N                   uint32_t ui32Flags))ROM_PS2TABLE[3])
X#define ROM_PS2ConfigSet                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Bus,                                                             uint32_t ui32Flags))ROM_PS2TABLE[3])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PS2DataRead                                                       \
N        ((uint8_t (*)(uint32_t ui32Base,                                      \
N                      uint32_t ui32Bus,                                       \
N                      bool bMoreExpected,                                     \
N                      uint32_t *pui32Type))ROM_PS2TABLE[4])
X#define ROM_PS2DataRead                                                               ((uint8_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Bus,                                                             bool bMoreExpected,                                                           uint32_t *pui32Type))ROM_PS2TABLE[4])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PS2Disable                                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Bus))ROM_PS2TABLE[5])
X#define ROM_PS2Disable                                                                ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Bus))ROM_PS2TABLE[5])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PS2Enable                                                         \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Bus))ROM_PS2TABLE[6])
X#define ROM_PS2Enable                                                                 ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Bus))ROM_PS2TABLE[6])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PS2InhibitClear                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Bus))ROM_PS2TABLE[7])
X#define ROM_PS2InhibitClear                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Bus))ROM_PS2TABLE[7])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PS2InhibitSet                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Bus))ROM_PS2TABLE[8])
X#define ROM_PS2InhibitSet                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Bus))ROM_PS2TABLE[8])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PS2IntClear                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Bus,                                          \
N                   uint32_t ui32IntFlags))ROM_PS2TABLE[9])
X#define ROM_PS2IntClear                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Bus,                                                             uint32_t ui32IntFlags))ROM_PS2TABLE[9])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PS2IntDisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Bus,                                          \
N                   uint32_t ui32IntFlags))ROM_PS2TABLE[10])
X#define ROM_PS2IntDisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Bus,                                                             uint32_t ui32IntFlags))ROM_PS2TABLE[10])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PS2IntEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Bus,                                          \
N                   uint32_t ui32IntFlags))ROM_PS2TABLE[11])
X#define ROM_PS2IntEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Bus,                                                             uint32_t ui32IntFlags))ROM_PS2TABLE[11])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PS2StatusGet                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Bus,                                      \
N                       uint32_t *pui32Type))ROM_PS2TABLE[12])
X#define ROM_PS2StatusGet                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Bus,                                                             uint32_t *pui32Type))ROM_PS2TABLE[12])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the PWM API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMPulseWidthSet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32PWMOut,                                       \
N                   uint32_t ui32Width))ROM_PWMTABLE[0])
X#define ROM_PWMPulseWidthSet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32PWMOut,                                                          uint32_t ui32Width))ROM_PWMTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMGenConfigure                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Gen,                                          \
N                   uint32_t ui32Config))ROM_PWMTABLE[1])
X#define ROM_PWMGenConfigure                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen,                                                             uint32_t ui32Config))ROM_PWMTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMGenPeriodSet                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Gen,                                          \
N                   uint32_t ui32Period))ROM_PWMTABLE[2])
X#define ROM_PWMGenPeriodSet                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen,                                                             uint32_t ui32Period))ROM_PWMTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMGenPeriodGet                                                   \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Gen))ROM_PWMTABLE[3])
X#define ROM_PWMGenPeriodGet                                                           ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen))ROM_PWMTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMGenEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Gen))ROM_PWMTABLE[4])
X#define ROM_PWMGenEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen))ROM_PWMTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMGenDisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Gen))ROM_PWMTABLE[5])
X#define ROM_PWMGenDisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen))ROM_PWMTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMPulseWidthGet                                                  \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32PWMOut))ROM_PWMTABLE[6])
X#define ROM_PWMPulseWidthGet                                                          ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32PWMOut))ROM_PWMTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMDeadBandEnable                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Gen,                                          \
N                   uint16_t ui16Rise,                                         \
N                   uint16_t ui16Fall))ROM_PWMTABLE[7])
X#define ROM_PWMDeadBandEnable                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen,                                                             uint16_t ui16Rise,                                                            uint16_t ui16Fall))ROM_PWMTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMDeadBandDisable                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Gen))ROM_PWMTABLE[8])
X#define ROM_PWMDeadBandDisable                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen))ROM_PWMTABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMSyncUpdate                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32GenBits))ROM_PWMTABLE[9])
X#define ROM_PWMSyncUpdate                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32GenBits))ROM_PWMTABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMSyncTimeBase                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32GenBits))ROM_PWMTABLE[10])
X#define ROM_PWMSyncTimeBase                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32GenBits))ROM_PWMTABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMOutputState                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32PWMOutBits,                                   \
N                   bool bEnable))ROM_PWMTABLE[11])
X#define ROM_PWMOutputState                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32PWMOutBits,                                                      bool bEnable))ROM_PWMTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMOutputInvert                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32PWMOutBits,                                   \
N                   bool bInvert))ROM_PWMTABLE[12])
X#define ROM_PWMOutputInvert                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32PWMOutBits,                                                      bool bInvert))ROM_PWMTABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMOutputFault                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32PWMOutBits,                                   \
N                   bool bFaultSuppress))ROM_PWMTABLE[13])
X#define ROM_PWMOutputFault                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32PWMOutBits,                                                      bool bFaultSuppress))ROM_PWMTABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMGenIntTrigEnable                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Gen,                                          \
N                   uint32_t ui32IntTrig))ROM_PWMTABLE[14])
X#define ROM_PWMGenIntTrigEnable                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen,                                                             uint32_t ui32IntTrig))ROM_PWMTABLE[14])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMGenIntTrigDisable                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Gen,                                          \
N                   uint32_t ui32IntTrig))ROM_PWMTABLE[15])
X#define ROM_PWMGenIntTrigDisable                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen,                                                             uint32_t ui32IntTrig))ROM_PWMTABLE[15])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMGenIntStatus                                                   \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Gen,                                      \
N                       bool bMasked))ROM_PWMTABLE[16])
X#define ROM_PWMGenIntStatus                                                           ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen,                                                             bool bMasked))ROM_PWMTABLE[16])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMGenIntClear                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Gen,                                          \
N                   uint32_t ui32Ints))ROM_PWMTABLE[17])
X#define ROM_PWMGenIntClear                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen,                                                             uint32_t ui32Ints))ROM_PWMTABLE[17])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMIntEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32GenFault))ROM_PWMTABLE[18])
X#define ROM_PWMIntEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32GenFault))ROM_PWMTABLE[18])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMIntDisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32GenFault))ROM_PWMTABLE[19])
X#define ROM_PWMIntDisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32GenFault))ROM_PWMTABLE[19])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMFaultIntClear                                                  \
N        ((void (*)(uint32_t ui32Base))ROM_PWMTABLE[20])
X#define ROM_PWMFaultIntClear                                                          ((void (*)(uint32_t ui32Base))ROM_PWMTABLE[20])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMIntStatus                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_PWMTABLE[21])
X#define ROM_PWMIntStatus                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_PWMTABLE[21])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMOutputFaultLevel                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32PWMOutBits,                                   \
N                   bool bDriveHigh))ROM_PWMTABLE[22])
X#define ROM_PWMOutputFaultLevel                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32PWMOutBits,                                                      bool bDriveHigh))ROM_PWMTABLE[22])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMFaultIntClearExt                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32FaultInts))ROM_PWMTABLE[23])
X#define ROM_PWMFaultIntClearExt                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32FaultInts))ROM_PWMTABLE[23])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMGenFaultConfigure                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Gen,                                          \
N                   uint32_t ui32MinFaultPeriod,                               \
N                   uint32_t ui32FaultSenses))ROM_PWMTABLE[24])
X#define ROM_PWMGenFaultConfigure                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen,                                                             uint32_t ui32MinFaultPeriod,                                                  uint32_t ui32FaultSenses))ROM_PWMTABLE[24])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMGenFaultTriggerSet                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Gen,                                          \
N                   uint32_t ui32Group,                                        \
N                   uint32_t ui32FaultTriggers))ROM_PWMTABLE[25])
X#define ROM_PWMGenFaultTriggerSet                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen,                                                             uint32_t ui32Group,                                                           uint32_t ui32FaultTriggers))ROM_PWMTABLE[25])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMGenFaultTriggerGet                                             \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Gen,                                      \
N                       uint32_t ui32Group))ROM_PWMTABLE[26])
X#define ROM_PWMGenFaultTriggerGet                                                     ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen,                                                             uint32_t ui32Group))ROM_PWMTABLE[26])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMGenFaultStatus                                                 \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Gen,                                      \
N                       uint32_t ui32Group))ROM_PWMTABLE[27])
X#define ROM_PWMGenFaultStatus                                                         ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen,                                                             uint32_t ui32Group))ROM_PWMTABLE[27])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_PWMGenFaultClear                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Gen,                                          \
N                   uint32_t ui32Group,                                        \
N                   uint32_t ui32FaultTriggers))ROM_PWMTABLE[28])
X#define ROM_PWMGenFaultClear                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Gen,                                                             uint32_t ui32Group,                                                           uint32_t ui32FaultTriggers))ROM_PWMTABLE[28])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PWMClockSet                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_PWMTABLE[29])
X#define ROM_PWMClockSet                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_PWMTABLE[29])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_PWMClockGet                                                       \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_PWMTABLE[30])
X#define ROM_PWMClockGet                                                               ((uint32_t (*)(uint32_t ui32Base))ROM_PWMTABLE[30])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            1L
N#define ROM_PWMOutputUpdateMode                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32PWMOutBits,                                   \
N                   uint32_t ui32Mode))ROM_PWMTABLE[31])
X#define ROM_PWMOutputUpdateMode                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32PWMOutBits,                                                      uint32_t ui32Mode))ROM_PWMTABLE[31])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the QEI API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_QEIPositionGet                                                    \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_QEITABLE[0])
X#define ROM_QEIPositionGet                                                            ((uint32_t (*)(uint32_t ui32Base))ROM_QEITABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_QEIEnable                                                         \
N        ((void (*)(uint32_t ui32Base))ROM_QEITABLE[1])
X#define ROM_QEIEnable                                                                 ((void (*)(uint32_t ui32Base))ROM_QEITABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_QEIDisable                                                        \
N        ((void (*)(uint32_t ui32Base))ROM_QEITABLE[2])
X#define ROM_QEIDisable                                                                ((void (*)(uint32_t ui32Base))ROM_QEITABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_QEIConfigure                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config,                                       \
N                   uint32_t ui32MaxPosition))ROM_QEITABLE[3])
X#define ROM_QEIConfigure                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config,                                                          uint32_t ui32MaxPosition))ROM_QEITABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_QEIPositionSet                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Position))ROM_QEITABLE[4])
X#define ROM_QEIPositionSet                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Position))ROM_QEITABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_QEIDirectionGet                                                   \
N        ((int32_t (*)(uint32_t ui32Base))ROM_QEITABLE[5])
X#define ROM_QEIDirectionGet                                                           ((int32_t (*)(uint32_t ui32Base))ROM_QEITABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_QEIErrorGet                                                       \
N        ((bool (*)(uint32_t ui32Base))ROM_QEITABLE[6])
X#define ROM_QEIErrorGet                                                               ((bool (*)(uint32_t ui32Base))ROM_QEITABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_QEIVelocityEnable                                                 \
N        ((void (*)(uint32_t ui32Base))ROM_QEITABLE[7])
X#define ROM_QEIVelocityEnable                                                         ((void (*)(uint32_t ui32Base))ROM_QEITABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_QEIVelocityDisable                                                \
N        ((void (*)(uint32_t ui32Base))ROM_QEITABLE[8])
X#define ROM_QEIVelocityDisable                                                        ((void (*)(uint32_t ui32Base))ROM_QEITABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_QEIVelocityConfigure                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32PreDiv,                                       \
N                   uint32_t ui32Period))ROM_QEITABLE[9])
X#define ROM_QEIVelocityConfigure                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32PreDiv,                                                          uint32_t ui32Period))ROM_QEITABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_QEIVelocityGet                                                    \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_QEITABLE[10])
X#define ROM_QEIVelocityGet                                                            ((uint32_t (*)(uint32_t ui32Base))ROM_QEITABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_QEIIntEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_QEITABLE[11])
X#define ROM_QEIIntEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_QEITABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_QEIIntDisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_QEITABLE[12])
X#define ROM_QEIIntDisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_QEITABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_QEIIntStatus                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_QEITABLE[13])
X#define ROM_QEIIntStatus                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_QEITABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_QEIIntClear                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_QEITABLE[14])
X#define ROM_QEIIntClear                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_QEITABLE[14])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the SHAMD5 API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5IntStatus                                                   \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_SHAMD5TABLE[0])
X#define ROM_SHAMD5IntStatus                                                           ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_SHAMD5TABLE[0])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5ConfigSet                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Mode))ROM_SHAMD5TABLE[1])
X#define ROM_SHAMD5ConfigSet                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Mode))ROM_SHAMD5TABLE[1])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5DataProcess                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32DataSrc,                                    \
N                   uint32_t ui32DataLength,                                   \
N                   uint32_t *pui32HashResult))ROM_SHAMD5TABLE[2])
X#define ROM_SHAMD5DataProcess                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32DataSrc,                                                       uint32_t ui32DataLength,                                                      uint32_t *pui32HashResult))ROM_SHAMD5TABLE[2])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5DataWrite                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Src))ROM_SHAMD5TABLE[3])
X#define ROM_SHAMD5DataWrite                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32Src))ROM_SHAMD5TABLE[3])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5DataWriteNonBlocking                                        \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Src))ROM_SHAMD5TABLE[4])
X#define ROM_SHAMD5DataWriteNonBlocking                                                ((bool (*)(uint32_t ui32Base,                                                            uint32_t *pui32Src))ROM_SHAMD5TABLE[4])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5DMADisable                                                  \
N        ((void (*)(uint32_t ui32Base))ROM_SHAMD5TABLE[5])
X#define ROM_SHAMD5DMADisable                                                          ((void (*)(uint32_t ui32Base))ROM_SHAMD5TABLE[5])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5DMAEnable                                                   \
N        ((void (*)(uint32_t ui32Base))ROM_SHAMD5TABLE[6])
X#define ROM_SHAMD5DMAEnable                                                           ((void (*)(uint32_t ui32Base))ROM_SHAMD5TABLE[6])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5HashLengthSet                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Length))ROM_SHAMD5TABLE[7])
X#define ROM_SHAMD5HashLengthSet                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Length))ROM_SHAMD5TABLE[7])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5HMACKeySet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Src))ROM_SHAMD5TABLE[8])
X#define ROM_SHAMD5HMACKeySet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32Src))ROM_SHAMD5TABLE[8])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5HMACPPKeyGenerate                                           \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Key,                                        \
N                   uint32_t *pui32PPKey))ROM_SHAMD5TABLE[9])
X#define ROM_SHAMD5HMACPPKeyGenerate                                                   ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32Key,                                                           uint32_t *pui32PPKey))ROM_SHAMD5TABLE[9])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5HMACPPKeySet                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Src))ROM_SHAMD5TABLE[10])
X#define ROM_SHAMD5HMACPPKeySet                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32Src))ROM_SHAMD5TABLE[10])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5HMACProcess                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32DataSrc,                                    \
N                   uint32_t ui32DataLength,                                   \
N                   uint32_t *pui32HashResult))ROM_SHAMD5TABLE[11])
X#define ROM_SHAMD5HMACProcess                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32DataSrc,                                                       uint32_t ui32DataLength,                                                      uint32_t *pui32HashResult))ROM_SHAMD5TABLE[11])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5IntClear                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_SHAMD5TABLE[12])
X#define ROM_SHAMD5IntClear                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_SHAMD5TABLE[12])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5IntDisable                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_SHAMD5TABLE[13])
X#define ROM_SHAMD5IntDisable                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_SHAMD5TABLE[13])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5IntEnable                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_SHAMD5TABLE[14])
X#define ROM_SHAMD5IntEnable                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_SHAMD5TABLE[14])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5Reset                                                       \
N        ((void (*)(uint32_t ui32Base))ROM_SHAMD5TABLE[15])
X#define ROM_SHAMD5Reset                                                               ((void (*)(uint32_t ui32Base))ROM_SHAMD5TABLE[15])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SHAMD5ResultRead                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Dest))ROM_SHAMD5TABLE[16])
X#define ROM_SHAMD5ResultRead                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32Dest))ROM_SHAMD5TABLE[16])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the SMBus API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterIntProcess                                             \
N        ((tSMBusStatus (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[0])
X#define ROM_SMBusMasterIntProcess                                                     ((tSMBusStatus (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusARPDisable                                                   \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[1])
X#define ROM_SMBusARPDisable                                                           ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusARPEnable                                                    \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[2])
X#define ROM_SMBusARPEnable                                                            ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusARPUDIDPacketDecode                                          \
N        ((void (*)(tSMBusUDID *pUDID,                                         \
N                   uint8_t *pui8Address,                                      \
N                   uint8_t *pui8Data))ROM_SMBUSTABLE[3])
X#define ROM_SMBusARPUDIDPacketDecode                                                  ((void (*)(tSMBusUDID *pUDID,                                                            uint8_t *pui8Address,                                                         uint8_t *pui8Data))ROM_SMBUSTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusARPUDIDPacketEncode                                          \
N        ((void (*)(tSMBusUDID *pUDID,                                         \
N                   uint8_t ui8Address,                                        \
N                   uint8_t *pui8Data))ROM_SMBUSTABLE[4])
X#define ROM_SMBusARPUDIDPacketEncode                                                  ((void (*)(tSMBusUDID *pUDID,                                                            uint8_t ui8Address,                                                           uint8_t *pui8Data))ROM_SMBUSTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterARPAssignAddress                                       \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t *pui8Data))ROM_SMBUSTABLE[5])
X#define ROM_SMBusMasterARPAssignAddress                                               ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t *pui8Data))ROM_SMBUSTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterARPGetUDIDDir                                          \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t ui8TargetAddress,                          \
N                           uint8_t *pui8Data))ROM_SMBUSTABLE[6])
X#define ROM_SMBusMasterARPGetUDIDDir                                                  ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t ui8TargetAddress,                                                     uint8_t *pui8Data))ROM_SMBUSTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterARPGetUDIDGen                                          \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t *pui8Data))ROM_SMBUSTABLE[7])
X#define ROM_SMBusMasterARPGetUDIDGen                                                  ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t *pui8Data))ROM_SMBUSTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterARPNotifyMaster                                        \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t *pui8Data))ROM_SMBUSTABLE[8])
X#define ROM_SMBusMasterARPNotifyMaster                                                ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t *pui8Data))ROM_SMBUSTABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterARPPrepareToARP                                        \
N        ((tSMBusStatus (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[9])
X#define ROM_SMBusMasterARPPrepareToARP                                                ((tSMBusStatus (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterARPResetDeviceDir                                      \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t ui8TargetAddress))ROM_SMBUSTABLE[10])
X#define ROM_SMBusMasterARPResetDeviceDir                                              ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t ui8TargetAddress))ROM_SMBUSTABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterARPResetDeviceGen                                      \
N        ((tSMBusStatus (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[11])
X#define ROM_SMBusMasterARPResetDeviceGen                                              ((tSMBusStatus (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterBlockProcessCall                                       \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t ui8TargetAddress,                          \
N                           uint8_t ui8Command,                                \
N                           uint8_t *pui8TxData,                               \
N                           uint8_t ui8TxSize,                                 \
N                           uint8_t *pui8RxData))ROM_SMBUSTABLE[12])
X#define ROM_SMBusMasterBlockProcessCall                                               ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t ui8TargetAddress,                                                     uint8_t ui8Command,                                                           uint8_t *pui8TxData,                                                          uint8_t ui8TxSize,                                                            uint8_t *pui8RxData))ROM_SMBUSTABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterBlockRead                                              \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t ui8TargetAddress,                          \
N                           uint8_t ui8Command,                                \
N                           uint8_t *pui8Data))ROM_SMBUSTABLE[13])
X#define ROM_SMBusMasterBlockRead                                                      ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t ui8TargetAddress,                                                     uint8_t ui8Command,                                                           uint8_t *pui8Data))ROM_SMBUSTABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterBlockWrite                                             \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t ui8TargetAddress,                          \
N                           uint8_t ui8Command,                                \
N                           uint8_t *pui8Data,                                 \
N                           uint8_t ui8Size))ROM_SMBUSTABLE[14])
X#define ROM_SMBusMasterBlockWrite                                                     ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t ui8TargetAddress,                                                     uint8_t ui8Command,                                                           uint8_t *pui8Data,                                                            uint8_t ui8Size))ROM_SMBUSTABLE[14])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterByteReceive                                            \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t ui8TargetAddress,                          \
N                           uint8_t *pui8Data))ROM_SMBUSTABLE[15])
X#define ROM_SMBusMasterByteReceive                                                    ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t ui8TargetAddress,                                                     uint8_t *pui8Data))ROM_SMBUSTABLE[15])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterByteSend                                               \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t ui8TargetAddress,                          \
N                           uint8_t ui8Data))ROM_SMBUSTABLE[16])
X#define ROM_SMBusMasterByteSend                                                       ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t ui8TargetAddress,                                                     uint8_t ui8Data))ROM_SMBUSTABLE[16])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterByteWordRead                                           \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t ui8TargetAddress,                          \
N                           uint8_t ui8Command,                                \
N                           uint8_t *pui8Data,                                 \
N                           uint8_t ui8Size))ROM_SMBUSTABLE[17])
X#define ROM_SMBusMasterByteWordRead                                                   ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t ui8TargetAddress,                                                     uint8_t ui8Command,                                                           uint8_t *pui8Data,                                                            uint8_t ui8Size))ROM_SMBUSTABLE[17])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterByteWordWrite                                          \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t ui8TargetAddress,                          \
N                           uint8_t ui8Command,                                \
N                           uint8_t *pui8Data,                                 \
N                           uint8_t ui8Size))ROM_SMBUSTABLE[18])
X#define ROM_SMBusMasterByteWordWrite                                                  ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t ui8TargetAddress,                                                     uint8_t ui8Command,                                                           uint8_t *pui8Data,                                                            uint8_t ui8Size))ROM_SMBUSTABLE[18])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterHostNotify                                             \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t ui8OwnSlaveAddress,                        \
N                           uint8_t *pui8Data))ROM_SMBUSTABLE[19])
X#define ROM_SMBusMasterHostNotify                                                     ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t ui8OwnSlaveAddress,                                                   uint8_t *pui8Data))ROM_SMBUSTABLE[19])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterI2CRead                                                \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t ui8TargetAddress,                          \
N                           uint8_t *pui8Data,                                 \
N                           uint8_t ui8Size))ROM_SMBUSTABLE[20])
X#define ROM_SMBusMasterI2CRead                                                        ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t ui8TargetAddress,                                                     uint8_t *pui8Data,                                                            uint8_t ui8Size))ROM_SMBUSTABLE[20])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterI2CWrite                                               \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t ui8TargetAddress,                          \
N                           uint8_t *pui8Data,                                 \
N                           uint8_t ui8Size))ROM_SMBUSTABLE[21])
X#define ROM_SMBusMasterI2CWrite                                                       ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t ui8TargetAddress,                                                     uint8_t *pui8Data,                                                            uint8_t ui8Size))ROM_SMBUSTABLE[21])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterI2CWriteRead                                           \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t ui8TargetAddress,                          \
N                           uint8_t *pui8TxData,                               \
N                           uint8_t ui8TxSize,                                 \
N                           uint8_t *pui8RxData,                               \
N                           uint8_t ui8RxSize))ROM_SMBUSTABLE[22])
X#define ROM_SMBusMasterI2CWriteRead                                                   ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t ui8TargetAddress,                                                     uint8_t *pui8TxData,                                                          uint8_t ui8TxSize,                                                            uint8_t *pui8RxData,                                                          uint8_t ui8RxSize))ROM_SMBUSTABLE[22])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterInit                                                   \
N        ((void (*)(tSMBus *psSMBus,                                           \
N                   uint32_t ui32I2CBase,                                      \
N                   uint32_t ui32SMBusClock))ROM_SMBUSTABLE[23])
X#define ROM_SMBusMasterInit                                                           ((void (*)(tSMBus *psSMBus,                                                              uint32_t ui32I2CBase,                                                         uint32_t ui32SMBusClock))ROM_SMBUSTABLE[23])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterIntEnable                                              \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[24])
X#define ROM_SMBusMasterIntEnable                                                      ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[24])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterProcessCall                                            \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t ui8TargetAddress,                          \
N                           uint8_t ui8Command,                                \
N                           uint8_t *pui8TxData,                               \
N                           uint8_t *pui8RxData))ROM_SMBUSTABLE[25])
X#define ROM_SMBusMasterProcessCall                                                    ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t ui8TargetAddress,                                                     uint8_t ui8Command,                                                           uint8_t *pui8TxData,                                                          uint8_t *pui8RxData))ROM_SMBUSTABLE[25])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusMasterQuickCommand                                           \
N        ((tSMBusStatus (*)(tSMBus *psSMBus,                                   \
N                           uint8_t ui8TargetAddress,                          \
N                           bool bData))ROM_SMBUSTABLE[26])
X#define ROM_SMBusMasterQuickCommand                                                   ((tSMBusStatus (*)(tSMBus *psSMBus,                                                              uint8_t ui8TargetAddress,                                                     bool bData))ROM_SMBUSTABLE[26])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusPECDisable                                                   \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[27])
X#define ROM_SMBusPECDisable                                                           ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[27])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusPECEnable                                                    \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[28])
X#define ROM_SMBusPECEnable                                                            ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[28])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusRxPacketSizeGet                                              \
N        ((uint8_t (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[29])
X#define ROM_SMBusRxPacketSizeGet                                                      ((uint8_t (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[29])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveACKSend                                                 \
N        ((void (*)(tSMBus *psSMBus,                                           \
N                   bool bACK))ROM_SMBUSTABLE[30])
X#define ROM_SMBusSlaveACKSend                                                         ((void (*)(tSMBus *psSMBus,                                                              bool bACK))ROM_SMBUSTABLE[30])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveAddressSet                                              \
N        ((void (*)(tSMBus *psSMBus,                                           \
N                   uint8_t ui8AddressNum,                                     \
N                   uint8_t ui8SlaveAddress))ROM_SMBUSTABLE[31])
X#define ROM_SMBusSlaveAddressSet                                                      ((void (*)(tSMBus *psSMBus,                                                              uint8_t ui8AddressNum,                                                        uint8_t ui8SlaveAddress))ROM_SMBUSTABLE[31])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveARPFlagARGet                                            \
N        ((bool (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[32])
X#define ROM_SMBusSlaveARPFlagARGet                                                    ((bool (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[32])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveARPFlagARSet                                            \
N        ((void (*)(tSMBus *psSMBus,                                           \
N                   bool bValue))ROM_SMBUSTABLE[33])
X#define ROM_SMBusSlaveARPFlagARSet                                                    ((void (*)(tSMBus *psSMBus,                                                              bool bValue))ROM_SMBUSTABLE[33])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveARPFlagAVGet                                            \
N        ((bool (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[34])
X#define ROM_SMBusSlaveARPFlagAVGet                                                    ((bool (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[34])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveARPFlagAVSet                                            \
N        ((void (*)(tSMBus *psSMBus,                                           \
N                   bool bValue))ROM_SMBUSTABLE[35])
X#define ROM_SMBusSlaveARPFlagAVSet                                                    ((void (*)(tSMBus *psSMBus,                                                              bool bValue))ROM_SMBUSTABLE[35])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveBlockTransferDisable                                    \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[36])
X#define ROM_SMBusSlaveBlockTransferDisable                                            ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[36])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveBlockTransferEnable                                     \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[37])
X#define ROM_SMBusSlaveBlockTransferEnable                                             ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[37])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveCommandGet                                              \
N        ((uint8_t (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[38])
X#define ROM_SMBusSlaveCommandGet                                                      ((uint8_t (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[38])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveI2CDisable                                              \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[39])
X#define ROM_SMBusSlaveI2CDisable                                                      ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[39])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveI2CEnable                                               \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[40])
X#define ROM_SMBusSlaveI2CEnable                                                       ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[40])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveInit                                                    \
N        ((void (*)(tSMBus *psSMBus,                                           \
N                   uint32_t ui32I2CBase))ROM_SMBUSTABLE[41])
X#define ROM_SMBusSlaveInit                                                            ((void (*)(tSMBus *psSMBus,                                                              uint32_t ui32I2CBase))ROM_SMBUSTABLE[41])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveIntAddressGet                                           \
N        ((tSMBusStatus (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[42])
X#define ROM_SMBusSlaveIntAddressGet                                                   ((tSMBusStatus (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[42])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveIntEnable                                               \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[43])
X#define ROM_SMBusSlaveIntEnable                                                       ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[43])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveIntProcess                                              \
N        ((tSMBusStatus (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[44])
X#define ROM_SMBusSlaveIntProcess                                                      ((tSMBusStatus (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[44])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveManualACKDisable                                        \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[45])
X#define ROM_SMBusSlaveManualACKDisable                                                ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[45])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveManualACKEnable                                         \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[46])
X#define ROM_SMBusSlaveManualACKEnable                                                 ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[46])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveManualACKStatusGet                                      \
N        ((bool (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[47])
X#define ROM_SMBusSlaveManualACKStatusGet                                              ((bool (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[47])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveProcessCallDisable                                      \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[48])
X#define ROM_SMBusSlaveProcessCallDisable                                              ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[48])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveProcessCallEnable                                       \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[49])
X#define ROM_SMBusSlaveProcessCallEnable                                               ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[49])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveRxBufferSet                                             \
N        ((void (*)(tSMBus *psSMBus,                                           \
N                   uint8_t *pui8Data,                                         \
N                   uint8_t ui8Size))ROM_SMBUSTABLE[50])
X#define ROM_SMBusSlaveRxBufferSet                                                     ((void (*)(tSMBus *psSMBus,                                                              uint8_t *pui8Data,                                                            uint8_t ui8Size))ROM_SMBUSTABLE[50])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveTransferInit                                            \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[51])
X#define ROM_SMBusSlaveTransferInit                                                    ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[51])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveTxBufferSet                                             \
N        ((void (*)(tSMBus *psSMBus,                                           \
N                   uint8_t *pui8Data,                                         \
N                   uint8_t ui8Size))ROM_SMBUSTABLE[52])
X#define ROM_SMBusSlaveTxBufferSet                                                     ((void (*)(tSMBus *psSMBus,                                                              uint8_t *pui8Data,                                                            uint8_t ui8Size))ROM_SMBUSTABLE[52])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveUDIDSet                                                 \
N        ((void (*)(tSMBus *psSMBus,                                           \
N                   tSMBusUDID *pUDID))ROM_SMBUSTABLE[53])
X#define ROM_SMBusSlaveUDIDSet                                                         ((void (*)(tSMBus *psSMBus,                                                              tSMBusUDID *pUDID))ROM_SMBUSTABLE[53])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SMBusStatusGet                                                    \
N        ((tSMBusStatus (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[54])
X#define ROM_SMBusStatusGet                                                            ((tSMBusStatus (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[54])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_SMBusSlaveDataSend                                                \
N        ((tSMBusStatus (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[55])
X#define ROM_SMBusSlaveDataSend                                                        ((tSMBusStatus (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[55])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SMBusFIFOEnable                                                   \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[56])
X#define ROM_SMBusFIFOEnable                                                           ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[56])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SMBusFIFODisable                                                  \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[57])
X#define ROM_SMBusFIFODisable                                                          ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[57])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SMBusDMAEnable                                                    \
N        ((void (*)(tSMBus *psSMBus,                                           \
N                   uint8_t ui8TxChannel,                                      \
N                   uint8_t ui8RxChannel))ROM_SMBUSTABLE[58])
X#define ROM_SMBusDMAEnable                                                            ((void (*)(tSMBus *psSMBus,                                                              uint8_t ui8TxChannel,                                                         uint8_t ui8RxChannel))ROM_SMBUSTABLE[58])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SMBusDMADisable                                                   \
N        ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[59])
X#define ROM_SMBusDMADisable                                                           ((void (*)(tSMBus *psSMBus))ROM_SMBUSTABLE[59])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the SPIFlash API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashIntHandler                                                \
N        ((uint32_t (*)(tSPIFlashState *pState))ROM_SPIFLASHTABLE[0])
X#define ROM_SPIFlashIntHandler                                                        ((uint32_t (*)(tSPIFlashState *pState))ROM_SPIFLASHTABLE[0])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashInit                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Clock,                                        \
N                   uint32_t ui32BitRate))ROM_SPIFLASHTABLE[1])
X#define ROM_SPIFlashInit                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Clock,                                                           uint32_t ui32BitRate))ROM_SPIFLASHTABLE[1])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashWriteStatus                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Status))ROM_SPIFLASHTABLE[2])
X#define ROM_SPIFlashWriteStatus                                                       ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Status))ROM_SPIFLASHTABLE[2])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashPageProgram                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Addr,                                         \
N                   const uint8_t *pui8Data,                                   \
N                   uint32_t ui32Count))ROM_SPIFLASHTABLE[3])
X#define ROM_SPIFlashPageProgram                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Addr,                                                            const uint8_t *pui8Data,                                                      uint32_t ui32Count))ROM_SPIFLASHTABLE[3])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashPageProgramNonBlocking                                    \
N        ((void (*)(tSPIFlashState *pState,                                    \
N                   uint32_t ui32Base,                                         \
N                   uint32_t ui32Addr,                                         \
N                   const uint8_t *pui8Data,                                   \
N                   uint32_t ui32Count,                                        \
N                   bool bUseDMA,                                              \
N                   uint32_t ui32TxChannel))ROM_SPIFLASHTABLE[4])
X#define ROM_SPIFlashPageProgramNonBlocking                                            ((void (*)(tSPIFlashState *pState,                                                       uint32_t ui32Base,                                                            uint32_t ui32Addr,                                                            const uint8_t *pui8Data,                                                      uint32_t ui32Count,                                                           bool bUseDMA,                                                                 uint32_t ui32TxChannel))ROM_SPIFLASHTABLE[4])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashRead                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Addr,                                         \
N                   uint8_t *pui8Data,                                         \
N                   uint32_t ui32Count))ROM_SPIFLASHTABLE[5])
X#define ROM_SPIFlashRead                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Addr,                                                            uint8_t *pui8Data,                                                            uint32_t ui32Count))ROM_SPIFLASHTABLE[5])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashReadNonBlocking                                           \
N        ((void (*)(tSPIFlashState *pState,                                    \
N                   uint32_t ui32Base,                                         \
N                   uint32_t ui32Addr,                                         \
N                   uint8_t *pui8Data,                                         \
N                   uint32_t ui32Count,                                        \
N                   bool bUseDMA,                                              \
N                   uint32_t ui32TxChannel,                                    \
N                   uint32_t ui32RxChannel))ROM_SPIFLASHTABLE[6])
X#define ROM_SPIFlashReadNonBlocking                                                   ((void (*)(tSPIFlashState *pState,                                                       uint32_t ui32Base,                                                            uint32_t ui32Addr,                                                            uint8_t *pui8Data,                                                            uint32_t ui32Count,                                                           bool bUseDMA,                                                                 uint32_t ui32TxChannel,                                                       uint32_t ui32RxChannel))ROM_SPIFLASHTABLE[6])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashWriteDisable                                              \
N        ((void (*)(uint32_t ui32Base))ROM_SPIFLASHTABLE[7])
X#define ROM_SPIFlashWriteDisable                                                      ((void (*)(uint32_t ui32Base))ROM_SPIFLASHTABLE[7])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashReadStatus                                                \
N        ((uint8_t (*)(uint32_t ui32Base))ROM_SPIFLASHTABLE[8])
X#define ROM_SPIFlashReadStatus                                                        ((uint8_t (*)(uint32_t ui32Base))ROM_SPIFLASHTABLE[8])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashWriteEnable                                               \
N        ((void (*)(uint32_t ui32Base))ROM_SPIFLASHTABLE[9])
X#define ROM_SPIFlashWriteEnable                                                       ((void (*)(uint32_t ui32Base))ROM_SPIFLASHTABLE[9])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashFastRead                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Addr,                                         \
N                   uint8_t *pui8Data,                                         \
N                   uint32_t ui32Count))ROM_SPIFLASHTABLE[10])
X#define ROM_SPIFlashFastRead                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Addr,                                                            uint8_t *pui8Data,                                                            uint32_t ui32Count))ROM_SPIFLASHTABLE[10])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashFastReadNonBlocking                                       \
N        ((void (*)(tSPIFlashState *pState,                                    \
N                   uint32_t ui32Base,                                         \
N                   uint32_t ui32Addr,                                         \
N                   uint8_t *pui8Data,                                         \
N                   uint32_t ui32Count,                                        \
N                   bool bUseDMA,                                              \
N                   uint32_t ui32TxChannel,                                    \
N                   uint32_t ui32RxChannel))ROM_SPIFLASHTABLE[11])
X#define ROM_SPIFlashFastReadNonBlocking                                               ((void (*)(tSPIFlashState *pState,                                                       uint32_t ui32Base,                                                            uint32_t ui32Addr,                                                            uint8_t *pui8Data,                                                            uint32_t ui32Count,                                                           bool bUseDMA,                                                                 uint32_t ui32TxChannel,                                                       uint32_t ui32RxChannel))ROM_SPIFLASHTABLE[11])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashSectorErase                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Addr))ROM_SPIFLASHTABLE[12])
X#define ROM_SPIFlashSectorErase                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Addr))ROM_SPIFLASHTABLE[12])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashDualRead                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Addr,                                         \
N                   uint8_t *pui8Data,                                         \
N                   uint32_t ui32Count))ROM_SPIFLASHTABLE[13])
X#define ROM_SPIFlashDualRead                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Addr,                                                            uint8_t *pui8Data,                                                            uint32_t ui32Count))ROM_SPIFLASHTABLE[13])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashDualReadNonBlocking                                       \
N        ((void (*)(tSPIFlashState *pState,                                    \
N                   uint32_t ui32Base,                                         \
N                   uint32_t ui32Addr,                                         \
N                   uint8_t *pui8Data,                                         \
N                   uint32_t ui32Count,                                        \
N                   bool bUseDMA,                                              \
N                   uint32_t ui32TxChannel,                                    \
N                   uint32_t ui32RxChannel))ROM_SPIFLASHTABLE[14])
X#define ROM_SPIFlashDualReadNonBlocking                                               ((void (*)(tSPIFlashState *pState,                                                       uint32_t ui32Base,                                                            uint32_t ui32Addr,                                                            uint8_t *pui8Data,                                                            uint32_t ui32Count,                                                           bool bUseDMA,                                                                 uint32_t ui32TxChannel,                                                       uint32_t ui32RxChannel))ROM_SPIFLASHTABLE[14])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashBlockErase32                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Addr))ROM_SPIFLASHTABLE[15])
X#define ROM_SPIFlashBlockErase32                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Addr))ROM_SPIFLASHTABLE[15])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashQuadRead                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Addr,                                         \
N                   uint8_t *pui8Data,                                         \
N                   uint32_t ui32Count))ROM_SPIFLASHTABLE[16])
X#define ROM_SPIFlashQuadRead                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Addr,                                                            uint8_t *pui8Data,                                                            uint32_t ui32Count))ROM_SPIFLASHTABLE[16])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashQuadReadNonBlocking                                       \
N        ((void (*)(tSPIFlashState *pState,                                    \
N                   uint32_t ui32Base,                                         \
N                   uint32_t ui32Addr,                                         \
N                   uint8_t *pui8Data,                                         \
N                   uint32_t ui32Count,                                        \
N                   bool bUseDMA,                                              \
N                   uint32_t ui32TxChannel,                                    \
N                   uint32_t ui32RxChannel))ROM_SPIFLASHTABLE[17])
X#define ROM_SPIFlashQuadReadNonBlocking                                               ((void (*)(tSPIFlashState *pState,                                                       uint32_t ui32Base,                                                            uint32_t ui32Addr,                                                            uint8_t *pui8Data,                                                            uint32_t ui32Count,                                                           bool bUseDMA,                                                                 uint32_t ui32TxChannel,                                                       uint32_t ui32RxChannel))ROM_SPIFLASHTABLE[17])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashReadID                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t *pui8ManufacturerID,                               \
N                   uint16_t *pui16DeviceID))ROM_SPIFLASHTABLE[18])
X#define ROM_SPIFlashReadID                                                            ((void (*)(uint32_t ui32Base,                                                            uint8_t *pui8ManufacturerID,                                                  uint16_t *pui16DeviceID))ROM_SPIFLASHTABLE[18])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashChipErase                                                 \
N        ((void (*)(uint32_t ui32Base))ROM_SPIFLASHTABLE[19])
X#define ROM_SPIFlashChipErase                                                         ((void (*)(uint32_t ui32Base))ROM_SPIFLASHTABLE[19])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SPIFlashBlockErase64                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Addr))ROM_SPIFLASHTABLE[20])
X#define ROM_SPIFlashBlockErase64                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Addr))ROM_SPIFLASHTABLE[20])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the SSI API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIDataPut                                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Data))ROM_SSITABLE[0])
X#define ROM_SSIDataPut                                                                ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Data))ROM_SSITABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIConfigSetExpClk                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32SSIClk,                                       \
N                   uint32_t ui32Protocol,                                     \
N                   uint32_t ui32Mode,                                         \
N                   uint32_t ui32BitRate,                                      \
N                   uint32_t ui32DataWidth))ROM_SSITABLE[1])
X#define ROM_SSIConfigSetExpClk                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32SSIClk,                                                          uint32_t ui32Protocol,                                                        uint32_t ui32Mode,                                                            uint32_t ui32BitRate,                                                         uint32_t ui32DataWidth))ROM_SSITABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIEnable                                                         \
N        ((void (*)(uint32_t ui32Base))ROM_SSITABLE[2])
X#define ROM_SSIEnable                                                                 ((void (*)(uint32_t ui32Base))ROM_SSITABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIDisable                                                        \
N        ((void (*)(uint32_t ui32Base))ROM_SSITABLE[3])
X#define ROM_SSIDisable                                                                ((void (*)(uint32_t ui32Base))ROM_SSITABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIIntEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_SSITABLE[4])
X#define ROM_SSIIntEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_SSITABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIIntDisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_SSITABLE[5])
X#define ROM_SSIIntDisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_SSITABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIIntStatus                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_SSITABLE[6])
X#define ROM_SSIIntStatus                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_SSITABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIIntClear                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_SSITABLE[7])
X#define ROM_SSIIntClear                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_SSITABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIDataPutNonBlocking                                             \
N        ((int32_t (*)(uint32_t ui32Base,                                      \
N                      uint32_t ui32Data))ROM_SSITABLE[8])
X#define ROM_SSIDataPutNonBlocking                                                     ((int32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Data))ROM_SSITABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIDataGet                                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32Data))ROM_SSITABLE[9])
X#define ROM_SSIDataGet                                                                ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32Data))ROM_SSITABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIDataGetNonBlocking                                             \
N        ((int32_t (*)(uint32_t ui32Base,                                      \
N                      uint32_t *pui32Data))ROM_SSITABLE[10])
X#define ROM_SSIDataGetNonBlocking                                                     ((int32_t (*)(uint32_t ui32Base,                                                            uint32_t *pui32Data))ROM_SSITABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UpdateSSI                                                         \
N        ((void (*)(void))ROM_SSITABLE[11])
X#define ROM_UpdateSSI                                                                 ((void (*)(void))ROM_SSITABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIDMAEnable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32DMAFlags))ROM_SSITABLE[12])
X#define ROM_SSIDMAEnable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32DMAFlags))ROM_SSITABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIDMADisable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32DMAFlags))ROM_SSITABLE[13])
X#define ROM_SSIDMADisable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32DMAFlags))ROM_SSITABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIBusy                                                           \
N        ((bool (*)(uint32_t ui32Base))ROM_SSITABLE[14])
X#define ROM_SSIBusy                                                                   ((bool (*)(uint32_t ui32Base))ROM_SSITABLE[14])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIClockSourceGet                                                 \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_SSITABLE[15])
X#define ROM_SSIClockSourceGet                                                         ((uint32_t (*)(uint32_t ui32Base))ROM_SSITABLE[15])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SSIClockSourceSet                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Source))ROM_SSITABLE[16])
X#define ROM_SSIClockSourceSet                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Source))ROM_SSITABLE[16])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SSIAdvModeSet                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Mode))ROM_SSITABLE[17])
X#define ROM_SSIAdvModeSet                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Mode))ROM_SSITABLE[17])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SSIAdvDataPutFrameEnd                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Data))ROM_SSITABLE[18])
X#define ROM_SSIAdvDataPutFrameEnd                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Data))ROM_SSITABLE[18])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SSIAdvDataPutFrameEndNonBlocking                                  \
N        ((int32_t (*)(uint32_t ui32Base,                                      \
N                      uint32_t ui32Data))ROM_SSITABLE[19])
X#define ROM_SSIAdvDataPutFrameEndNonBlocking                                          ((int32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Data))ROM_SSITABLE[19])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SSIAdvFrameHoldEnable                                             \
N        ((void (*)(uint32_t ui32Base))ROM_SSITABLE[20])
X#define ROM_SSIAdvFrameHoldEnable                                                     ((void (*)(uint32_t ui32Base))ROM_SSITABLE[20])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SSIAdvFrameHoldDisable                                            \
N        ((void (*)(uint32_t ui32Base))ROM_SSITABLE[21])
X#define ROM_SSIAdvFrameHoldDisable                                                    ((void (*)(uint32_t ui32Base))ROM_SSITABLE[21])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the SysCtl API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlSleep                                                       \
N        ((void (*)(void))ROM_SYSCTLTABLE[0])
X#define ROM_SysCtlSleep                                                               ((void (*)(void))ROM_SYSCTLTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlSRAMSizeGet                                                 \
N        ((uint32_t (*)(void))ROM_SYSCTLTABLE[1])
X#define ROM_SysCtlSRAMSizeGet                                                         ((uint32_t (*)(void))ROM_SYSCTLTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlFlashSizeGet                                                \
N        ((uint32_t (*)(void))ROM_SYSCTLTABLE[2])
X#define ROM_SysCtlFlashSizeGet                                                        ((uint32_t (*)(void))ROM_SYSCTLTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlPeripheralPresent                                           \
N        ((bool (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[4])
X#define ROM_SysCtlPeripheralPresent                                                   ((bool (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlPeripheralReset                                             \
N        ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[5])
X#define ROM_SysCtlPeripheralReset                                                     ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlPeripheralEnable                                            \
N        ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[6])
X#define ROM_SysCtlPeripheralEnable                                                    ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlPeripheralDisable                                           \
N        ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[7])
X#define ROM_SysCtlPeripheralDisable                                                   ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlPeripheralSleepEnable                                       \
N        ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[8])
X#define ROM_SysCtlPeripheralSleepEnable                                               ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlPeripheralSleepDisable                                      \
N        ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[9])
X#define ROM_SysCtlPeripheralSleepDisable                                              ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlPeripheralDeepSleepEnable                                   \
N        ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[10])
X#define ROM_SysCtlPeripheralDeepSleepEnable                                           ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlPeripheralDeepSleepDisable                                  \
N        ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[11])
X#define ROM_SysCtlPeripheralDeepSleepDisable                                          ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlPeripheralClockGating                                       \
N        ((void (*)(bool bEnable))ROM_SYSCTLTABLE[12])
X#define ROM_SysCtlPeripheralClockGating                                               ((void (*)(bool bEnable))ROM_SYSCTLTABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlIntEnable                                                   \
N        ((void (*)(uint32_t ui32Ints))ROM_SYSCTLTABLE[13])
X#define ROM_SysCtlIntEnable                                                           ((void (*)(uint32_t ui32Ints))ROM_SYSCTLTABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlIntDisable                                                  \
N        ((void (*)(uint32_t ui32Ints))ROM_SYSCTLTABLE[14])
X#define ROM_SysCtlIntDisable                                                          ((void (*)(uint32_t ui32Ints))ROM_SYSCTLTABLE[14])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlIntClear                                                    \
N        ((void (*)(uint32_t ui32Ints))ROM_SYSCTLTABLE[15])
X#define ROM_SysCtlIntClear                                                            ((void (*)(uint32_t ui32Ints))ROM_SYSCTLTABLE[15])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlIntStatus                                                   \
N        ((uint32_t (*)(bool bMasked))ROM_SYSCTLTABLE[16])
X#define ROM_SysCtlIntStatus                                                           ((uint32_t (*)(bool bMasked))ROM_SYSCTLTABLE[16])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlReset                                                       \
N        ((void (*)(void))ROM_SYSCTLTABLE[19])
X#define ROM_SysCtlReset                                                               ((void (*)(void))ROM_SYSCTLTABLE[19])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlDeepSleep                                                   \
N        ((void (*)(void))ROM_SYSCTLTABLE[20])
X#define ROM_SysCtlDeepSleep                                                           ((void (*)(void))ROM_SYSCTLTABLE[20])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlResetCauseGet                                               \
N        ((uint32_t (*)(void))ROM_SYSCTLTABLE[21])
X#define ROM_SysCtlResetCauseGet                                                       ((uint32_t (*)(void))ROM_SYSCTLTABLE[21])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlResetCauseClear                                             \
N        ((void (*)(uint32_t ui32Causes))ROM_SYSCTLTABLE[22])
X#define ROM_SysCtlResetCauseClear                                                     ((void (*)(uint32_t ui32Causes))ROM_SYSCTLTABLE[22])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_SysCtlClockSet                                                    \
S        ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[23])
X#define ROM_SysCtlClockSet                                                            ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[23])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_SysCtlClockGet                                                    \
S        ((uint32_t (*)(void))ROM_SYSCTLTABLE[24])
X#define ROM_SysCtlClockGet                                                            ((uint32_t (*)(void))ROM_SYSCTLTABLE[24])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_SysCtlPWMClockSet                                                 \
S        ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[25])
X#define ROM_SysCtlPWMClockSet                                                         ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[25])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_SysCtlPWMClockGet                                                 \
S        ((uint32_t (*)(void))ROM_SYSCTLTABLE[26])
X#define ROM_SysCtlPWMClockGet                                                         ((uint32_t (*)(void))ROM_SYSCTLTABLE[26])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_SysCtlADCSpeedSet                                                 \
S        ((void (*)(uint32_t ui32Speed))ROM_SYSCTLTABLE[27])
X#define ROM_SysCtlADCSpeedSet                                                         ((void (*)(uint32_t ui32Speed))ROM_SYSCTLTABLE[27])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_SysCtlADCSpeedGet                                                 \
S        ((uint32_t (*)(void))ROM_SYSCTLTABLE[28])
X#define ROM_SysCtlADCSpeedGet                                                         ((uint32_t (*)(void))ROM_SYSCTLTABLE[28])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_SysCtlUSBPLLEnable                                                \
S        ((void (*)(void))ROM_SYSCTLTABLE[31])
X#define ROM_SysCtlUSBPLLEnable                                                        ((void (*)(void))ROM_SYSCTLTABLE[31])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_SysCtlUSBPLLDisable                                               \
S        ((void (*)(void))ROM_SYSCTLTABLE[32])
X#define ROM_SysCtlUSBPLLDisable                                                       ((void (*)(void))ROM_SYSCTLTABLE[32])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlDelay                                                       \
N        ((void (*)(uint32_t ui32Count))ROM_SYSCTLTABLE[34])
X#define ROM_SysCtlDelay                                                               ((void (*)(uint32_t ui32Count))ROM_SYSCTLTABLE[34])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlPeripheralReady                                             \
N        ((bool (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[35])
X#define ROM_SysCtlPeripheralReady                                                     ((bool (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[35])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlPeripheralPowerOn                                           \
N        ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[36])
X#define ROM_SysCtlPeripheralPowerOn                                                   ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[36])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlPeripheralPowerOff                                          \
N        ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[37])
X#define ROM_SysCtlPeripheralPowerOff                                                  ((void (*)(uint32_t ui32Peripheral))ROM_SYSCTLTABLE[37])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlMOSCConfigSet                                               \
N        ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[44])
X#define ROM_SysCtlMOSCConfigSet                                                       ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[44])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysCtlPIOSCCalibrate                                              \
N        ((uint32_t (*)(uint32_t ui32Type))ROM_SYSCTLTABLE[45])
X#define ROM_SysCtlPIOSCCalibrate                                                      ((uint32_t (*)(uint32_t ui32Type))ROM_SYSCTLTABLE[45])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_SysCtlDeepSleepClockSet                                           \
S        ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[46])
X#define ROM_SysCtlDeepSleepClockSet                                                   ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[46])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SysCtlDeepSleepClockConfigSet                                     \
N        ((void (*)(uint32_t ui32Div,                                          \
N                   uint32_t ui32Config))ROM_SYSCTLTABLE[47])
X#define ROM_SysCtlDeepSleepClockConfigSet                                             ((void (*)(uint32_t ui32Div,                                                             uint32_t ui32Config))ROM_SYSCTLTABLE[47])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SysCtlClockFreqSet                                                \
N        ((uint32_t (*)(uint32_t ui32Config,                                   \
N                       uint32_t ui32SysClock))ROM_SYSCTLTABLE[48])
X#define ROM_SysCtlClockFreqSet                                                        ((uint32_t (*)(uint32_t ui32Config,                                                          uint32_t ui32SysClock))ROM_SYSCTLTABLE[48])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SysCtlLPCLowPowerConfigSet                                        \
N        ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[49])
X#define ROM_SysCtlLPCLowPowerConfigSet                                                ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[49])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SysCtlLPCLowPowerStatusGet                                        \
N        ((uint32_t (*)(void))ROM_SYSCTLTABLE[50])
X#define ROM_SysCtlLPCLowPowerStatusGet                                                ((uint32_t (*)(void))ROM_SYSCTLTABLE[50])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SysCtlResetBehaviorSet                                            \
N        ((void (*)(uint32_t ui32Behavior))ROM_SYSCTLTABLE[51])
X#define ROM_SysCtlResetBehaviorSet                                                    ((void (*)(uint32_t ui32Behavior))ROM_SYSCTLTABLE[51])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SysCtlResetBehaviorGet                                            \
N        ((uint32_t (*)(void))ROM_SYSCTLTABLE[52])
X#define ROM_SysCtlResetBehaviorGet                                                    ((uint32_t (*)(void))ROM_SYSCTLTABLE[52])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SysCtlFlashSectorSizeGet                                          \
N        ((uint32_t (*)(void))ROM_SYSCTLTABLE[54])
X#define ROM_SysCtlFlashSectorSizeGet                                                  ((uint32_t (*)(void))ROM_SYSCTLTABLE[54])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            1L
N#define ROM_SysCtlVoltageEventConfig                                          \
N        ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[55])
X#define ROM_SysCtlVoltageEventConfig                                                  ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[55])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SysCtlVoltageEventStatus                                          \
N        ((uint32_t (*)(void))ROM_SYSCTLTABLE[56])
X#define ROM_SysCtlVoltageEventStatus                                                  ((uint32_t (*)(void))ROM_SYSCTLTABLE[56])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SysCtlVoltageEventClear                                           \
N        ((void (*)(uint32_t ui32Status))ROM_SYSCTLTABLE[57])
X#define ROM_SysCtlVoltageEventClear                                                   ((void (*)(uint32_t ui32Status))ROM_SYSCTLTABLE[57])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SysCtlNMIStatus                                                   \
N        ((uint32_t (*)(void))ROM_SYSCTLTABLE[58])
X#define ROM_SysCtlNMIStatus                                                           ((uint32_t (*)(void))ROM_SYSCTLTABLE[58])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SysCtlNMIClear                                                    \
N        ((void (*)(uint32_t ui32Status))ROM_SYSCTLTABLE[59])
X#define ROM_SysCtlNMIClear                                                            ((void (*)(uint32_t ui32Status))ROM_SYSCTLTABLE[59])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SysCtlClockOutConfig                                              \
N        ((void (*)(uint32_t ui32Config,                                       \
N                   uint32_t ui32Div))ROM_SYSCTLTABLE[60])
X#define ROM_SysCtlClockOutConfig                                                      ((void (*)(uint32_t ui32Config,                                                          uint32_t ui32Div))ROM_SYSCTLTABLE[60])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SysCtlAltClkConfig                                                \
N        ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[61])
X#define ROM_SysCtlAltClkConfig                                                        ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[61])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SysCtlLDOConfigSet                                                \
N        ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[62])
X#define ROM_SysCtlLDOConfigSet                                                        ((void (*)(uint32_t ui32Config))ROM_SYSCTLTABLE[62])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_SysCtlBrownOutConfigSet                                           \
N        ((void (*)(uint32_t ui32Config,                                       \
N                   uint32_t ui32Delay))ROM_SYSCTLTABLE[63])
X#define ROM_SysCtlBrownOutConfigSet                                                   ((void (*)(uint32_t ui32Config,                                                          uint32_t ui32Delay))ROM_SYSCTLTABLE[63])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the SysExc API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysExcIntStatus                                                   \
N        ((uint32_t (*)(bool bMasked))ROM_SYSEXCTABLE[0])
X#define ROM_SysExcIntStatus                                                           ((uint32_t (*)(bool bMasked))ROM_SYSEXCTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysExcIntClear                                                    \
N        ((void (*)(uint32_t ui32IntFlags))ROM_SYSEXCTABLE[1])
X#define ROM_SysExcIntClear                                                            ((void (*)(uint32_t ui32IntFlags))ROM_SYSEXCTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysExcIntDisable                                                  \
N        ((void (*)(uint32_t ui32IntFlags))ROM_SYSEXCTABLE[2])
X#define ROM_SysExcIntDisable                                                          ((void (*)(uint32_t ui32IntFlags))ROM_SYSEXCTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysExcIntEnable                                                   \
N        ((void (*)(uint32_t ui32IntFlags))ROM_SYSEXCTABLE[3])
X#define ROM_SysExcIntEnable                                                           ((void (*)(uint32_t ui32IntFlags))ROM_SYSEXCTABLE[3])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the SysTick API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysTickValueGet                                                   \
N        ((uint32_t (*)(void))ROM_SYSTICKTABLE[0])
X#define ROM_SysTickValueGet                                                           ((uint32_t (*)(void))ROM_SYSTICKTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysTickEnable                                                     \
N        ((void (*)(void))ROM_SYSTICKTABLE[1])
X#define ROM_SysTickEnable                                                             ((void (*)(void))ROM_SYSTICKTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysTickDisable                                                    \
N        ((void (*)(void))ROM_SYSTICKTABLE[2])
X#define ROM_SysTickDisable                                                            ((void (*)(void))ROM_SYSTICKTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysTickIntEnable                                                  \
N        ((void (*)(void))ROM_SYSTICKTABLE[3])
X#define ROM_SysTickIntEnable                                                          ((void (*)(void))ROM_SYSTICKTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysTickIntDisable                                                 \
N        ((void (*)(void))ROM_SYSTICKTABLE[4])
X#define ROM_SysTickIntDisable                                                         ((void (*)(void))ROM_SYSTICKTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysTickPeriodSet                                                  \
N        ((void (*)(uint32_t ui32Period))ROM_SYSTICKTABLE[5])
X#define ROM_SysTickPeriodSet                                                          ((void (*)(uint32_t ui32Period))ROM_SYSTICKTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_SysTickPeriodGet                                                  \
N        ((uint32_t (*)(void))ROM_SYSTICKTABLE[6])
X#define ROM_SysTickPeriodGet                                                          ((uint32_t (*)(void))ROM_SYSTICKTABLE[6])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the Timer API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerIntClear                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_TIMERTABLE[0])
X#define ROM_TimerIntClear                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_TIMERTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerEnable                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Timer))ROM_TIMERTABLE[1])
X#define ROM_TimerEnable                                                               ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer))ROM_TIMERTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerDisable                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Timer))ROM_TIMERTABLE[2])
X#define ROM_TimerDisable                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer))ROM_TIMERTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerConfigure                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_TIMERTABLE[3])
X#define ROM_TimerConfigure                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_TIMERTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerControlLevel                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Timer,                                        \
N                   bool bInvert))ROM_TIMERTABLE[4])
X#define ROM_TimerControlLevel                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer,                                                           bool bInvert))ROM_TIMERTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1)
X#if 0L ||                                            0L ||                                            0L
S#define ROM_TimerControlTrigger                                               \
S        ((void (*)(uint32_t ui32Base,                                         \
S                   uint32_t ui32Timer,                                        \
S                   bool bEnable))ROM_TIMERTABLE[5])
X#define ROM_TimerControlTrigger                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer,                                                           bool bEnable))ROM_TIMERTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerControlEvent                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Timer,                                        \
N                   uint32_t ui32Event))ROM_TIMERTABLE[6])
X#define ROM_TimerControlEvent                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer,                                                           uint32_t ui32Event))ROM_TIMERTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerControlStall                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Timer,                                        \
N                   bool bStall))ROM_TIMERTABLE[7])
X#define ROM_TimerControlStall                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer,                                                           bool bStall))ROM_TIMERTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerRTCEnable                                                    \
N        ((void (*)(uint32_t ui32Base))ROM_TIMERTABLE[8])
X#define ROM_TimerRTCEnable                                                            ((void (*)(uint32_t ui32Base))ROM_TIMERTABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerRTCDisable                                                   \
N        ((void (*)(uint32_t ui32Base))ROM_TIMERTABLE[9])
X#define ROM_TimerRTCDisable                                                           ((void (*)(uint32_t ui32Base))ROM_TIMERTABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerPrescaleSet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Timer,                                        \
N                   uint32_t ui32Value))ROM_TIMERTABLE[10])
X#define ROM_TimerPrescaleSet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer,                                                           uint32_t ui32Value))ROM_TIMERTABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerPrescaleGet                                                  \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Timer))ROM_TIMERTABLE[11])
X#define ROM_TimerPrescaleGet                                                          ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer))ROM_TIMERTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerPrescaleMatchSet                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Timer,                                        \
N                   uint32_t ui32Value))ROM_TIMERTABLE[12])
X#define ROM_TimerPrescaleMatchSet                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer,                                                           uint32_t ui32Value))ROM_TIMERTABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerPrescaleMatchGet                                             \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Timer))ROM_TIMERTABLE[13])
X#define ROM_TimerPrescaleMatchGet                                                     ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer))ROM_TIMERTABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerLoadSet                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Timer,                                        \
N                   uint32_t ui32Value))ROM_TIMERTABLE[14])
X#define ROM_TimerLoadSet                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer,                                                           uint32_t ui32Value))ROM_TIMERTABLE[14])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerLoadGet                                                      \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Timer))ROM_TIMERTABLE[15])
X#define ROM_TimerLoadGet                                                              ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer))ROM_TIMERTABLE[15])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerValueGet                                                     \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Timer))ROM_TIMERTABLE[16])
X#define ROM_TimerValueGet                                                             ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer))ROM_TIMERTABLE[16])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerMatchSet                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Timer,                                        \
N                   uint32_t ui32Value))ROM_TIMERTABLE[17])
X#define ROM_TimerMatchSet                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer,                                                           uint32_t ui32Value))ROM_TIMERTABLE[17])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerMatchGet                                                     \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Timer))ROM_TIMERTABLE[18])
X#define ROM_TimerMatchGet                                                             ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer))ROM_TIMERTABLE[18])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerIntEnable                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_TIMERTABLE[19])
X#define ROM_TimerIntEnable                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_TIMERTABLE[19])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerIntDisable                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_TIMERTABLE[20])
X#define ROM_TimerIntDisable                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_TIMERTABLE[20])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerIntStatus                                                    \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_TIMERTABLE[21])
X#define ROM_TimerIntStatus                                                            ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_TIMERTABLE[21])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerControlWaitOnTrigger                                         \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Timer,                                        \
N                   bool bWait))ROM_TIMERTABLE[22])
X#define ROM_TimerControlWaitOnTrigger                                                 ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Timer,                                                           bool bWait))ROM_TIMERTABLE[22])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerLoadSet64                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint64_t ui64Value))ROM_TIMERTABLE[23])
X#define ROM_TimerLoadSet64                                                            ((void (*)(uint32_t ui32Base,                                                            uint64_t ui64Value))ROM_TIMERTABLE[23])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerLoadGet64                                                    \
N        ((uint64_t (*)(uint32_t ui32Base))ROM_TIMERTABLE[24])
X#define ROM_TimerLoadGet64                                                            ((uint64_t (*)(uint32_t ui32Base))ROM_TIMERTABLE[24])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerValueGet64                                                   \
N        ((uint64_t (*)(uint32_t ui32Base))ROM_TIMERTABLE[25])
X#define ROM_TimerValueGet64                                                           ((uint64_t (*)(uint32_t ui32Base))ROM_TIMERTABLE[25])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerMatchSet64                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint64_t ui64Value))ROM_TIMERTABLE[26])
X#define ROM_TimerMatchSet64                                                           ((void (*)(uint32_t ui32Base,                                                            uint64_t ui64Value))ROM_TIMERTABLE[26])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_TimerMatchGet64                                                   \
N        ((uint64_t (*)(uint32_t ui32Base))ROM_TIMERTABLE[27])
X#define ROM_TimerMatchGet64                                                           ((uint64_t (*)(uint32_t ui32Base))ROM_TIMERTABLE[27])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_TimerClockSourceGet                                               \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_TIMERTABLE[28])
X#define ROM_TimerClockSourceGet                                                       ((uint32_t (*)(uint32_t ui32Base))ROM_TIMERTABLE[28])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_TimerClockSourceSet                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Source))ROM_TIMERTABLE[29])
X#define ROM_TimerClockSourceSet                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Source))ROM_TIMERTABLE[29])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_TimerADCEventGet                                                  \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_TIMERTABLE[30])
X#define ROM_TimerADCEventGet                                                          ((uint32_t (*)(uint32_t ui32Base))ROM_TIMERTABLE[30])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_TimerADCEventSet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32ADCEvent))ROM_TIMERTABLE[31])
X#define ROM_TimerADCEventSet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32ADCEvent))ROM_TIMERTABLE[31])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_TimerDMAEventGet                                                  \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_TIMERTABLE[32])
X#define ROM_TimerDMAEventGet                                                          ((uint32_t (*)(uint32_t ui32Base))ROM_TIMERTABLE[32])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_TimerDMAEventSet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32DMAEvent))ROM_TIMERTABLE[33])
X#define ROM_TimerDMAEventSet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32DMAEvent))ROM_TIMERTABLE[33])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_TimerSynchronize                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Timers))ROM_TIMERTABLE[34])
X#define ROM_TimerSynchronize                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Timers))ROM_TIMERTABLE[34])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the UART API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTCharPut                                                       \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   unsigned char ucData))ROM_UARTTABLE[0])
X#define ROM_UARTCharPut                                                               ((void (*)(uint32_t ui32Base,                                                            unsigned char ucData))ROM_UARTTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTParityModeSet                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Parity))ROM_UARTTABLE[1])
X#define ROM_UARTParityModeSet                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Parity))ROM_UARTTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTParityModeGet                                                 \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[2])
X#define ROM_UARTParityModeGet                                                         ((uint32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTFIFOLevelSet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32TxLevel,                                      \
N                   uint32_t ui32RxLevel))ROM_UARTTABLE[3])
X#define ROM_UARTFIFOLevelSet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32TxLevel,                                                         uint32_t ui32RxLevel))ROM_UARTTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTFIFOLevelGet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t *pui32TxLevel,                                    \
N                   uint32_t *pui32RxLevel))ROM_UARTTABLE[4])
X#define ROM_UARTFIFOLevelGet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t *pui32TxLevel,                                                       uint32_t *pui32RxLevel))ROM_UARTTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTConfigSetExpClk                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32UARTClk,                                      \
N                   uint32_t ui32Baud,                                         \
N                   uint32_t ui32Config))ROM_UARTTABLE[5])
X#define ROM_UARTConfigSetExpClk                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32UARTClk,                                                         uint32_t ui32Baud,                                                            uint32_t ui32Config))ROM_UARTTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTConfigGetExpClk                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32UARTClk,                                      \
N                   uint32_t *pui32Baud,                                       \
N                   uint32_t *pui32Config))ROM_UARTTABLE[6])
X#define ROM_UARTConfigGetExpClk                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32UARTClk,                                                         uint32_t *pui32Baud,                                                          uint32_t *pui32Config))ROM_UARTTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTEnable                                                        \
N        ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[7])
X#define ROM_UARTEnable                                                                ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTDisable                                                       \
N        ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[8])
X#define ROM_UARTDisable                                                               ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTEnableSIR                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   bool bLowPower))ROM_UARTTABLE[9])
X#define ROM_UARTEnableSIR                                                             ((void (*)(uint32_t ui32Base,                                                            bool bLowPower))ROM_UARTTABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTDisableSIR                                                    \
N        ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[10])
X#define ROM_UARTDisableSIR                                                            ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTCharsAvail                                                    \
N        ((bool (*)(uint32_t ui32Base))ROM_UARTTABLE[11])
X#define ROM_UARTCharsAvail                                                            ((bool (*)(uint32_t ui32Base))ROM_UARTTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTSpaceAvail                                                    \
N        ((bool (*)(uint32_t ui32Base))ROM_UARTTABLE[12])
X#define ROM_UARTSpaceAvail                                                            ((bool (*)(uint32_t ui32Base))ROM_UARTTABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTCharGetNonBlocking                                            \
N        ((int32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[13])
X#define ROM_UARTCharGetNonBlocking                                                    ((int32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTCharGet                                                       \
N        ((int32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[14])
X#define ROM_UARTCharGet                                                               ((int32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[14])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTCharPutNonBlocking                                            \
N        ((bool (*)(uint32_t ui32Base,                                         \
N                   unsigned char ucData))ROM_UARTTABLE[15])
X#define ROM_UARTCharPutNonBlocking                                                    ((bool (*)(uint32_t ui32Base,                                                            unsigned char ucData))ROM_UARTTABLE[15])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTBreakCtl                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   bool bBreakState))ROM_UARTTABLE[16])
X#define ROM_UARTBreakCtl                                                              ((void (*)(uint32_t ui32Base,                                                            bool bBreakState))ROM_UARTTABLE[16])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTIntEnable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_UARTTABLE[17])
X#define ROM_UARTIntEnable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_UARTTABLE[17])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTIntDisable                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_UARTTABLE[18])
X#define ROM_UARTIntDisable                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_UARTTABLE[18])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTIntStatus                                                     \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_UARTTABLE[19])
X#define ROM_UARTIntStatus                                                             ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_UARTTABLE[19])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTIntClear                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_UARTTABLE[20])
X#define ROM_UARTIntClear                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_UARTTABLE[20])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UpdateUART                                                        \
N        ((void (*)(void))ROM_UARTTABLE[21])
X#define ROM_UpdateUART                                                                ((void (*)(void))ROM_UARTTABLE[21])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTDMAEnable                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32DMAFlags))ROM_UARTTABLE[22])
X#define ROM_UARTDMAEnable                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32DMAFlags))ROM_UARTTABLE[22])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTDMADisable                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32DMAFlags))ROM_UARTTABLE[23])
X#define ROM_UARTDMADisable                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32DMAFlags))ROM_UARTTABLE[23])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTFIFOEnable                                                    \
N        ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[24])
X#define ROM_UARTFIFOEnable                                                            ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[24])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTFIFODisable                                                   \
N        ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[25])
X#define ROM_UARTFIFODisable                                                           ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[25])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTBusy                                                          \
N        ((bool (*)(uint32_t ui32Base))ROM_UARTTABLE[26])
X#define ROM_UARTBusy                                                                  ((bool (*)(uint32_t ui32Base))ROM_UARTTABLE[26])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTTxIntModeSet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Mode))ROM_UARTTABLE[27])
X#define ROM_UARTTxIntModeSet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Mode))ROM_UARTTABLE[27])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTTxIntModeGet                                                  \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[28])
X#define ROM_UARTTxIntModeGet                                                          ((uint32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[28])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTRxErrorGet                                                    \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[29])
X#define ROM_UARTRxErrorGet                                                            ((uint32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[29])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTRxErrorClear                                                  \
N        ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[30])
X#define ROM_UARTRxErrorClear                                                          ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[30])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTClockSourceSet                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Source))ROM_UARTTABLE[31])
X#define ROM_UARTClockSourceSet                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Source))ROM_UARTTABLE[31])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UARTClockSourceGet                                                \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[32])
X#define ROM_UARTClockSourceGet                                                        ((uint32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[32])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UART9BitEnable                                                    \
N        ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[33])
X#define ROM_UART9BitEnable                                                            ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[33])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UART9BitDisable                                                   \
N        ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[34])
X#define ROM_UART9BitDisable                                                           ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[34])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UART9BitAddrSet                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Addr,                                           \
N                   uint8_t ui8Mask))ROM_UARTTABLE[35])
X#define ROM_UART9BitAddrSet                                                           ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Addr,                                                              uint8_t ui8Mask))ROM_UARTTABLE[35])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_UART9BitAddrSend                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Addr))ROM_UARTTABLE[36])
X#define ROM_UART9BitAddrSend                                                          ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Addr))ROM_UARTTABLE[36])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_UARTSmartCardDisable                                              \
N        ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[37])
X#define ROM_UARTSmartCardDisable                                                      ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[37])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_UARTSmartCardEnable                                               \
N        ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[38])
X#define ROM_UARTSmartCardEnable                                                       ((void (*)(uint32_t ui32Base))ROM_UARTTABLE[38])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            1L
N#define ROM_UARTModemControlClear                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Control))ROM_UARTTABLE[39])
X#define ROM_UARTModemControlClear                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Control))ROM_UARTTABLE[39])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_UARTModemControlGet                                               \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[40])
X#define ROM_UARTModemControlGet                                                       ((uint32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[40])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_UARTModemControlSet                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Control))ROM_UARTTABLE[41])
X#define ROM_UARTModemControlSet                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Control))ROM_UARTTABLE[41])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_UARTModemStatusGet                                                \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[42])
X#define ROM_UARTModemStatusGet                                                        ((uint32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[42])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_UARTFlowControlGet                                                \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[43])
X#define ROM_UARTFlowControlGet                                                        ((uint32_t (*)(uint32_t ui32Base))ROM_UARTTABLE[43])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_UARTFlowControlSet                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Mode))ROM_UARTTABLE[44])
X#define ROM_UARTFlowControlSet                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Mode))ROM_UARTTABLE[44])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the uDMA API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAChannelTransferSet                                            \
N        ((void (*)(uint32_t ui32ChannelStructIndex,                           \
N                   uint32_t ui32Mode,                                         \
N                   void *pvSrcAddr,                                           \
N                   void *pvDstAddr,                                           \
N                   uint32_t ui32TransferSize))ROM_UDMATABLE[0])
X#define ROM_uDMAChannelTransferSet                                                    ((void (*)(uint32_t ui32ChannelStructIndex,                                              uint32_t ui32Mode,                                                            void *pvSrcAddr,                                                              void *pvDstAddr,                                                              uint32_t ui32TransferSize))ROM_UDMATABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAEnable                                                        \
N        ((void (*)(void))ROM_UDMATABLE[1])
X#define ROM_uDMAEnable                                                                ((void (*)(void))ROM_UDMATABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMADisable                                                       \
N        ((void (*)(void))ROM_UDMATABLE[2])
X#define ROM_uDMADisable                                                               ((void (*)(void))ROM_UDMATABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAErrorStatusGet                                                \
N        ((uint32_t (*)(void))ROM_UDMATABLE[3])
X#define ROM_uDMAErrorStatusGet                                                        ((uint32_t (*)(void))ROM_UDMATABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAErrorStatusClear                                              \
N        ((void (*)(void))ROM_UDMATABLE[4])
X#define ROM_uDMAErrorStatusClear                                                      ((void (*)(void))ROM_UDMATABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAChannelEnable                                                 \
N        ((void (*)(uint32_t ui32ChannelNum))ROM_UDMATABLE[5])
X#define ROM_uDMAChannelEnable                                                         ((void (*)(uint32_t ui32ChannelNum))ROM_UDMATABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAChannelDisable                                                \
N        ((void (*)(uint32_t ui32ChannelNum))ROM_UDMATABLE[6])
X#define ROM_uDMAChannelDisable                                                        ((void (*)(uint32_t ui32ChannelNum))ROM_UDMATABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAChannelIsEnabled                                              \
N        ((bool (*)(uint32_t ui32ChannelNum))ROM_UDMATABLE[7])
X#define ROM_uDMAChannelIsEnabled                                                      ((bool (*)(uint32_t ui32ChannelNum))ROM_UDMATABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAControlBaseSet                                                \
N        ((void (*)(void *pControlTable))ROM_UDMATABLE[8])
X#define ROM_uDMAControlBaseSet                                                        ((void (*)(void *pControlTable))ROM_UDMATABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAControlBaseGet                                                \
N        ((void * (*)(void))ROM_UDMATABLE[9])
X#define ROM_uDMAControlBaseGet                                                        ((void * (*)(void))ROM_UDMATABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAChannelRequest                                                \
N        ((void (*)(uint32_t ui32ChannelNum))ROM_UDMATABLE[10])
X#define ROM_uDMAChannelRequest                                                        ((void (*)(uint32_t ui32ChannelNum))ROM_UDMATABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAChannelAttributeEnable                                        \
N        ((void (*)(uint32_t ui32ChannelNum,                                   \
N                   uint32_t ui32Attr))ROM_UDMATABLE[11])
X#define ROM_uDMAChannelAttributeEnable                                                ((void (*)(uint32_t ui32ChannelNum,                                                      uint32_t ui32Attr))ROM_UDMATABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAChannelAttributeDisable                                       \
N        ((void (*)(uint32_t ui32ChannelNum,                                   \
N                   uint32_t ui32Attr))ROM_UDMATABLE[12])
X#define ROM_uDMAChannelAttributeDisable                                               ((void (*)(uint32_t ui32ChannelNum,                                                      uint32_t ui32Attr))ROM_UDMATABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAChannelAttributeGet                                           \
N        ((uint32_t (*)(uint32_t ui32ChannelNum))ROM_UDMATABLE[13])
X#define ROM_uDMAChannelAttributeGet                                                   ((uint32_t (*)(uint32_t ui32ChannelNum))ROM_UDMATABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAChannelControlSet                                             \
N        ((void (*)(uint32_t ui32ChannelStructIndex,                           \
N                   uint32_t ui32Control))ROM_UDMATABLE[14])
X#define ROM_uDMAChannelControlSet                                                     ((void (*)(uint32_t ui32ChannelStructIndex,                                              uint32_t ui32Control))ROM_UDMATABLE[14])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAChannelSizeGet                                                \
N        ((uint32_t (*)(uint32_t ui32ChannelStructIndex))ROM_UDMATABLE[15])
X#define ROM_uDMAChannelSizeGet                                                        ((uint32_t (*)(uint32_t ui32ChannelStructIndex))ROM_UDMATABLE[15])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAChannelModeGet                                                \
N        ((uint32_t (*)(uint32_t ui32ChannelStructIndex))ROM_UDMATABLE[16])
X#define ROM_uDMAChannelModeGet                                                        ((uint32_t (*)(uint32_t ui32ChannelStructIndex))ROM_UDMATABLE[16])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAChannelSelectSecondary                                        \
N        ((void (*)(uint32_t ui32SecPeriphs))ROM_UDMATABLE[17])
X#define ROM_uDMAChannelSelectSecondary                                                ((void (*)(uint32_t ui32SecPeriphs))ROM_UDMATABLE[17])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAChannelSelectDefault                                          \
N        ((void (*)(uint32_t ui32DefPeriphs))ROM_UDMATABLE[18])
X#define ROM_uDMAChannelSelectDefault                                                  ((void (*)(uint32_t ui32DefPeriphs))ROM_UDMATABLE[18])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAIntStatus                                                     \
N        ((uint32_t (*)(void))ROM_UDMATABLE[19])
X#define ROM_uDMAIntStatus                                                             ((uint32_t (*)(void))ROM_UDMATABLE[19])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAIntClear                                                      \
N        ((void (*)(uint32_t ui32ChanMask))ROM_UDMATABLE[20])
X#define ROM_uDMAIntClear                                                              ((void (*)(uint32_t ui32ChanMask))ROM_UDMATABLE[20])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAControlAlternateBaseGet                                       \
N        ((void * (*)(void))ROM_UDMATABLE[21])
X#define ROM_uDMAControlAlternateBaseGet                                               ((void * (*)(void))ROM_UDMATABLE[21])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAChannelScatterGatherSet                                       \
N        ((void (*)(uint32_t ui32ChannelNum,                                   \
N                   uint32_t ui32TaskCount,                                    \
N                   void *pvTaskList,                                          \
N                   uint32_t ui32IsPeriphSG))ROM_UDMATABLE[22])
X#define ROM_uDMAChannelScatterGatherSet                                               ((void (*)(uint32_t ui32ChannelNum,                                                      uint32_t ui32TaskCount,                                                       void *pvTaskList,                                                             uint32_t ui32IsPeriphSG))ROM_UDMATABLE[22])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_uDMAChannelAssign                                                 \
N        ((void (*)(uint32_t ui32Mapping))ROM_UDMATABLE[23])
X#define ROM_uDMAChannelAssign                                                         ((void (*)(uint32_t ui32Mapping))ROM_UDMATABLE[23])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the USB API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBDevAddrGet                                                     \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[1])
X#define ROM_USBDevAddrGet                                                             ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBDevAddrSet                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Address))ROM_USBTABLE[2])
X#define ROM_USBDevAddrSet                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Address))ROM_USBTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBDevConnect                                                     \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[3])
X#define ROM_USBDevConnect                                                             ((void (*)(uint32_t ui32Base))ROM_USBTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBDevDisconnect                                                  \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[4])
X#define ROM_USBDevDisconnect                                                          ((void (*)(uint32_t ui32Base))ROM_USBTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBDevEndpointConfigSet                                           \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32MaxPacketSize,                                \
N                   uint32_t ui32Flags))ROM_USBTABLE[5])
X#define ROM_USBDevEndpointConfigSet                                                   ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32MaxPacketSize,                                                   uint32_t ui32Flags))ROM_USBTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBDevEndpointDataAck                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   bool bIsLastPacket))ROM_USBTABLE[6])
X#define ROM_USBDevEndpointDataAck                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        bool bIsLastPacket))ROM_USBTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBDevEndpointStall                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32Flags))ROM_USBTABLE[7])
X#define ROM_USBDevEndpointStall                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32Flags))ROM_USBTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBDevEndpointStallClear                                          \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32Flags))ROM_USBTABLE[8])
X#define ROM_USBDevEndpointStallClear                                                  ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32Flags))ROM_USBTABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBDevEndpointStatusClear                                         \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32Flags))ROM_USBTABLE[9])
X#define ROM_USBDevEndpointStatusClear                                                 ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32Flags))ROM_USBTABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBEndpointDataGet                                                \
N        ((int32_t (*)(uint32_t ui32Base,                                      \
N                      uint32_t ui32Endpoint,                                  \
N                      uint8_t *pui8Data,                                      \
N                      uint32_t *pui32Size))ROM_USBTABLE[10])
X#define ROM_USBEndpointDataGet                                                        ((int32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint8_t *pui8Data,                                                            uint32_t *pui32Size))ROM_USBTABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBEndpointDataPut                                                \
N        ((int32_t (*)(uint32_t ui32Base,                                      \
N                      uint32_t ui32Endpoint,                                  \
N                      uint8_t *pui8Data,                                      \
N                      uint32_t ui32Size))ROM_USBTABLE[11])
X#define ROM_USBEndpointDataPut                                                        ((int32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint8_t *pui8Data,                                                            uint32_t ui32Size))ROM_USBTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBEndpointDataSend                                               \
N        ((int32_t (*)(uint32_t ui32Base,                                      \
N                      uint32_t ui32Endpoint,                                  \
N                      uint32_t ui32TransType))ROM_USBTABLE[12])
X#define ROM_USBEndpointDataSend                                                       ((int32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32TransType))ROM_USBTABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBEndpointDataToggleClear                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32Flags))ROM_USBTABLE[13])
X#define ROM_USBEndpointDataToggleClear                                                ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32Flags))ROM_USBTABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBEndpointStatus                                                 \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Endpoint))ROM_USBTABLE[14])
X#define ROM_USBEndpointStatus                                                         ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint))ROM_USBTABLE[14])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBFIFOAddrGet                                                    \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Endpoint))ROM_USBTABLE[15])
X#define ROM_USBFIFOAddrGet                                                            ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint))ROM_USBTABLE[15])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBFIFOConfigGet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t *pui32FIFOAddress,                                \
N                   uint32_t *pui32FIFOSize,                                   \
N                   uint32_t ui32Flags))ROM_USBTABLE[16])
X#define ROM_USBFIFOConfigGet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t *pui32FIFOAddress,                                                   uint32_t *pui32FIFOSize,                                                      uint32_t ui32Flags))ROM_USBTABLE[16])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBFIFOConfigSet                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32FIFOAddress,                                  \
N                   uint32_t ui32FIFOSize,                                     \
N                   uint32_t ui32Flags))ROM_USBTABLE[17])
X#define ROM_USBFIFOConfigSet                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32FIFOAddress,                                                     uint32_t ui32FIFOSize,                                                        uint32_t ui32Flags))ROM_USBTABLE[17])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBFIFOFlush                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32Flags))ROM_USBTABLE[18])
X#define ROM_USBFIFOFlush                                                              ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32Flags))ROM_USBTABLE[18])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBFrameNumberGet                                                 \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[19])
X#define ROM_USBFrameNumberGet                                                         ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[19])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostAddrGet                                                    \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Endpoint,                                 \
N                       uint32_t ui32Flags))ROM_USBTABLE[20])
X#define ROM_USBHostAddrGet                                                            ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32Flags))ROM_USBTABLE[20])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostAddrSet                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32Addr,                                         \
N                   uint32_t ui32Flags))ROM_USBTABLE[21])
X#define ROM_USBHostAddrSet                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32Addr,                                                            uint32_t ui32Flags))ROM_USBTABLE[21])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_USBHostEndpointConfig                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32MaxPacketSize,                                \
N                   uint32_t ui32NAKPollInterval,                              \
N                   uint32_t ui32TargetEndpoint,                               \
N                   uint32_t ui32Flags))ROM_USBTABLE[22])
X#define ROM_USBHostEndpointConfig                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32MaxPacketSize,                                                   uint32_t ui32NAKPollInterval,                                                 uint32_t ui32TargetEndpoint,                                                  uint32_t ui32Flags))ROM_USBTABLE[22])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostEndpointDataAck                                            \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint))ROM_USBTABLE[23])
X#define ROM_USBHostEndpointDataAck                                                    ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint))ROM_USBTABLE[23])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostEndpointDataToggle                                         \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   bool bDataToggle,                                          \
N                   uint32_t ui32Flags))ROM_USBTABLE[24])
X#define ROM_USBHostEndpointDataToggle                                                 ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        bool bDataToggle,                                                             uint32_t ui32Flags))ROM_USBTABLE[24])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostEndpointStatusClear                                        \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32Flags))ROM_USBTABLE[25])
X#define ROM_USBHostEndpointStatusClear                                                ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32Flags))ROM_USBTABLE[25])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostHubAddrGet                                                 \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Endpoint,                                 \
N                       uint32_t ui32Flags))ROM_USBTABLE[26])
X#define ROM_USBHostHubAddrGet                                                         ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32Flags))ROM_USBTABLE[26])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostHubAddrSet                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32Addr,                                         \
N                   uint32_t ui32Flags))ROM_USBTABLE[27])
X#define ROM_USBHostHubAddrSet                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32Addr,                                                            uint32_t ui32Flags))ROM_USBTABLE[27])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostPwrDisable                                                 \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[28])
X#define ROM_USBHostPwrDisable                                                         ((void (*)(uint32_t ui32Base))ROM_USBTABLE[28])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostPwrEnable                                                  \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[29])
X#define ROM_USBHostPwrEnable                                                          ((void (*)(uint32_t ui32Base))ROM_USBTABLE[29])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostPwrConfig                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Flags))ROM_USBTABLE[30])
X#define ROM_USBHostPwrConfig                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Flags))ROM_USBTABLE[30])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostPwrFaultDisable                                            \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[31])
X#define ROM_USBHostPwrFaultDisable                                                    ((void (*)(uint32_t ui32Base))ROM_USBTABLE[31])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostPwrFaultEnable                                             \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[32])
X#define ROM_USBHostPwrFaultEnable                                                     ((void (*)(uint32_t ui32Base))ROM_USBTABLE[32])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostRequestIN                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint))ROM_USBTABLE[33])
X#define ROM_USBHostRequestIN                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint))ROM_USBTABLE[33])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostRequestStatus                                              \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[34])
X#define ROM_USBHostRequestStatus                                                      ((void (*)(uint32_t ui32Base))ROM_USBTABLE[34])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostReset                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   bool bStart))ROM_USBTABLE[35])
X#define ROM_USBHostReset                                                              ((void (*)(uint32_t ui32Base,                                                            bool bStart))ROM_USBTABLE[35])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostResume                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   bool bStart))ROM_USBTABLE[36])
X#define ROM_USBHostResume                                                             ((void (*)(uint32_t ui32Base,                                                            bool bStart))ROM_USBTABLE[36])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostSpeedGet                                                   \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[37])
X#define ROM_USBHostSpeedGet                                                           ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[37])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostSuspend                                                    \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[38])
X#define ROM_USBHostSuspend                                                            ((void (*)(uint32_t ui32Base))ROM_USBTABLE[38])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBDevEndpointConfigGet                                           \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t *pui32MaxPacketSize,                              \
N                   uint32_t *pui32Flags))ROM_USBTABLE[41])
X#define ROM_USBDevEndpointConfigGet                                                   ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t *pui32MaxPacketSize,                                                 uint32_t *pui32Flags))ROM_USBTABLE[41])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBEndpointDMAEnable                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32Flags))ROM_USBTABLE[42])
X#define ROM_USBEndpointDMAEnable                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32Flags))ROM_USBTABLE[42])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBEndpointDMADisable                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32Flags))ROM_USBTABLE[43])
X#define ROM_USBEndpointDMADisable                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32Flags))ROM_USBTABLE[43])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBEndpointDataAvail                                              \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Endpoint))ROM_USBTABLE[44])
X#define ROM_USBEndpointDataAvail                                                      ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint))ROM_USBTABLE[44])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBModeGet                                                        \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[46])
X#define ROM_USBModeGet                                                                ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[46])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBEndpointDMAChannel                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32Channel))ROM_USBTABLE[47])
X#define ROM_USBEndpointDMAChannel                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32Channel))ROM_USBTABLE[47])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBIntDisableControl                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_USBTABLE[48])
X#define ROM_USBIntDisableControl                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_USBTABLE[48])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBIntEnableControl                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_USBTABLE[49])
X#define ROM_USBIntEnableControl                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_USBTABLE[49])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBIntStatusControl                                               \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[50])
X#define ROM_USBIntStatusControl                                                       ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[50])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBIntDisableEndpoint                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_USBTABLE[51])
X#define ROM_USBIntDisableEndpoint                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_USBTABLE[51])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBIntEnableEndpoint                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32IntFlags))ROM_USBTABLE[52])
X#define ROM_USBIntEnableEndpoint                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32IntFlags))ROM_USBTABLE[52])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBIntStatusEndpoint                                              \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[53])
X#define ROM_USBIntStatusEndpoint                                                      ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[53])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBHostMode                                                       \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[54])
X#define ROM_USBHostMode                                                               ((void (*)(uint32_t ui32Base))ROM_USBTABLE[54])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBDevMode                                                        \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[55])
X#define ROM_USBDevMode                                                                ((void (*)(uint32_t ui32Base))ROM_USBTABLE[55])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBPHYPowerOff                                                    \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[56])
X#define ROM_USBPHYPowerOff                                                            ((void (*)(uint32_t ui32Base))ROM_USBTABLE[56])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBPHYPowerOn                                                     \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[57])
X#define ROM_USBPHYPowerOn                                                             ((void (*)(uint32_t ui32Base))ROM_USBTABLE[57])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            1L
N#define ROM_UpdateUSB                                                         \
N        ((void (*)(uint8_t *pui8DescriptorInfo))ROM_USBTABLE[58])
X#define ROM_UpdateUSB                                                                 ((void (*)(uint8_t *pui8DescriptorInfo))ROM_USBTABLE[58])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_USBOTGMode                                                        \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[59])
X#define ROM_USBOTGMode                                                                ((void (*)(uint32_t ui32Base))ROM_USBTABLE[59])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            1L
N#define ROM_USBHostRequestINClear                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint))ROM_USBTABLE[60])
X#define ROM_USBHostRequestINClear                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint))ROM_USBTABLE[60])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            1L
N#define ROM_USBNumEndpointsGet                                                \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[61])
X#define ROM_USBNumEndpointsGet                                                        ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[61])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBClockDisable                                                   \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[62])
X#define ROM_USBClockDisable                                                           ((void (*)(uint32_t ui32Base))ROM_USBTABLE[62])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBClockEnable                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Div,                                          \
N                   uint32_t ui32Flags))ROM_USBTABLE[63])
X#define ROM_USBClockEnable                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Div,                                                             uint32_t ui32Flags))ROM_USBTABLE[63])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBControllerVersion                                              \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[64])
X#define ROM_USBControllerVersion                                                      ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[64])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDevLPMConfig                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_USBTABLE[65])
X#define ROM_USBDevLPMConfig                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_USBTABLE[65])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDevLPMDisable                                                  \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[66])
X#define ROM_USBDevLPMDisable                                                          ((void (*)(uint32_t ui32Base))ROM_USBTABLE[66])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            1L
N#define ROM_USBDevLPMEnable                                                   \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[67])
X#define ROM_USBDevLPMEnable                                                           ((void (*)(uint32_t ui32Base))ROM_USBTABLE[67])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDevLPMRemoteWake                                               \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[68])
X#define ROM_USBDevLPMRemoteWake                                                       ((void (*)(uint32_t ui32Base))ROM_USBTABLE[68])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDevSpeedGet                                                    \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[69])
X#define ROM_USBDevSpeedGet                                                            ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[69])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDMAChannelAddressGet                                           \
N        ((void * (*)(uint32_t ui32Base,                                       \
N                     uint32_t ui32Channel))ROM_USBTABLE[70])
X#define ROM_USBDMAChannelAddressGet                                                   ((void * (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_USBTABLE[70])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDMAChannelAddressSet                                           \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel,                                      \
N                   void *pvAddress))ROM_USBTABLE[71])
X#define ROM_USBDMAChannelAddressSet                                                   ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         void *pvAddress))ROM_USBTABLE[71])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDMAChannelConfigSet                                            \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel,                                      \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32Config))ROM_USBTABLE[72])
X#define ROM_USBDMAChannelConfigSet                                                    ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t ui32Endpoint,                                                        uint32_t ui32Config))ROM_USBTABLE[72])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDMAChannelDisable                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel))ROM_USBTABLE[73])
X#define ROM_USBDMAChannelDisable                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_USBTABLE[73])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDMAChannelEnable                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel))ROM_USBTABLE[74])
X#define ROM_USBDMAChannelEnable                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_USBTABLE[74])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDMAChannelIntDisable                                           \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel))ROM_USBTABLE[75])
X#define ROM_USBDMAChannelIntDisable                                                   ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_USBTABLE[75])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDMAChannelIntEnable                                            \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel))ROM_USBTABLE[76])
X#define ROM_USBDMAChannelIntEnable                                                    ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_USBTABLE[76])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDMAChannelCountGet                                             \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Channel))ROM_USBTABLE[77])
X#define ROM_USBDMAChannelCountGet                                                     ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_USBTABLE[77])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDMAChannelCountSet                                             \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Count,                                        \
N                   uint32_t ui32Channel))ROM_USBTABLE[78])
X#define ROM_USBDMAChannelCountSet                                                     ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Count,                                                           uint32_t ui32Channel))ROM_USBTABLE[78])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDMAChannelIntStatus                                            \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[79])
X#define ROM_USBDMAChannelIntStatus                                                    ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[79])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDMAChannelStatus                                               \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       uint32_t ui32Channel))ROM_USBTABLE[80])
X#define ROM_USBDMAChannelStatus                                                       ((uint32_t (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel))ROM_USBTABLE[80])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBDMAChannelStatusClear                                          \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Channel,                                      \
N                   uint32_t ui32Status))ROM_USBTABLE[81])
X#define ROM_USBDMAChannelStatusClear                                                  ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Channel,                                                         uint32_t ui32Status))ROM_USBTABLE[81])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBHighSpeed                                                      \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   bool bEnable))ROM_USBTABLE[82])
X#define ROM_USBHighSpeed                                                              ((void (*)(uint32_t ui32Base,                                                            bool bEnable))ROM_USBTABLE[82])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBHostEndpointPing                                               \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   bool bEnable))ROM_USBTABLE[83])
X#define ROM_USBHostEndpointPing                                                       ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        bool bEnable))ROM_USBTABLE[83])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBHostEndpointSpeed                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32Flags))ROM_USBTABLE[84])
X#define ROM_USBHostEndpointSpeed                                                      ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32Flags))ROM_USBTABLE[84])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBHostLPMConfig                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32ResumeTime,                                   \
N                   uint32_t ui32Config))ROM_USBTABLE[85])
X#define ROM_USBHostLPMConfig                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32ResumeTime,                                                      uint32_t ui32Config))ROM_USBTABLE[85])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBHostLPMResume                                                  \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[86])
X#define ROM_USBHostLPMResume                                                          ((void (*)(uint32_t ui32Base))ROM_USBTABLE[86])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBHostLPMSend                                                    \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Address,                                      \
N                   uint32_t uiEndpoint))ROM_USBTABLE[87])
X#define ROM_USBHostLPMSend                                                            ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Address,                                                         uint32_t uiEndpoint))ROM_USBTABLE[87])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBLPMIntDisable                                                  \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Ints))ROM_USBTABLE[88])
X#define ROM_USBLPMIntDisable                                                          ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Ints))ROM_USBTABLE[88])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBLPMIntEnable                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Ints))ROM_USBTABLE[89])
X#define ROM_USBLPMIntEnable                                                           ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Ints))ROM_USBTABLE[89])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBLPMIntStatus                                                   \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[90])
X#define ROM_USBLPMIntStatus                                                           ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[90])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBLPMLinkStateGet                                                \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[91])
X#define ROM_USBLPMLinkStateGet                                                        ((uint32_t (*)(uint32_t ui32Base))ROM_USBTABLE[91])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBEndpointPacketCountSet                                         \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Endpoint,                                     \
N                   uint32_t ui32Count))ROM_USBTABLE[92])
X#define ROM_USBEndpointPacketCountSet                                                 ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Endpoint,                                                        uint32_t ui32Count))ROM_USBTABLE[92])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBULPIConfig                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Config))ROM_USBTABLE[93])
X#define ROM_USBULPIConfig                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Config))ROM_USBTABLE[93])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBULPIDisable                                                    \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[94])
X#define ROM_USBULPIDisable                                                            ((void (*)(uint32_t ui32Base))ROM_USBTABLE[94])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBULPIEnable                                                     \
N        ((void (*)(uint32_t ui32Base))ROM_USBTABLE[95])
X#define ROM_USBULPIEnable                                                             ((void (*)(uint32_t ui32Base))ROM_USBTABLE[95])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBULPIRegRead                                                    \
N        ((uint8_t (*)(uint32_t ui32Base,                                      \
N                      uint8_t ui8Reg))ROM_USBTABLE[96])
X#define ROM_USBULPIRegRead                                                            ((uint8_t (*)(uint32_t ui32Base,                                                            uint8_t ui8Reg))ROM_USBTABLE[96])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBULPIRegWrite                                                   \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint8_t ui8Reg,                                            \
N                   uint8_t ui8Data))ROM_USBTABLE[97])
X#define ROM_USBULPIRegWrite                                                           ((void (*)(uint32_t ui32Base,                                                            uint8_t ui8Reg,                                                               uint8_t ui8Data))ROM_USBTABLE[97])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBOTGSessionRequest                                              \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   bool bStart))ROM_USBTABLE[98])
X#define ROM_USBOTGSessionRequest                                                      ((void (*)(uint32_t ui32Base,                                                            bool bStart))ROM_USBTABLE[98])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_USBModeConfig                                                     \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Mode))ROM_USBTABLE[103])
X#define ROM_USBModeConfig                                                             ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Mode))ROM_USBTABLE[103])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the Watchdog API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogIntClear                                                  \
N        ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[0])
X#define ROM_WatchdogIntClear                                                          ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[0])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogRunning                                                   \
N        ((bool (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[1])
X#define ROM_WatchdogRunning                                                           ((bool (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogEnable                                                    \
N        ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[2])
X#define ROM_WatchdogEnable                                                            ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogResetEnable                                               \
N        ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[3])
X#define ROM_WatchdogResetEnable                                                       ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogResetDisable                                              \
N        ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[4])
X#define ROM_WatchdogResetDisable                                                      ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[4])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogLock                                                      \
N        ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[5])
X#define ROM_WatchdogLock                                                              ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogUnlock                                                    \
N        ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[6])
X#define ROM_WatchdogUnlock                                                            ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[6])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogLockState                                                 \
N        ((bool (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[7])
X#define ROM_WatchdogLockState                                                         ((bool (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[7])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogReloadSet                                                 \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32LoadVal))ROM_WATCHDOGTABLE[8])
X#define ROM_WatchdogReloadSet                                                         ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32LoadVal))ROM_WATCHDOGTABLE[8])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogReloadGet                                                 \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[9])
X#define ROM_WatchdogReloadGet                                                         ((uint32_t (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[9])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogValueGet                                                  \
N        ((uint32_t (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[10])
X#define ROM_WatchdogValueGet                                                          ((uint32_t (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[10])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogIntEnable                                                 \
N        ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[11])
X#define ROM_WatchdogIntEnable                                                         ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[11])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogIntStatus                                                 \
N        ((uint32_t (*)(uint32_t ui32Base,                                     \
N                       bool bMasked))ROM_WATCHDOGTABLE[12])
X#define ROM_WatchdogIntStatus                                                         ((uint32_t (*)(uint32_t ui32Base,                                                            bool bMasked))ROM_WATCHDOGTABLE[12])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogStallEnable                                               \
N        ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[13])
X#define ROM_WatchdogStallEnable                                                       ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[13])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogStallDisable                                              \
N        ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[14])
X#define ROM_WatchdogStallDisable                                                      ((void (*)(uint32_t ui32Base))ROM_WATCHDOGTABLE[14])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_WatchdogIntTypeSet                                                \
N        ((void (*)(uint32_t ui32Base,                                         \
N                   uint32_t ui32Type))ROM_WATCHDOGTABLE[15])
X#define ROM_WatchdogIntTypeSet                                                        ((void (*)(uint32_t ui32Base,                                                            uint32_t ui32Type))ROM_WATCHDOGTABLE[15])
N#endif
N
N//*****************************************************************************
N//
N// Macros for calling ROM functions in the Software API.
N//
N//*****************************************************************************
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_Crc16Array                                                        \
N        ((uint16_t (*)(uint32_t ui32WordLen,                                  \
N                       const uint32_t *pui32Data))ROM_SOFTWARETABLE[1])
X#define ROM_Crc16Array                                                                ((uint16_t (*)(uint32_t ui32WordLen,                                                         const uint32_t *pui32Data))ROM_SOFTWARETABLE[1])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_Crc16Array3                                                       \
N        ((void (*)(uint32_t ui32WordLen,                                      \
N                   const uint32_t *pui32Data,                                 \
N                   uint16_t *pui16Crc3))ROM_SOFTWARETABLE[2])
X#define ROM_Crc16Array3                                                               ((void (*)(uint32_t ui32WordLen,                                                         const uint32_t *pui32Data,                                                    uint16_t *pui16Crc3))ROM_SOFTWARETABLE[2])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_Crc16                                                             \
N        ((uint16_t (*)(uint16_t ui16Crc,                                      \
N                       const uint8_t *pui8Data,                               \
N                       uint32_t ui32Count))ROM_SOFTWARETABLE[3])
X#define ROM_Crc16                                                                     ((uint16_t (*)(uint16_t ui16Crc,                                                             const uint8_t *pui8Data,                                                      uint32_t ui32Count))ROM_SOFTWARETABLE[3])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_Crc8CCITT                                                         \
N        ((uint8_t (*)(uint8_t ui8Crc,                                         \
N                      const uint8_t *pui8Data,                                \
N                      uint32_t ui32Count))ROM_SOFTWARETABLE[4])
X#define ROM_Crc8CCITT                                                                 ((uint8_t (*)(uint8_t ui8Crc,                                                               const uint8_t *pui8Data,                                                      uint32_t ui32Count))ROM_SOFTWARETABLE[4])
N#endif
N#if defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 1L
N#define ROM_Crc32                                                             \
N        ((uint32_t (*)(uint32_t ui32Crc,                                      \
N                       const uint8_t *pui8Data,                               \
N                       uint32_t ui32Count))ROM_SOFTWARETABLE[5])
X#define ROM_Crc32                                                                     ((uint32_t (*)(uint32_t ui32Crc,                                                             const uint8_t *pui8Data,                                                      uint32_t ui32Count))ROM_SOFTWARETABLE[5])
N#endif
N#if defined(TARGET_IS_BLIZZARD_RA1) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RA3) ||                                        \
N    defined(TARGET_IS_BLIZZARD_RB1) ||                                        \
N    defined(TARGET_IS_SNOWFLAKE_RA0)
X#if 0L ||                                            0L ||                                            0L ||                                            1L
N#define ROM_pvAESTable                                                        \
N        ((void *)&(ROM_SOFTWARETABLE[7]))
X#define ROM_pvAESTable                                                                ((void *)&(ROM_SOFTWARETABLE[7]))
N#endif
N
N#endif // __DRIVERLIB_ROM_H__
L 30 "web\enet_lwip.c" 2
N#include "driverlib/sysctl.h"
L 1 "..\MCU\driverlib/sysctl.h" 1
N//*****************************************************************************
N//
N// sysctl.h - Prototypes for the system control driver.
N//
N// Copyright (c) 2005-2013 Texas Instruments Incorporated.  All rights reserved.
N// Software License Agreement
N// 
N//   Redistribution and use in source and binary forms, with or without
N//   modification, are permitted provided that the following conditions
N//   are met:
N// 
N//   Redistributions of source code must retain the above copyright
N//   notice, this list of conditions and the following disclaimer.
N// 
N//   Redistributions in binary form must reproduce the above copyright
N//   notice, this list of conditions and the following disclaimer in the
N//   documentation and/or other materials provided with the  
N//   distribution.
N// 
N//   Neither the name of Texas Instruments Incorporated nor the names of
N//   its contributors may be used to endorse or promote products derived
N//   from this software without specific prior written permission.
N// 
N// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
N// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
N// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
N// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
N// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
N// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
N// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
N// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
N// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
N// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
N// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
N// 
N// This is part of revision 2.0.1.11577 of the Tiva Peripheral Driver Library.
N//
N//*****************************************************************************
N
N#ifndef __DRIVERLIB_SYSCTL_H__
N#define __DRIVERLIB_SYSCTL_H__
N
N//*****************************************************************************
N//
N// If building with a C++ compiler, make all of the definitions in this header
N// have a C binding.
N//
N//*****************************************************************************
N#ifdef __cplusplus
Sextern "C"
S{
N#endif
N
N//*****************************************************************************
N//
N// The following are values that can be passed to the
N// SysCtlPeripheralPresent(), SysCtlPeripheralEnable(),
N// SysCtlPeripheralDisable(), and SysCtlPeripheralReset() APIs as the
N// ui32Peripheral parameter.  The peripherals in the fourth group (upper nibble
N// is 3) can only be used with the SysCtlPeripheralPresent() API.
N//
N//*****************************************************************************
N#define SYSCTL_PERIPH_ADC0      0xf0003800  // ADC 0
N#define SYSCTL_PERIPH_ADC1      0xf0003801  // ADC 1
N#define SYSCTL_PERIPH_CAN0      0xf0003400  // CAN 0
N#define SYSCTL_PERIPH_CAN1      0xf0003401  // CAN 1
N#define SYSCTL_PERIPH_CAN2      0xf0003402  // CAN 2
N#define SYSCTL_PERIPH_COMP0     0xf0003c00  // Analog comparator 0
N#define SYSCTL_PERIPH_COMP1     0xf0003c01  // Analog comparator 1
N#define SYSCTL_PERIPH_COMP2     0xf0003c02  // Analog comparator 2
N#define SYSCTL_PERIPH_EMAC0     0xf0009c00  // Ethernet MAC0
N#define SYSCTL_PERIPH_EPHY0     0xf0003000  // Ethernet PHY0
N#define SYSCTL_PERIPH_EPI0      0xf0001000  // EPI0
N#define SYSCTL_PERIPH_GPIOA     0xf0000800  // GPIO A
N#define SYSCTL_PERIPH_GPIOB     0xf0000801  // GPIO B
N#define SYSCTL_PERIPH_GPIOC     0xf0000802  // GPIO C
N#define SYSCTL_PERIPH_GPIOD     0xf0000803  // GPIO D
N#define SYSCTL_PERIPH_GPIOE     0xf0000804  // GPIO E
N#define SYSCTL_PERIPH_GPIOF     0xf0000805  // GPIO F
N#define SYSCTL_PERIPH_GPIOG     0xf0000806  // GPIO G
N#define SYSCTL_PERIPH_GPIOH     0xf0000807  // GPIO H
N#define SYSCTL_PERIPH_GPIOJ     0xf0000808  // GPIO J
N#define SYSCTL_PERIPH_HIBERNATE 0xf0001400  // Hibernation module
N#define SYSCTL_PERIPH_CCM0      0xf0007400  // CCM 0
N#define SYSCTL_PERIPH_EEPROM0   0xf0005800  // EEPROM 0
N#define SYSCTL_PERIPH_FAN0      0xf0005400  // FAN 0
N#define SYSCTL_PERIPH_FAN1      0xf0005401  // FAN 1
N#define SYSCTL_PERIPH_GPIOK     0xf0000809  // GPIO K
N#define SYSCTL_PERIPH_GPIOL     0xf000080a  // GPIO L
N#define SYSCTL_PERIPH_GPIOM     0xf000080b  // GPIO M
N#define SYSCTL_PERIPH_GPION     0xf000080c  // GPIO N
N#define SYSCTL_PERIPH_GPIOP     0xf000080d  // GPIO P
N#define SYSCTL_PERIPH_GPIOQ     0xf000080e  // GPIO Q
N#define SYSCTL_PERIPH_GPIOR     0xf000080f  // GPIO R
N#define SYSCTL_PERIPH_GPIOS     0xf0000810  // GPIO S
N#define SYSCTL_PERIPH_GPIOT     0xf0000811  // GPIO T
N#define SYSCTL_PERIPH_I2C0      0xf0002000  // I2C 0
N#define SYSCTL_PERIPH_I2C1      0xf0002001  // I2C 1
N#define SYSCTL_PERIPH_I2C2      0xf0002002  // I2C 2
N#define SYSCTL_PERIPH_I2C3      0xf0002003  // I2C 3
N#define SYSCTL_PERIPH_I2C4      0xf0002004  // I2C 4
N#define SYSCTL_PERIPH_I2C5      0xf0002005  // I2C 5
N#define SYSCTL_PERIPH_I2C6      0xf0002006  // I2C 6
N#define SYSCTL_PERIPH_I2C7      0xf0002007  // I2C 7
N#define SYSCTL_PERIPH_I2C8      0xf0002008  // I2C 8
N#define SYSCTL_PERIPH_I2C9      0xf0002009  // I2C 9
N#define SYSCTL_PERIPH_LCD0      0xf0009000  // LCD 0
N#define SYSCTL_PERIPH_PWM0      0xf0004000  // PWM 0
N#define SYSCTL_PERIPH_PWM1      0xf0004001  // PWM 1
N#define SYSCTL_PERIPH_QEI0      0xf0004400  // QEI 0
N#define SYSCTL_PERIPH_QEI1      0xf0004401  // QEI 1
N#define SYSCTL_PERIPH_SSI0      0xf0001c00  // SSI 0
N#define SYSCTL_PERIPH_SSI1      0xf0001c01  // SSI 1
N#define SYSCTL_PERIPH_SSI2      0xf0001c02  // SSI 2
N#define SYSCTL_PERIPH_SSI3      0xf0001c03  // SSI 3
N#define SYSCTL_PERIPH_TIMER0    0xf0000400  // Timer 0
N#define SYSCTL_PERIPH_TIMER1    0xf0000401  // Timer 1
N#define SYSCTL_PERIPH_TIMER2    0xf0000402  // Timer 2
N#define SYSCTL_PERIPH_TIMER3    0xf0000403  // Timer 3
N#define SYSCTL_PERIPH_TIMER4    0xf0000404  // Timer 4
N#define SYSCTL_PERIPH_TIMER5    0xf0000405  // Timer 5
N#define SYSCTL_PERIPH_TIMER6    0xf0000406  // Timer 6
N#define SYSCTL_PERIPH_TIMER7    0xf0000407  // Timer 7
N#define SYSCTL_PERIPH_UART0     0xf0001800  // UART 0
N#define SYSCTL_PERIPH_UART1     0xf0001801  // UART 1
N#define SYSCTL_PERIPH_UART2     0xf0001802  // UART 2
N#define SYSCTL_PERIPH_UART3     0xf0001803  // UART 3
N#define SYSCTL_PERIPH_UART4     0xf0001804  // UART 4
N#define SYSCTL_PERIPH_UART5     0xf0001805  // UART 5
N#define SYSCTL_PERIPH_UART6     0xf0001806  // UART 6
N#define SYSCTL_PERIPH_UART7     0xf0001807  // UART 7
N#define SYSCTL_PERIPH_UDMA      0xf0000c00  // uDMA
N#define SYSCTL_PERIPH_USB0      0xf0002800  // USB 0
N#define SYSCTL_PERIPH_WDOG0     0xf0000000  // Watchdog 0
N#define SYSCTL_PERIPH_WDOG1     0xf0000001  // Watchdog 1
N#define SYSCTL_PERIPH_WTIMER0   0xf0005c00  // Wide Timer 0
N#define SYSCTL_PERIPH_WTIMER1   0xf0005c01  // Wide Timer 1
N#define SYSCTL_PERIPH_WTIMER2   0xf0005c02  // Wide Timer 2
N#define SYSCTL_PERIPH_WTIMER3   0xf0005c03  // Wide Timer 3
N#define SYSCTL_PERIPH_WTIMER4   0xf0005c04  // Wide Timer 4
N#define SYSCTL_PERIPH_WTIMER5   0xf0005c05  // Wide Timer 5
N
N//*****************************************************************************
N//
N// The following are values that can be passed to the SysCtlLDOSleepSet() and
N// SysCtlLDODeepSleepSet() APIs as the ui32Voltage value, or returned by the
N// SysCtlLDOSleepGet() and SysCtlLDODeepSleepGet() APIs.
N//
N//*****************************************************************************
N#define SYSCTL_LDO_0_90V        0x80000012  // LDO output of 0.90V
N#define SYSCTL_LDO_0_95V        0x80000013  // LDO output of 0.95V
N#define SYSCTL_LDO_1_00V        0x80000014  // LDO output of 1.00V
N#define SYSCTL_LDO_1_05V        0x80000015  // LDO output of 1.05V
N#define SYSCTL_LDO_1_10V        0x80000016  // LDO output of 1.10V
N#define SYSCTL_LDO_1_15V        0x80000017  // LDO output of 1.15V
N#define SYSCTL_LDO_1_20V        0x80000018  // LDO output of 1.20V
N
N//*****************************************************************************
N//
N// The following are values that can be passed to the SysCtlIntEnable(),
N// SysCtlIntDisable(), and SysCtlIntClear() APIs, or returned in the bit mask
N// by the SysCtlIntStatus() API.
N//
N//*****************************************************************************
N#define SYSCTL_INT_MOSC_PUP     0x00000100  // MOSC power-up interrupt
N#define SYSCTL_INT_USBPLL_LOCK  0x00000080  // USB PLL lock interrupt
N#define SYSCTL_INT_PLL_LOCK     0x00000040  // PLL lock interrupt
N#define SYSCTL_INT_CUR_LIMIT    0x00000020  // Current limit interrupt
N#define SYSCTL_INT_IOSC_FAIL    0x00000010  // Internal oscillator failure int
N#define SYSCTL_INT_MOSC_FAIL    0x00000008  // Main oscillator failure int
N#define SYSCTL_INT_POR          0x00000004  // Power on reset interrupt
N#define SYSCTL_INT_BOR          0x00000002  // Brown out interrupt
N#define SYSCTL_INT_PLL_FAIL     0x00000001  // PLL failure interrupt
N
N//*****************************************************************************
N//
N// The following are values that can be passed to the SysCtlResetCauseClear()
N// API or returned by the SysCtlResetCauseGet() API.
N//
N//*****************************************************************************
N#define SYSCTL_CAUSE_HSRVREQ    0x00001000  // Hardware System Service Request
N#define SYSCTL_CAUSE_HIB        0x00000040  // Hibernate reset
N#define SYSCTL_CAUSE_LDO        0x00000020  // LDO power not OK reset
N#define SYSCTL_CAUSE_WDOG1      0x00000020  // Watchdog 1 reset
N#define SYSCTL_CAUSE_SW         0x00000010  // Software reset
N#define SYSCTL_CAUSE_WDOG0      0x00000008  // Watchdog 0 reset
N#define SYSCTL_CAUSE_WDOG       0x00000008  // Watchdog reset
N#define SYSCTL_CAUSE_BOR        0x00000004  // Brown-out reset
N#define SYSCTL_CAUSE_POR        0x00000002  // Power on reset
N#define SYSCTL_CAUSE_EXT        0x00000001  // External reset
N
N//*****************************************************************************
N//
N// The following are values that can be passed to the SysCtlBrownOutConfigSet()
N// API as the ui32Config parameter.
N//
N//*****************************************************************************
N#define SYSCTL_BOR_RESET        0x00000002  // Reset instead of interrupting
N#define SYSCTL_BOR_RESAMPLE     0x00000001  // Resample BOR before asserting
N
N//*****************************************************************************
N//
N// The following are values that can be passed to the SysCtlPWMClockSet() API
N// as the ui32Config parameter, and can be returned by the SysCtlPWMClockGet()
N// API.
N//
N//*****************************************************************************
N#define SYSCTL_PWMDIV_1         0x00000000  // PWM clock is processor clock /1
N#define SYSCTL_PWMDIV_2         0x00100000  // PWM clock is processor clock /2
N#define SYSCTL_PWMDIV_4         0x00120000  // PWM clock is processor clock /4
N#define SYSCTL_PWMDIV_8         0x00140000  // PWM clock is processor clock /8
N#define SYSCTL_PWMDIV_16        0x00160000  // PWM clock is processor clock /16
N#define SYSCTL_PWMDIV_32        0x00180000  // PWM clock is processor clock /32
N#define SYSCTL_PWMDIV_64        0x001A0000  // PWM clock is processor clock /64
N
N//*****************************************************************************
N//
N// The following are values that can be passed to the SysCtlADCSpeedSet() API
N// as the ui32Speed parameter, and can be returned by the SysCtlADCSpeedGet()
N// API.
N//
N//*****************************************************************************
N#define SYSCTL_ADCSPEED_1MSPS   0x00000F00  // 1,000,000 samples per second
N#define SYSCTL_ADCSPEED_500KSPS 0x00000A00  // 500,000 samples per second
N#define SYSCTL_ADCSPEED_250KSPS 0x00000500  // 250,000 samples per second
N#define SYSCTL_ADCSPEED_125KSPS 0x00000000  // 125,000 samples per second
N
N//*****************************************************************************
N//
N// The following are values that can be passed to the SysCtlClockSet() API as
N// the ui32Config parameter.
N//
N//*****************************************************************************
N#define SYSCTL_SYSDIV_1         0x07800000  // Processor clock is osc/pll /1
N#define SYSCTL_SYSDIV_2         0x00C00000  // Processor clock is osc/pll /2
N#define SYSCTL_SYSDIV_3         0x01400000  // Processor clock is osc/pll /3
N#define SYSCTL_SYSDIV_4         0x01C00000  // Processor clock is osc/pll /4
N#define SYSCTL_SYSDIV_5         0x02400000  // Processor clock is osc/pll /5
N#define SYSCTL_SYSDIV_6         0x02C00000  // Processor clock is osc/pll /6
N#define SYSCTL_SYSDIV_7         0x03400000  // Processor clock is osc/pll /7
N#define SYSCTL_SYSDIV_8         0x03C00000  // Processor clock is osc/pll /8
N#define SYSCTL_SYSDIV_9         0x04400000  // Processor clock is osc/pll /9
N#define SYSCTL_SYSDIV_10        0x04C00000  // Processor clock is osc/pll /10
N#define SYSCTL_SYSDIV_11        0x05400000  // Processor clock is osc/pll /11
N#define SYSCTL_SYSDIV_12        0x05C00000  // Processor clock is osc/pll /12
N#define SYSCTL_SYSDIV_13        0x06400000  // Processor clock is osc/pll /13
N#define SYSCTL_SYSDIV_14        0x06C00000  // Processor clock is osc/pll /14
N#define SYSCTL_SYSDIV_15        0x07400000  // Processor clock is osc/pll /15
N#define SYSCTL_SYSDIV_16        0x07C00000  // Processor clock is osc/pll /16
N#define SYSCTL_SYSDIV_17        0x88400000  // Processor clock is osc/pll /17
N#define SYSCTL_SYSDIV_18        0x88C00000  // Processor clock is osc/pll /18
N#define SYSCTL_SYSDIV_19        0x89400000  // Processor clock is osc/pll /19
N#define SYSCTL_SYSDIV_20        0x89C00000  // Processor clock is osc/pll /20
N#define SYSCTL_SYSDIV_21        0x8A400000  // Processor clock is osc/pll /21
N#define SYSCTL_SYSDIV_22        0x8AC00000  // Processor clock is osc/pll /22
N#define SYSCTL_SYSDIV_23        0x8B400000  // Processor clock is osc/pll /23
N#define SYSCTL_SYSDIV_24        0x8BC00000  // Processor clock is osc/pll /24
N#define SYSCTL_SYSDIV_25        0x8C400000  // Processor clock is osc/pll /25
N#define SYSCTL_SYSDIV_26        0x8CC00000  // Processor clock is osc/pll /26
N#define SYSCTL_SYSDIV_27        0x8D400000  // Processor clock is osc/pll /27
N#define SYSCTL_SYSDIV_28        0x8DC00000  // Processor clock is osc/pll /28
N#define SYSCTL_SYSDIV_29        0x8E400000  // Processor clock is osc/pll /29
N#define SYSCTL_SYSDIV_30        0x8EC00000  // Processor clock is osc/pll /30
N#define SYSCTL_SYSDIV_31        0x8F400000  // Processor clock is osc/pll /31
N#define SYSCTL_SYSDIV_32        0x8FC00000  // Processor clock is osc/pll /32
N#define SYSCTL_SYSDIV_33        0x90400000  // Processor clock is osc/pll /33
N#define SYSCTL_SYSDIV_34        0x90C00000  // Processor clock is osc/pll /34
N#define SYSCTL_SYSDIV_35        0x91400000  // Processor clock is osc/pll /35
N#define SYSCTL_SYSDIV_36        0x91C00000  // Processor clock is osc/pll /36
N#define SYSCTL_SYSDIV_37        0x92400000  // Processor clock is osc/pll /37
N#define SYSCTL_SYSDIV_38        0x92C00000  // Processor clock is osc/pll /38
N#define SYSCTL_SYSDIV_39        0x93400000  // Processor clock is osc/pll /39
N#define SYSCTL_SYSDIV_40        0x93C00000  // Processor clock is osc/pll /40
N#define SYSCTL_SYSDIV_41        0x94400000  // Processor clock is osc/pll /41
N#define SYSCTL_SYSDIV_42        0x94C00000  // Processor clock is osc/pll /42
N#define SYSCTL_SYSDIV_43        0x95400000  // Processor clock is osc/pll /43
N#define SYSCTL_SYSDIV_44        0x95C00000  // Processor clock is osc/pll /44
N#define SYSCTL_SYSDIV_45        0x96400000  // Processor clock is osc/pll /45
N#define SYSCTL_SYSDIV_46        0x96C00000  // Processor clock is osc/pll /46
N#define SYSCTL_SYSDIV_47        0x97400000  // Processor clock is osc/pll /47
N#define SYSCTL_SYSDIV_48        0x97C00000  // Processor clock is osc/pll /48
N#define SYSCTL_SYSDIV_49        0x98400000  // Processor clock is osc/pll /49
N#define SYSCTL_SYSDIV_50        0x98C00000  // Processor clock is osc/pll /50
N#define SYSCTL_SYSDIV_51        0x99400000  // Processor clock is osc/pll /51
N#define SYSCTL_SYSDIV_52        0x99C00000  // Processor clock is osc/pll /52
N#define SYSCTL_SYSDIV_53        0x9A400000  // Processor clock is osc/pll /53
N#define SYSCTL_SYSDIV_54        0x9AC00000  // Processor clock is osc/pll /54
N#define SYSCTL_SYSDIV_55        0x9B400000  // Processor clock is osc/pll /55
N#define SYSCTL_SYSDIV_56        0x9BC00000  // Processor clock is osc/pll /56
N#define SYSCTL_SYSDIV_57        0x9C400000  // Processor clock is osc/pll /57
N#define SYSCTL_SYSDIV_58        0x9CC00000  // Processor clock is osc/pll /58
N#define SYSCTL_SYSDIV_59        0x9D400000  // Processor clock is osc/pll /59
N#define SYSCTL_SYSDIV_60        0x9DC00000  // Processor clock is osc/pll /60
N#define SYSCTL_SYSDIV_61        0x9E400000  // Processor clock is osc/pll /61
N#define SYSCTL_SYSDIV_62        0x9EC00000  // Processor clock is osc/pll /62
N#define SYSCTL_SYSDIV_63        0x9F400000  // Processor clock is osc/pll /63
N#define SYSCTL_SYSDIV_64        0x9FC00000  // Processor clock is osc/pll /64
N#define SYSCTL_SYSDIV_2_5       0xC1000000  // Processor clock is pll / 2.5
N#define SYSCTL_SYSDIV_3_5       0xC1800000  // Processor clock is pll / 3.5
N#define SYSCTL_SYSDIV_4_5       0xC2000000  // Processor clock is pll / 4.5
N#define SYSCTL_SYSDIV_5_5       0xC2800000  // Processor clock is pll / 5.5
N#define SYSCTL_SYSDIV_6_5       0xC3000000  // Processor clock is pll / 6.5
N#define SYSCTL_SYSDIV_7_5       0xC3800000  // Processor clock is pll / 7.5
N#define SYSCTL_SYSDIV_8_5       0xC4000000  // Processor clock is pll / 8.5
N#define SYSCTL_SYSDIV_9_5       0xC4800000  // Processor clock is pll / 9.5
N#define SYSCTL_SYSDIV_10_5      0xC5000000  // Processor clock is pll / 10.5
N#define SYSCTL_SYSDIV_11_5      0xC5800000  // Processor clock is pll / 11.5
N#define SYSCTL_SYSDIV_12_5      0xC6000000  // Processor clock is pll / 12.5
N#define SYSCTL_SYSDIV_13_5      0xC6800000  // Processor clock is pll / 13.5
N#define SYSCTL_SYSDIV_14_5      0xC7000000  // Processor clock is pll / 14.5
N#define SYSCTL_SYSDIV_15_5      0xC7800000  // Processor clock is pll / 15.5
N#define SYSCTL_SYSDIV_16_5      0xC8000000  // Processor clock is pll / 16.5
N#define SYSCTL_SYSDIV_17_5      0xC8800000  // Processor clock is pll / 17.5
N#define SYSCTL_SYSDIV_18_5      0xC9000000  // Processor clock is pll / 18.5
N#define SYSCTL_SYSDIV_19_5      0xC9800000  // Processor clock is pll / 19.5
N#define SYSCTL_SYSDIV_20_5      0xCA000000  // Processor clock is pll / 20.5
N#define SYSCTL_SYSDIV_21_5      0xCA800000  // Processor clock is pll / 21.5
N#define SYSCTL_SYSDIV_22_5      0xCB000000  // Processor clock is pll / 22.5
N#define SYSCTL_SYSDIV_23_5      0xCB800000  // Processor clock is pll / 23.5
N#define SYSCTL_SYSDIV_24_5      0xCC000000  // Processor clock is pll / 24.5
N#define SYSCTL_SYSDIV_25_5      0xCC800000  // Processor clock is pll / 25.5
N#define SYSCTL_SYSDIV_26_5      0xCD000000  // Processor clock is pll / 26.5
N#define SYSCTL_SYSDIV_27_5      0xCD800000  // Processor clock is pll / 27.5
N#define SYSCTL_SYSDIV_28_5      0xCE000000  // Processor clock is pll / 28.5
N#define SYSCTL_SYSDIV_29_5      0xCE800000  // Processor clock is pll / 29.5
N#define SYSCTL_SYSDIV_30_5      0xCF000000  // Processor clock is pll / 30.5
N#define SYSCTL_SYSDIV_31_5      0xCF800000  // Processor clock is pll / 31.5
N#define SYSCTL_SYSDIV_32_5      0xD0000000  // Processor clock is pll / 32.5
N#define SYSCTL_SYSDIV_33_5      0xD0800000  // Processor clock is pll / 33.5
N#define SYSCTL_SYSDIV_34_5      0xD1000000  // Processor clock is pll / 34.5
N#define SYSCTL_SYSDIV_35_5      0xD1800000  // Processor clock is pll / 35.5
N#define SYSCTL_SYSDIV_36_5      0xD2000000  // Processor clock is pll / 36.5
N#define SYSCTL_SYSDIV_37_5      0xD2800000  // Processor clock is pll / 37.5
N#define SYSCTL_SYSDIV_38_5      0xD3000000  // Processor clock is pll / 38.5
N#define SYSCTL_SYSDIV_39_5      0xD3800000  // Processor clock is pll / 39.5
N#define SYSCTL_SYSDIV_40_5      0xD4000000  // Processor clock is pll / 40.5
N#define SYSCTL_SYSDIV_41_5      0xD4800000  // Processor clock is pll / 41.5
N#define SYSCTL_SYSDIV_42_5      0xD5000000  // Processor clock is pll / 42.5
N#define SYSCTL_SYSDIV_43_5      0xD5800000  // Processor clock is pll / 43.5
N#define SYSCTL_SYSDIV_44_5      0xD6000000  // Processor clock is pll / 44.5
N#define SYSCTL_SYSDIV_45_5      0xD6800000  // Processor clock is pll / 45.5
N#define SYSCTL_SYSDIV_46_5      0xD7000000  // Processor clock is pll / 46.5
N#define SYSCTL_SYSDIV_47_5      0xD7800000  // Processor clock is pll / 47.5
N#define SYSCTL_SYSDIV_48_5      0xD8000000  // Processor clock is pll / 48.5
N#define SYSCTL_SYSDIV_49_5      0xD8800000  // Processor clock is pll / 49.5
N#define SYSCTL_SYSDIV_50_5      0xD9000000  // Processor clock is pll / 50.5
N#define SYSCTL_SYSDIV_51_5      0xD9800000  // Processor clock is pll / 51.5
N#define SYSCTL_SYSDIV_52_5      0xDA000000  // Processor clock is pll / 52.5
N#define SYSCTL_SYSDIV_53_5      0xDA800000  // Processor clock is pll / 53.5
N#define SYSCTL_SYSDIV_54_5      0xDB000000  // Processor clock is pll / 54.5
N#define SYSCTL_SYSDIV_55_5      0xDB800000  // Processor clock is pll / 55.5
N#define SYSCTL_SYSDIV_56_5      0xDC000000  // Processor clock is pll / 56.5
N#define SYSCTL_SYSDIV_57_5      0xDC800000  // Processor clock is pll / 57.5
N#define SYSCTL_SYSDIV_58_5      0xDD000000  // Processor clock is pll / 58.5
N#define SYSCTL_SYSDIV_59_5      0xDD800000  // Processor clock is pll / 59.5
N#define SYSCTL_SYSDIV_60_5      0xDE000000  // Processor clock is pll / 60.5
N#define SYSCTL_SYSDIV_61_5      0xDE800000  // Processor clock is pll / 61.5
N#define SYSCTL_SYSDIV_62_5      0xDF000000  // Processor clock is pll / 62.5
N#define SYSCTL_SYSDIV_63_5      0xDF800000  // Processor clock is pll / 63.5
N#define SYSCTL_CFG_VCO_480      0xF1000000  // VCO is 480 MHz
N#define SYSCTL_CFG_VCO_320      0xF0000000  // VCO is 320 MHz
N#define SYSCTL_USE_PLL          0x00000000  // System clock is the PLL clock
N#define SYSCTL_USE_OSC          0x00003800  // System clock is the osc clock
N#define SYSCTL_XTAL_1MHZ        0x00000000  // External crystal is 1MHz
N#define SYSCTL_XTAL_1_84MHZ     0x00000040  // External crystal is 1.8432MHz
N#define SYSCTL_XTAL_2MHZ        0x00000080  // External crystal is 2MHz
N#define SYSCTL_XTAL_2_45MHZ     0x000000C0  // External crystal is 2.4576MHz
N#define SYSCTL_XTAL_3_57MHZ     0x00000100  // External crystal is 3.579545MHz
N#define SYSCTL_XTAL_3_68MHZ     0x00000140  // External crystal is 3.6864MHz
N#define SYSCTL_XTAL_4MHZ        0x00000180  // External crystal is 4MHz
N#define SYSCTL_XTAL_4_09MHZ     0x000001C0  // External crystal is 4.096MHz
N#define SYSCTL_XTAL_4_91MHZ     0x00000200  // External crystal is 4.9152MHz
N#define SYSCTL_XTAL_5MHZ        0x00000240  // External crystal is 5MHz
N#define SYSCTL_XTAL_5_12MHZ     0x00000280  // External crystal is 5.12MHz
N#define SYSCTL_XTAL_6MHZ        0x000002C0  // External crystal is 6MHz
N#define SYSCTL_XTAL_6_14MHZ     0x00000300  // External crystal is 6.144MHz
N#define SYSCTL_XTAL_7_37MHZ     0x00000340  // External crystal is 7.3728MHz
N#define SYSCTL_XTAL_8MHZ        0x00000380  // External crystal is 8MHz
N#define SYSCTL_XTAL_8_19MHZ     0x000003C0  // External crystal is 8.192MHz
N#define SYSCTL_XTAL_10MHZ       0x00000400  // External crystal is 10 MHz
N#define SYSCTL_XTAL_12MHZ       0x00000440  // External crystal is 12 MHz
N#define SYSCTL_XTAL_12_2MHZ     0x00000480  // External crystal is 12.288 MHz
N#define SYSCTL_XTAL_13_5MHZ     0x000004C0  // External crystal is 13.56 MHz
N#define SYSCTL_XTAL_14_3MHZ     0x00000500  // External crystal is 14.31818 MHz
N#define SYSCTL_XTAL_16MHZ       0x00000540  // External crystal is 16 MHz
N#define SYSCTL_XTAL_16_3MHZ     0x00000580  // External crystal is 16.384 MHz
N#define SYSCTL_XTAL_18MHZ       0x000005C0  // External crystal is 18.0 MHz
N#define SYSCTL_XTAL_20MHZ       0x00000600  // External crystal is 20.0 MHz
N#define SYSCTL_XTAL_24MHZ       0x00000640  // External crystal is 24.0 MHz
N#define SYSCTL_XTAL_25MHZ       0x00000680  // External crystal is 25.0 MHz
N#define SYSCTL_OSC_MAIN         0x00000000  // Osc source is main osc
N#define SYSCTL_OSC_INT          0x00000010  // Osc source is int. osc
N#define SYSCTL_OSC_INT4         0x00000020  // Osc source is int. osc /4
N#define SYSCTL_OSC_INT30        0x00000030  // Osc source is int. 30 KHz
N#define SYSCTL_OSC_EXT4_19      0x80000028  // Osc source is ext. 4.19 MHz
N#define SYSCTL_OSC_EXT32        0x80000038  // Osc source is ext. 32 KHz
N#define SYSCTL_INT_OSC_DIS      0x00000002  // Disable internal oscillator
N#define SYSCTL_MAIN_OSC_DIS     0x00000001  // Disable main oscillator
N
N//*****************************************************************************
N//
N// The following are values that can be passed to the SysCtlDeepSleepClockSet()
N// API as the ui32Config parameter.
N//
N//*****************************************************************************
N#define SYSCTL_DSLP_DIV_1       0x00000000  // Deep-sleep clock is osc /1
N#define SYSCTL_DSLP_DIV_2       0x00800000  // Deep-sleep clock is osc /2
N#define SYSCTL_DSLP_DIV_3       0x01000000  // Deep-sleep clock is osc /3
N#define SYSCTL_DSLP_DIV_4       0x01800000  // Deep-sleep clock is osc /4
N#define SYSCTL_DSLP_DIV_5       0x02000000  // Deep-sleep clock is osc /5
N#define SYSCTL_DSLP_DIV_6       0x02800000  // Deep-sleep clock is osc /6
N#define SYSCTL_DSLP_DIV_7       0x03000000  // Deep-sleep clock is osc /7
N#define SYSCTL_DSLP_DIV_8       0x03800000  // Deep-sleep clock is osc /8
N#define SYSCTL_DSLP_DIV_9       0x04000000  // Deep-sleep clock is osc /9
N#define SYSCTL_DSLP_DIV_10      0x04800000  // Deep-sleep clock is osc /10
N#define SYSCTL_DSLP_DIV_11      0x05000000  // Deep-sleep clock is osc /11
N#define SYSCTL_DSLP_DIV_12      0x05800000  // Deep-sleep clock is osc /12
N#define SYSCTL_DSLP_DIV_13      0x06000000  // Deep-sleep clock is osc /13
N#define SYSCTL_DSLP_DIV_14      0x06800000  // Deep-sleep clock is osc /14
N#define SYSCTL_DSLP_DIV_15      0x07000000  // Deep-sleep clock is osc /15
N#define SYSCTL_DSLP_DIV_16      0x07800000  // Deep-sleep clock is osc /16
N#define SYSCTL_DSLP_DIV_17      0x08000000  // Deep-sleep clock is osc /17
N#define SYSCTL_DSLP_DIV_18      0x08800000  // Deep-sleep clock is osc /18
N#define SYSCTL_DSLP_DIV_19      0x09000000  // Deep-sleep clock is osc /19
N#define SYSCTL_DSLP_DIV_20      0x09800000  // Deep-sleep clock is osc /20
N#define SYSCTL_DSLP_DIV_21      0x0A000000  // Deep-sleep clock is osc /21
N#define SYSCTL_DSLP_DIV_22      0x0A800000  // Deep-sleep clock is osc /22
N#define SYSCTL_DSLP_DIV_23      0x0B000000  // Deep-sleep clock is osc /23
N#define SYSCTL_DSLP_DIV_24      0x0B800000  // Deep-sleep clock is osc /24
N#define SYSCTL_DSLP_DIV_25      0x0C000000  // Deep-sleep clock is osc /25
N#define SYSCTL_DSLP_DIV_26      0x0C800000  // Deep-sleep clock is osc /26
N#define SYSCTL_DSLP_DIV_27      0x0D000000  // Deep-sleep clock is osc /27
N#define SYSCTL_DSLP_DIV_28      0x0D800000  // Deep-sleep clock is osc /28
N#define SYSCTL_DSLP_DIV_29      0x0E000000  // Deep-sleep clock is osc /29
N#define SYSCTL_DSLP_DIV_30      0x0E800000  // Deep-sleep clock is osc /30
N#define SYSCTL_DSLP_DIV_31      0x0F000000  // Deep-sleep clock is osc /31
N#define SYSCTL_DSLP_DIV_32      0x0F800000  // Deep-sleep clock is osc /32
N#define SYSCTL_DSLP_DIV_33      0x10000000  // Deep-sleep clock is osc /33
N#define SYSCTL_DSLP_DIV_34      0x10800000  // Deep-sleep clock is osc /34
N#define SYSCTL_DSLP_DIV_35      0x11000000  // Deep-sleep clock is osc /35
N#define SYSCTL_DSLP_DIV_36      0x11800000  // Deep-sleep clock is osc /36
N#define SYSCTL_DSLP_DIV_37      0x12000000  // Deep-sleep clock is osc /37
N#define SYSCTL_DSLP_DIV_38      0x12800000  // Deep-sleep clock is osc /38
N#define SYSCTL_DSLP_DIV_39      0x13000000  // Deep-sleep clock is osc /39
N#define SYSCTL_DSLP_DIV_40      0x13800000  // Deep-sleep clock is osc /40
N#define SYSCTL_DSLP_DIV_41      0x14000000  // Deep-sleep clock is osc /41
N#define SYSCTL_DSLP_DIV_42      0x14800000  // Deep-sleep clock is osc /42
N#define SYSCTL_DSLP_DIV_43      0x15000000  // Deep-sleep clock is osc /43
N#define SYSCTL_DSLP_DIV_44      0x15800000  // Deep-sleep clock is osc /44
N#define SYSCTL_DSLP_DIV_45      0x16000000  // Deep-sleep clock is osc /45
N#define SYSCTL_DSLP_DIV_46      0x16800000  // Deep-sleep clock is osc /46
N#define SYSCTL_DSLP_DIV_47      0x17000000  // Deep-sleep clock is osc /47
N#define SYSCTL_DSLP_DIV_48      0x17800000  // Deep-sleep clock is osc /48
N#define SYSCTL_DSLP_DIV_49      0x18000000  // Deep-sleep clock is osc /49
N#define SYSCTL_DSLP_DIV_50      0x18800000  // Deep-sleep clock is osc /50
N#define SYSCTL_DSLP_DIV_51      0x19000000  // Deep-sleep clock is osc /51
N#define SYSCTL_DSLP_DIV_52      0x19800000  // Deep-sleep clock is osc /52
N#define SYSCTL_DSLP_DIV_53      0x1A000000  // Deep-sleep clock is osc /53
N#define SYSCTL_DSLP_DIV_54      0x1A800000  // Deep-sleep clock is osc /54
N#define SYSCTL_DSLP_DIV_55      0x1B000000  // Deep-sleep clock is osc /55
N#define SYSCTL_DSLP_DIV_56      0x1B800000  // Deep-sleep clock is osc /56
N#define SYSCTL_DSLP_DIV_57      0x1C000000  // Deep-sleep clock is osc /57
N#define SYSCTL_DSLP_DIV_58      0x1C800000  // Deep-sleep clock is osc /58
N#define SYSCTL_DSLP_DIV_59      0x1D000000  // Deep-sleep clock is osc /59
N#define SYSCTL_DSLP_DIV_60      0x1D800000  // Deep-sleep clock is osc /60
N#define SYSCTL_DSLP_DIV_61      0x1E000000  // Deep-sleep clock is osc /61
N#define SYSCTL_DSLP_DIV_62      0x1E800000  // Deep-sleep clock is osc /62
N#define SYSCTL_DSLP_DIV_63      0x1F000000  // Deep-sleep clock is osc /63
N#define SYSCTL_DSLP_DIV_64      0x1F800000  // Deep-sleep clock is osc /64
N#define SYSCTL_DSLP_OSC_MAIN    0x00000000  // Osc source is main osc
N#define SYSCTL_DSLP_OSC_INT     0x00000010  // Osc source is int. osc
N#define SYSCTL_DSLP_OSC_INT30   0x00000030  // Osc source is int. 30 KHz
N#define SYSCTL_DSLP_OSC_EXT32   0x00000070  // Osc source is ext. 32 KHz
N#define SYSCTL_DSLP_PIOSC_PD    0x00000002  // Power down PIOSC in deep-sleep
N#define SYSCTL_DSLP_MOSC_PD     0x40000000  // Power down MOSC in deep-sleep
N
N//*****************************************************************************
N//
N// The following are values that can be passed to the SysCtlPIOSCCalibrate()
N// API as the ui32Type parameter.
N//
N//*****************************************************************************
N#define SYSCTL_PIOSC_CAL_AUTO   0x00000200  // Automatic calibration
N#define SYSCTL_PIOSC_CAL_FACT   0x00000100  // Factory calibration
N#define SYSCTL_PIOSC_CAL_USER   0x80000100  // User-supplied calibration
N
N//*****************************************************************************
N//
N// The following are values that can be passed to the SysCtlMOSCConfigSet() API
N// as the ui32Config parameter.
N//
N//*****************************************************************************
N#define SYSCTL_MOSC_VALIDATE    0x00000001  // Enable MOSC validation
N#define SYSCTL_MOSC_INTERRUPT   0x00000002  // Generate interrupt on MOSC fail
N#define SYSCTL_MOSC_NO_XTAL     0x00000004  // No crystal is attached to MOSC
N#define SYSCTL_MOSC_PWR_DIS     0x00000008  // Power down the MOSC.
N#define SYSCTL_MOSC_LOWFREQ     0x00000000  // MOSC is less than 10MHz
N#define SYSCTL_MOSC_HIGHFREQ    0x00000010  // MOSC is greater than 10MHz
N#define SYSCTL_MOSC_SESRC       0x00000020  // Singled ended oscillator source.
N
N//*****************************************************************************
N//
N// Defines for the SysCtlResetBehaviorSet() and SysCtlResetBehaviorGet() APIs.
N//
N//*****************************************************************************
N#define SYSCTL_ONRST_WDOG0_POR  0x00000030
N#define SYSCTL_ONRST_WDOG0_SYS  0x00000020
N#define SYSCTL_ONRST_WDOG1_POR  0x000000C0
N#define SYSCTL_ONRST_WDOG1_SYS  0x00000080
N#define SYSCTL_ONRST_BOR_POR    0x0000000C
N#define SYSCTL_ONRST_BOR_SYS    0x00000008
N#define SYSCTL_ONRST_EXT_POR    0x00000003
N#define SYSCTL_ONRST_EXT_SYS    0x00000002
N
N//*****************************************************************************
N//
N// The valid settings for the ui32Config parameter of the
N// SysCtlLPCLowPowerConfigSet() function.
N//
N//*****************************************************************************
N#define SYSCTL_LPCLPWR_SRAM_OFF                                               \
N                                0x00000000
X#define SYSCTL_LPCLPWR_SRAM_OFF                                                                               0x00000000
N#define SYSCTL_LPCLPWR_SRAM_RETENTION                                         \
N                                0x00000001
X#define SYSCTL_LPCLPWR_SRAM_RETENTION                                                                         0x00000001
N#define SYSCTL_LPCLPWR_SRAM_ON  0x00000003
N
N//*****************************************************************************
N//
N// The return values from the SysCtlLPCLowPowerStatusGet() function.
N//
N//*****************************************************************************
N#define SYSCTL_LPCLPWRS_PD_OFF  0x00000000
N#define SYSCTL_LPCLPWRS_SRAM_OFF                                              \
N                                0x00000033
X#define SYSCTL_LPCLPWRS_SRAM_OFF                                                                              0x00000033
N#define SYSCTL_LPCLPWRS_SRAM_RETENTION                                        \
N                                0x00000037
X#define SYSCTL_LPCLPWRS_SRAM_RETENTION                                                                        0x00000037
N#define SYSCTL_LPCLPWRS_SRAM_ON 0x0000003F
N
N//*****************************************************************************
N//
N// Values used with the SysCtlVoltageEventConfig() API.
N//
N//*****************************************************************************
N#define SYSCTL_VEVENT_VDDCBO_NONE                                             \
N                                0x00000000
X#define SYSCTL_VEVENT_VDDCBO_NONE                                                                             0x00000000
N#define SYSCTL_VEVENT_VDDCBO_INT                                              \
N                                0x00001000
X#define SYSCTL_VEVENT_VDDCBO_INT                                                                              0x00001000
N#define SYSCTL_VEVENT_VDDCBO_NMI                                              \
N                                0x00002000
X#define SYSCTL_VEVENT_VDDCBO_NMI                                                                              0x00002000
N#define SYSCTL_VEVENT_VDDCBO_RST                                              \
N                                0x00003000
X#define SYSCTL_VEVENT_VDDCBO_RST                                                                              0x00003000
N#define SYSCTL_VEVENT_VDDABO_NONE                                             \
N                                0x00000000
X#define SYSCTL_VEVENT_VDDABO_NONE                                                                             0x00000000
N#define SYSCTL_VEVENT_VDDABO_INT                                              \
N                                0x00000100
X#define SYSCTL_VEVENT_VDDABO_INT                                                                              0x00000100
N#define SYSCTL_VEVENT_VDDABO_NMI                                              \
N                                0x00000200
X#define SYSCTL_VEVENT_VDDABO_NMI                                                                              0x00000200
N#define SYSCTL_VEVENT_VDDABO_RST                                              \
N                                0x00000300
X#define SYSCTL_VEVENT_VDDABO_RST                                                                              0x00000300
N#define SYSCTL_VEVENT_VDDBO_NONE                                              \
N                                0x00000000
X#define SYSCTL_VEVENT_VDDBO_NONE                                                                              0x00000000
N#define SYSCTL_VEVENT_VDDBO_INT 0x00000001
N#define SYSCTL_VEVENT_VDDBO_NMI 0x00000002
N#define SYSCTL_VEVENT_VDDBO_RST 0x00000003
N
N//*****************************************************************************
N//
N// Values used with the SysCtlVoltageEventStatus() and
N// SysCtlVoltageEventClear() APIs.
N//
N//*****************************************************************************
N#define SYSCTL_VESTAT_VDDBOR    0x00000040
N#define SYSCTL_VESTAT_VDDABOR   0x00000010
N#define SYSCTL_VESTAT_VDDCBOR   0x00000001
N
N//*****************************************************************************
N//
N// Values used with the SysCtlNMIStatus() API.
N//
N//*****************************************************************************
N#define SYSCTL_NMI_MOSCFAIL     0x00010000
N#define SYSCTL_NMI_TAMPER       0x00000200
N#define SYSCTL_NMI_WDT1         0x00000020
N#define SYSCTL_NMI_WDT0         0x00000008
N#define SYSCTL_NMI_POWER        0x00000004
N#define SYSCTL_NMI_EXTERNAL     0x00000001
N
N//*****************************************************************************
N//
N// The defines for the SysCtlClockOutConfig() API.
N//
N//*****************************************************************************
N#define SYSCTL_CLKOUT_EN        0x80000000
N#define SYSCTL_CLKOUT_DIS       0x00000000
N#define SYSCTL_CLKOUT_SYSCLK    0x00000000
N#define SYSCTL_CLKOUT_PIOSC     0x00010000
N#define SYSCTL_CLKOUT_MOSC      0x00020000
N
N//*****************************************************************************
N//
N// The following defines are used with the SysCtlAltClkConfig() function.
N//
N//*****************************************************************************
N#define SYSCTL_ALTCLK_PIOSC     0x00000000
N#define SYSCTL_ALTCLK_PIOSC48   0x00000001
N#define SYSCTL_ALTCLK_LFIOSC    0x00000002
N#define SYSCTL_ALTCLK_HIB       0x00000004
N
N//*****************************************************************************
N//
N// Prototypes for the APIs.
N//
N//*****************************************************************************
Nextern uint32_t SysCtlSRAMSizeGet(void);
Nextern uint32_t SysCtlFlashSizeGet(void);
Nextern uint32_t SysCtlFlashSectorSizeGet(void);
Nextern bool SysCtlPeripheralPresent(uint32_t ui32Peripheral);
Xextern _Bool SysCtlPeripheralPresent(uint32_t ui32Peripheral);
Nextern bool SysCtlPeripheralReady(uint32_t ui32Peripheral);
Xextern _Bool SysCtlPeripheralReady(uint32_t ui32Peripheral);
Nextern void SysCtlPeripheralPowerOn(uint32_t ui32Peripheral);
Nextern void SysCtlPeripheralPowerOff(uint32_t ui32Peripheral);
Nextern void SysCtlPeripheralReset(uint32_t ui32Peripheral);
Nextern void SysCtlPeripheralEnable(uint32_t ui32Peripheral);
Nextern void SysCtlPeripheralDisable(uint32_t ui32Peripheral);
Nextern void SysCtlPeripheralSleepEnable(uint32_t ui32Peripheral);
Nextern void SysCtlPeripheralSleepDisable(uint32_t ui32Peripheral);
Nextern void SysCtlPeripheralDeepSleepEnable(uint32_t ui32Peripheral);
Nextern void SysCtlPeripheralDeepSleepDisable(uint32_t ui32Peripheral);
Nextern void SysCtlPeripheralClockGating(bool bEnable);
Xextern void SysCtlPeripheralClockGating(_Bool bEnable);
Nextern void SysCtlIntRegister(void (*pfnHandler)(void));
Nextern void SysCtlIntUnregister(void);
Nextern void SysCtlIntEnable(uint32_t ui32Ints);
Nextern void SysCtlIntDisable(uint32_t ui32Ints);
Nextern void SysCtlIntClear(uint32_t ui32Ints);
Nextern uint32_t SysCtlIntStatus(bool bMasked);
Xextern uint32_t SysCtlIntStatus(_Bool bMasked);
Nextern void SysCtlLDOSleepSet(uint32_t ui32Voltage);
Nextern uint32_t SysCtlLDOSleepGet(void);
Nextern void SysCtlLDODeepSleepSet(uint32_t ui32Voltage);
Nextern uint32_t SysCtlLDODeepSleepGet(void);
Nextern void SysCtlSleepPowerSet(uint32_t ui32Config);
Nextern void SysCtlDeepSleepPowerSet(uint32_t ui32Config);
Nextern void SysCtlLDOConfigSet(uint32_t ui32Config);
Nextern void SysCtlReset(void);
Nextern void SysCtlSleep(void);
Nextern void SysCtlDeepSleep(void);
Nextern uint32_t SysCtlResetCauseGet(void);
Nextern void SysCtlResetCauseClear(uint32_t ui32Causes);
Nextern void SysCtlBrownOutConfigSet(uint32_t ui32Config,
N                                    uint32_t ui32Delay);
Nextern void SysCtlDelay(uint32_t ui32Count);
Nextern void SysCtlMOSCConfigSet(uint32_t ui32Config);
Nextern uint32_t SysCtlPIOSCCalibrate(uint32_t ui32Type);
Nextern void SysCtlClockSet(uint32_t ui32Config);
Nextern uint32_t SysCtlClockGet(void);
Nextern void SysCtlDeepSleepClockSet(uint32_t ui32Config);
Nextern void SysCtlDeepSleepClockConfigSet(uint32_t ui32Div,
N                                          uint32_t ui32Config);
Nextern void SysCtlPWMClockSet(uint32_t ui32Config);
Nextern uint32_t SysCtlPWMClockGet(void);
Nextern void SysCtlADCSpeedSet(uint32_t ui32Speed);
Nextern uint32_t SysCtlADCSpeedGet(void);
Nextern void SysCtlIOSCVerificationSet(bool bEnable);
Xextern void SysCtlIOSCVerificationSet(_Bool bEnable);
Nextern void SysCtlMOSCVerificationSet(bool bEnable);
Xextern void SysCtlMOSCVerificationSet(_Bool bEnable);
Nextern void SysCtlPLLVerificationSet(bool bEnable);
Xextern void SysCtlPLLVerificationSet(_Bool bEnable);
Nextern void SysCtlClkVerificationClear(void);
Nextern void SysCtlGPIOAHBEnable(uint32_t ui32GPIOPeripheral);
Nextern void SysCtlGPIOAHBDisable(uint32_t ui32GPIOPeripheral);
Nextern void SysCtlUSBPLLEnable(void);
Nextern void SysCtlUSBPLLDisable(void);
Nextern uint32_t SysCtlClockFreqSet(uint32_t ui32Config,
N                                   uint32_t ui32SysClock);
Nextern void SysCtlLPCLowPowerConfigSet(uint32_t ui32Config);
Nextern uint32_t SysCtlLPCLowPowerStatusGet(void);
Nextern void SysCtlResetBehaviorSet(uint32_t ui32Behavior);
Nextern uint32_t SysCtlResetBehaviorGet(void);
Nextern void SysCtlClockOutConfig(uint32_t ui32Config, uint32_t ui32Div);
Nextern void SysCtlAltClkConfig(uint32_t ui32Config);
Nextern uint32_t SysCtlNMIStatus(void);
Nextern void SysCtlNMIClear(uint32_t ui32Status);
Nextern void SysCtlVoltageEventConfig(uint32_t ui32Config);
Nextern uint32_t SysCtlVoltageEventStatus(void);
Nextern void SysCtlVoltageEventClear(uint32_t ui32Status);
N
N//*****************************************************************************
N//
N// Mark the end of the C bindings section for C++ compilers.
N//
N//*****************************************************************************
N#ifdef __cplusplus
S}
N#endif
N
N#endif // __DRIVERLIB_SYSCTL_H__
L 31 "web\enet_lwip.c" 2
N#include "driverlib/systick.h"
L 1 "..\MCU\driverlib/systick.h" 1
N//*****************************************************************************
N//
N// systick.h - Prototypes for the SysTick driver.
N//
N// Copyright (c) 2005-2013 Texas Instruments Incorporated.  All rights reserved.
N// Software License Agreement
N// 
N//   Redistribution and use in source and binary forms, with or without
N//   modification, are permitted provided that the following conditions
N//   are met:
N// 
N//   Redistributions of source code must retain the above copyright
N//   notice, this list of conditions and the following disclaimer.
N// 
N//   Redistributions in binary form must reproduce the above copyright
N//   notice, this list of conditions and the following disclaimer in the
N//   documentation and/or other materials provided with the  
N//   distribution.
N// 
N//   Neither the name of Texas Instruments Incorporated nor the names of
N//   its contributors may be used to endorse or promote products derived
N//   from this software without specific prior written permission.
N// 
N// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
N// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
N// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
N// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
N// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
N// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
N// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
N// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
N// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
N// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
N// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
N// 
N// This is part of revision 2.0.1.11577 of the Tiva Peripheral Driver Library.
N//
N//*****************************************************************************
N
N#ifndef __DRIVERLIB_SYSTICK_H__
N#define __DRIVERLIB_SYSTICK_H__
N
N//*****************************************************************************
N//
N// If building with a C++ compiler, make all of the definitions in this header
N// have a C binding.
N//
N//*****************************************************************************
N#ifdef __cplusplus
Sextern "C"
S{
N#endif
N
N//*****************************************************************************
N//
N// Prototypes for the APIs.
N//
N//*****************************************************************************
Nextern void SysTickEnable(void);
Nextern void SysTickDisable(void);
Nextern void SysTickIntRegister(void (*pfnHandler)(void));
Nextern void SysTickIntUnregister(void);
Nextern void SysTickIntEnable(void);
Nextern void SysTickIntDisable(void);
Nextern void SysTickPeriodSet(uint32_t ui32Period);
Nextern uint32_t SysTickPeriodGet(void);
Nextern uint32_t SysTickValueGet(void);
N
N//*****************************************************************************
N//
N// Mark the end of the C bindings section for C++ compilers.
N//
N//*****************************************************************************
N#ifdef __cplusplus
S}
N#endif
N
N#endif // __DRIVERLIB_SYSTICK_H__
L 32 "web\enet_lwip.c" 2
C "web\enet_lwip.c" 32 25 cannot open source input file "grlib/grlib.h": No such file or directory
N#include "grlib/grlib.h"
