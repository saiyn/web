; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\build\bsp.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\bsp.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I.\FreeRTOS\include -I.\inc -I.\startup -I.\driverlib -I.\Application -I.\FreeRTOS\portable -I.\Task -I.\Driver -I.\web -I.\third_party\lwip-1.4.1\src\include -I.\third_party\fatfs -I.\third_party\lwip-1.4.1\apps\httpserver_raw -I.\third_party\lwip-1.4.1\ports\tiva-tm4c129\include -I.\third_party\lwip-1.4.1\ports\tiva-tm4c129\include\arch -I.\third_party\lwip-1.4.1\src\include\ipv4 -I..\MCU -I.\third_party\lwip-1.4.1\apps -I.\third_party -I.\Upnp -I.\Dsp -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\TI\TM4C129 -Drvmdk -DPART_TM4C129XNCZAD -DRTOS_FREERTOS -DTARGET_IS_SNOWFLAKE_RA0 -DUSE_LWIP -DTM4C129ENCPDT --omf_browse=.\build\bsp.crf startup\bsp.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  GPIOPinInputPu PROC
;;;296    
;;;297    void GPIOPinInputPu(UINT32 ulPort, UINT8 ucPins)
000000  b570              PUSH     {r4-r6,lr}
;;;298    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;299    	GPIOPinTypeGPIOInput(ulPort, ucPins);
000006  4629              MOV      r1,r5
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;300    	HWREG(ulPort + GPIO_O_PUR) |= ucPins;
00000e  f44f60a2          MOV      r0,#0x510
000012  5900              LDR      r0,[r0,r4]
000014  4328              ORRS     r0,r0,r5
000016  f44f61a2          MOV      r1,#0x510
00001a  5108              STR      r0,[r1,r4]
;;;301    }
00001c  bd70              POP      {r4-r6,pc}
;;;302    
                          ENDP

                  bsp_gpio_init PROC
;;;7      
;;;8      void bsp_gpio_init(void)
00001e  b510              PUSH     {r4,lr}
;;;9      {
;;;10     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);
000020  48fe              LDR      r0,|L1.1052|
000022  f7fffffe          BL       SysCtlPeripheralEnable
;;;11     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOB);
000026  48fd              LDR      r0,|L1.1052|
000028  1c40              ADDS     r0,r0,#1
00002a  f7fffffe          BL       SysCtlPeripheralEnable
;;;12     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOC);
00002e  48fb              LDR      r0,|L1.1052|
000030  1c80              ADDS     r0,r0,#2
000032  f7fffffe          BL       SysCtlPeripheralEnable
;;;13     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOD);
000036  48f9              LDR      r0,|L1.1052|
000038  1cc0              ADDS     r0,r0,#3
00003a  f7fffffe          BL       SysCtlPeripheralEnable
;;;14     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOE);
00003e  48f7              LDR      r0,|L1.1052|
000040  1d00              ADDS     r0,r0,#4
000042  f7fffffe          BL       SysCtlPeripheralEnable
;;;15     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOF);
000046  48f5              LDR      r0,|L1.1052|
000048  1d40              ADDS     r0,r0,#5
00004a  f7fffffe          BL       SysCtlPeripheralEnable
;;;16     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOG);
00004e  48f3              LDR      r0,|L1.1052|
000050  1d80              ADDS     r0,r0,#6
000052  f7fffffe          BL       SysCtlPeripheralEnable
;;;17     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOH);
000056  48f1              LDR      r0,|L1.1052|
000058  1dc0              ADDS     r0,r0,#7
00005a  f7fffffe          BL       SysCtlPeripheralEnable
;;;18     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOJ);
00005e  48ef              LDR      r0,|L1.1052|
000060  3008              ADDS     r0,r0,#8
000062  f7fffffe          BL       SysCtlPeripheralEnable
;;;19     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOK);
000066  48ed              LDR      r0,|L1.1052|
000068  3009              ADDS     r0,r0,#9
00006a  f7fffffe          BL       SysCtlPeripheralEnable
;;;20     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOL);
00006e  48eb              LDR      r0,|L1.1052|
000070  300a              ADDS     r0,r0,#0xa
000072  f7fffffe          BL       SysCtlPeripheralEnable
;;;21     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOM);
000076  48e9              LDR      r0,|L1.1052|
000078  300b              ADDS     r0,r0,#0xb
00007a  f7fffffe          BL       SysCtlPeripheralEnable
;;;22     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPION);
00007e  48e7              LDR      r0,|L1.1052|
000080  300c              ADDS     r0,r0,#0xc
000082  f7fffffe          BL       SysCtlPeripheralEnable
;;;23     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOP);
000086  48e5              LDR      r0,|L1.1052|
000088  300d              ADDS     r0,r0,#0xd
00008a  f7fffffe          BL       SysCtlPeripheralEnable
;;;24     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOQ);
00008e  48e3              LDR      r0,|L1.1052|
000090  300e              ADDS     r0,r0,#0xe
000092  f7fffffe          BL       SysCtlPeripheralEnable
;;;25     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOR);
000096  48e1              LDR      r0,|L1.1052|
000098  300f              ADDS     r0,r0,#0xf
00009a  f7fffffe          BL       SysCtlPeripheralEnable
;;;26     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOS);
00009e  48df              LDR      r0,|L1.1052|
0000a0  3010              ADDS     r0,r0,#0x10
0000a2  f7fffffe          BL       SysCtlPeripheralEnable
;;;27     	SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOT);
0000a6  48dd              LDR      r0,|L1.1052|
0000a8  3011              ADDS     r0,r0,#0x11
0000aa  f7fffffe          BL       SysCtlPeripheralEnable
;;;28     	
;;;29     	GPIO_PORTF_LOCK_R = 0x4C4F434B;
0000ae  48dc              LDR      r0,|L1.1056|
0000b0  49dc              LDR      r1,|L1.1060|
0000b2  6008              STR      r0,[r1,#0]
;;;30     	GPIO_PORTD_LOCK_R = 0x4C4F434B;
0000b4  49dc              LDR      r1,|L1.1064|
0000b6  6008              STR      r0,[r1,#0]
;;;31     
;;;32     	GPIO_PORTF_CR_R = 0x1;
0000b8  2001              MOVS     r0,#1
0000ba  49da              LDR      r1,|L1.1060|
0000bc  1d09              ADDS     r1,r1,#4
0000be  6008              STR      r0,[r1,#0]
;;;33     	GPIO_PORTD_CR_R = (1<<7);
0000c0  2080              MOVS     r0,#0x80
0000c2  49d9              LDR      r1,|L1.1064|
0000c4  1d09              ADDS     r1,r1,#4
0000c6  6008              STR      r0,[r1,#0]
;;;34     	
;;;35     	/*keyboard realated gpio init*/
;;;36     	GPIOPinTypeGPIOInput(POWER_KEY_PORT, POWER_KEY_PIN);
0000c8  2104              MOVS     r1,#4
0000ca  48d8              LDR      r0,|L1.1068|
0000cc  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;37     	GPIOIntTypeSet(POWER_KEY_PORT, POWER_KEY_PIN, GPIO_RISING_EDGE);
0000d0  2204              MOVS     r2,#4
0000d2  4611              MOV      r1,r2
0000d4  48d5              LDR      r0,|L1.1068|
0000d6  f7fffffe          BL       GPIOIntTypeSet
;;;38     	
;;;39     	
;;;40     	GPIOPinTypeGPIOInput(ENTER_KEY_PORT, ENTER_KEY_PIN);
0000da  2102              MOVS     r1,#2
0000dc  48d3              LDR      r0,|L1.1068|
0000de  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;41     	GPIOPinTypeGPIOInput(BACK_KEY_PORT, BACK_KEY_PIN);
0000e2  2101              MOVS     r1,#1
0000e4  48d1              LDR      r0,|L1.1068|
0000e6  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;42     	GPIOPinTypeGPIOInput(LEFT_KEY_PORT, LEFT_KEY_PIN);
0000ea  2101              MOVS     r1,#1
0000ec  48d0              LDR      r0,|L1.1072|
0000ee  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;43     	GPIOPinTypeGPIOInput(RIGHT_KEY_PORT, RIGHT_KEY_PIN);
0000f2  2102              MOVS     r1,#2
0000f4  48ce              LDR      r0,|L1.1072|
0000f6  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;44     	GPIOPinTypeGPIOInput(UP_KEY_PORT, UP_KEY_PIN);
0000fa  2104              MOVS     r1,#4
0000fc  48cc              LDR      r0,|L1.1072|
0000fe  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;45     	GPIOPinTypeGPIOInput(DOWN_KEY_PORT, DOWN_KEY_PIN);
000102  2108              MOVS     r1,#8
000104  48ca              LDR      r0,|L1.1072|
000106  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;46     	
;;;47     	/*LCD realated gpio init*/
;;;48     	GPIOPinTypeGPIOOutput(LCD_RW_PORT, LCD_RW_PIN);
00010a  2101              MOVS     r1,#1
00010c  48c9              LDR      r0,|L1.1076|
00010e  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;49     	GPIOPinTypeGPIOOutput(LCD_RS_PORT, LCD_RS_PIN);
000112  2102              MOVS     r1,#2
000114  48c7              LDR      r0,|L1.1076|
000116  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;50     	GPIOPinTypeGPIOOutput(LCD_EN_PORT, LCD_EN_PIN);
00011a  2108              MOVS     r1,#8
00011c  48c6              LDR      r0,|L1.1080|
00011e  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;51     	GPIOPinTypeGPIOOutput(LCD_DB4_PORT, LCD_DB4_PIN);
000122  2104              MOVS     r1,#4
000124  48c4              LDR      r0,|L1.1080|
000126  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;52     	GPIOPinTypeGPIOOutput(LCD_DB5_PORT, LCD_DB5_PIN);
00012a  2101              MOVS     r1,#1
00012c  48c2              LDR      r0,|L1.1080|
00012e  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;53     	GPIOPinTypeGPIOOutput(LCD_DB6_PORT, LCD_DB6_PIN);
000132  2180              MOVS     r1,#0x80
000134  48c0              LDR      r0,|L1.1080|
000136  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;54     	GPIOPinTypeGPIOOutput(LCD_DB7_PORT, LCD_DB7_PIN);
00013a  2120              MOVS     r1,#0x20
00013c  48be              LDR      r0,|L1.1080|
00013e  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;55     	
;;;56     	/*LED realated gpio init*/
;;;57     	GPIOPinTypeGPIOOutput(BLUE_LED_PORT, BLUE_LED_PIN);
000142  2180              MOVS     r1,#0x80
000144  48bd              LDR      r0,|L1.1084|
000146  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;58     	GPIOPinTypeGPIOOutput(RED_LED_PORT, RED_LED_PIN);
00014a  2140              MOVS     r1,#0x40
00014c  48bb              LDR      r0,|L1.1084|
00014e  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;59     	RLED_SET(1);
000152  bf00              NOP      
000154  bf00              NOP      
000156  2280              MOVS     r2,#0x80
000158  4611              MOV      r1,r2
00015a  48b8              LDR      r0,|L1.1084|
00015c  f7fffffe          BL       GPIOPinWrite
000160  bf00              NOP      
000162  bf00              NOP      
000164  2200              MOVS     r2,#0
000166  2140              MOVS     r1,#0x40
000168  48b4              LDR      r0,|L1.1084|
00016a  f7fffffe          BL       GPIOPinWrite
00016e  bf00              NOP      
000170  bf00              NOP      
;;;60     	
;;;61     	/*power management gpio init*/
;;;62     	GPIOPinTypeGPIOOutput(DC5V_EN_PORT, DC5V_EN_PIN);
000172  2104              MOVS     r1,#4
000174  48b2              LDR      r0,|L1.1088|
000176  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;63     	GPIOPinTypeGPIOOutput(AC_STANDBY_PORT, AC_STANDBY_PIN);
00017a  2102              MOVS     r1,#2
00017c  48b0              LDR      r0,|L1.1088|
00017e  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;64     	DC5V_OFF();
000182  bf00              NOP      
000184  2200              MOVS     r2,#0
000186  2104              MOVS     r1,#4
000188  48ad              LDR      r0,|L1.1088|
00018a  f7fffffe          BL       GPIOPinWrite
00018e  bf00              NOP      
;;;65     	AC_STANDBY(0);
000190  bf00              NOP      
000192  2200              MOVS     r2,#0
000194  2102              MOVS     r1,#2
000196  48aa              LDR      r0,|L1.1088|
000198  f7fffffe          BL       GPIOPinWrite
00019c  bf00              NOP      
;;;66     	
;;;67     	/*eeprom releated gpio init*/
;;;68       GPIOPinTypeGPIOOutput(EPROM_SDA_PORT, EPROM_SDA_PIN);
00019e  2108              MOVS     r1,#8
0001a0  48a8              LDR      r0,|L1.1092|
0001a2  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;69     	GPIOPinTypeGPIOOutput(EPROM_SCL_PORT, EPROM_SCL_PIN);
0001a6  2104              MOVS     r1,#4
0001a8  48a6              LDR      r0,|L1.1092|
0001aa  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;70     	
;;;71     	/*IR related gpio init*/
;;;72     	GPIOPinInputPu(FRONT_IR_PORT, FRONT_IR_PIN);
0001ae  2104              MOVS     r1,#4
0001b0  48a0              LDR      r0,|L1.1076|
0001b2  f7fffffe          BL       GPIOPinInputPu
;;;73     	GPIOIntTypeSet(FRONT_IR_PORT, FRONT_IR_PIN, GPIO_BOTH_EDGES);
0001b6  2201              MOVS     r2,#1
0001b8  2104              MOVS     r1,#4
0001ba  489e              LDR      r0,|L1.1076|
0001bc  f7fffffe          BL       GPIOIntTypeSet
;;;74     	IntEnable(FRONT_IR_IRQ);
0001c0  2066              MOVS     r0,#0x66
0001c2  f7fffffe          BL       IntEnable
;;;75     	GPIOIntEnable(FRONT_IR_PORT, FRONT_IR_PIN);
0001c6  2104              MOVS     r1,#4
0001c8  489a              LDR      r0,|L1.1076|
0001ca  f7fffffe          BL       GPIOIntEnable
;;;76     	
;;;77     	GPIOPinInputPu(IR_IN_PORT, IR_IN_PIN);
0001ce  2102              MOVS     r1,#2
0001d0  489d              LDR      r0,|L1.1096|
0001d2  f7fffffe          BL       GPIOPinInputPu
;;;78     	GPIOIntTypeSet(IR_IN_PORT, IR_IN_PIN, GPIO_BOTH_EDGES);
0001d6  2201              MOVS     r2,#1
0001d8  2102              MOVS     r1,#2
0001da  489b              LDR      r0,|L1.1096|
0001dc  f7fffffe          BL       GPIOIntTypeSet
;;;79     	IntEnable(IR_IN_IRQ);
0001e0  2030              MOVS     r0,#0x30
0001e2  f7fffffe          BL       IntEnable
;;;80     	GPIOIntEnable(IR_IN_PORT, IR_IN_PIN);
0001e6  2102              MOVS     r1,#2
0001e8  4897              LDR      r0,|L1.1096|
0001ea  f7fffffe          BL       GPIOIntEnable
;;;81     	
;;;82     	GPIOPinTypeGPIOOutput(IR_OUT_PORT, IR_OUT_PIN);
0001ee  2108              MOVS     r1,#8
0001f0  4895              LDR      r0,|L1.1096|
0001f2  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;83     	GPIOPinTypeGPIOInput(IR_IN_DETECT_PORT, IR_IN_DETECT_PIN);
0001f6  2108              MOVS     r1,#8
0001f8  4894              LDR      r0,|L1.1100|
0001fa  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;84     	
;;;85     	
;;;86     	
;;;87     	/*NJW1195 related gpio init*/
;;;88     	GPIOPinTypeGPIOOutput(NJW1195_DATA_PORT, NJW1195_DATA_PIN);
0001fe  2110              MOVS     r1,#0x10
000200  488a              LDR      r0,|L1.1068|
000202  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;89     	GPIOPinTypeGPIOOutput(NJW1195_CLK_PORT, NJW1195_CLK_PIN);
000206  2120              MOVS     r1,#0x20
000208  488e              LDR      r0,|L1.1092|
00020a  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;90     	GPIOPinTypeGPIOOutput(NJW1195_CS_PORT, NJW1195_CS_PIN);
00020e  2101              MOVS     r1,#1
000210  488b              LDR      r0,|L1.1088|
000212  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;91       GPIO_PIN_SET(NJW1195_CS_PORT, NJW1195_CS_PIN, 1);
000216  bf00              NOP      
000218  2201              MOVS     r2,#1
00021a  4611              MOV      r1,r2
00021c  4888              LDR      r0,|L1.1088|
00021e  f7fffffe          BL       GPIOPinWrite
000222  bf00              NOP      
;;;92     	
;;;93     	/*cs4251 related gpio init*/
;;;94     	GPIOPinTypeGPIOOutput(CS4251_MOSI_PORT, CS4251_MOSI_PIN);
000224  2110              MOVS     r1,#0x10
000226  4881              LDR      r0,|L1.1068|
000228  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;95     	GPIOPinTypeGPIOInput(CS4251_MISO_PORT, CS4251_MISO_PIN);
00022c  2110              MOVS     r1,#0x10
00022e  4888              LDR      r0,|L1.1104|
000230  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;96     	GPIOPinTypeGPIOOutput(CS4251_CLK_PORT, CS4251_CLK_PIN);
000234  2120              MOVS     r1,#0x20
000236  4883              LDR      r0,|L1.1092|
000238  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;97     	GPIOPinTypeGPIOOutput(CS4251_CS_PORT, CS4251_CS_PIN);
00023c  2108              MOVS     r1,#8
00023e  4884              LDR      r0,|L1.1104|
000240  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;98     	GPIOPinTypeGPIOOutput(CS4251_RST_PORT, CS4251_RST_PIN);
000244  2110              MOVS     r1,#0x10
000246  487b              LDR      r0,|L1.1076|
000248  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;99     	GPIO_PIN_SET(CS4251_CS_PORT, CS4251_CS_PIN, 1);
00024c  bf00              NOP      
00024e  2208              MOVS     r2,#8
000250  4611              MOV      r1,r2
000252  487f              LDR      r0,|L1.1104|
000254  f7fffffe          BL       GPIOPinWrite
000258  bf00              NOP      
;;;100    	GPIO_PIN_SET(CS4251_RST_PORT, CS4251_RST_PIN, 0);
00025a  bf00              NOP      
00025c  2200              MOVS     r2,#0
00025e  2110              MOVS     r1,#0x10
000260  4874              LDR      r0,|L1.1076|
000262  f7fffffe          BL       GPIOPinWrite
000266  bf00              NOP      
;;;101    	
;;;102    	/*CS48520 related gpio init*/
;;;103    	GPIOPinTypeGPIOOutput(CS48520_RST_PORT,CS48520_RST_PIN); 
000268  2102              MOVS     r1,#2
00026a  487a              LDR      r0,|L1.1108|
00026c  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;104      GPIOPinTypeGPIOInput(CS48520_BUSY_PORT,CS48520_BUSY_PIN); //Busy
000270  2101              MOVS     r1,#1
000272  4878              LDR      r0,|L1.1108|
000274  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;105      GPIOPinTypeGPIOInput(CS48520_IRQ_PORT, CS48520_IRQ_PIN);   //Irq
000278  2101              MOVS     r1,#1
00027a  4877              LDR      r0,|L1.1112|
00027c  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;106      GPIOPinTypeGPIOOutput(CS48520_CS_PORT, CS48520_CS_PIN);     //CS
000280  2110              MOVS     r1,#0x10
000282  4870              LDR      r0,|L1.1092|
000284  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;107    	GPIO_PIN_SET(CS48520_CS_PORT, CS48520_CS_PIN, 1);
000288  bf00              NOP      
00028a  2210              MOVS     r2,#0x10
00028c  4611              MOV      r1,r2
00028e  486d              LDR      r0,|L1.1092|
000290  f7fffffe          BL       GPIOPinWrite
000294  bf00              NOP      
;;;108    	GPIOPinTypeGPIOOutput(CS48520_MOSI_PORT, CS48520_MOSI_PIN);
000296  2110              MOVS     r1,#0x10
000298  4864              LDR      r0,|L1.1068|
00029a  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;109    	GPIOPinTypeGPIOInput(CS48520_MISO_PORT, CS48520_MISO_PIN);
00029e  2120              MOVS     r1,#0x20
0002a0  4862              LDR      r0,|L1.1068|
0002a2  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;110    	GPIOPinTypeGPIOOutput(CS48520_CLK_PORT, CS48520_CLK_PIN);
0002a6  2120              MOVS     r1,#0x20
0002a8  4866              LDR      r0,|L1.1092|
0002aa  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;111    	
;;;112    	/*Detect related gpio init*/
;;;113    	GPIOPinTypeGPIOInput(AUDIO_SENSE_PORT, AUDIO_SENSE_PIN);
0002ae  2180              MOVS     r1,#0x80
0002b0  485f              LDR      r0,|L1.1072|
0002b2  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;114    	GPIOPinTypeGPIOInput(TRIGGER_IN_PORT, TRIGGER_IN_PIN);
0002b6  2120              MOVS     r1,#0x20
0002b8  4867              LDR      r0,|L1.1112|
0002ba  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;115    	GPIOPinTypeGPIOInput(OVER_TEMP_PORT, OVER_TEMP_PIN);
0002be  2102              MOVS     r1,#2
0002c0  4863              LDR      r0,|L1.1104|
0002c2  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;116    	GPIOPinTypeGPIOInput(OVER_VOLTAGE_OR_SHORT_PORT, OVER_VOLTAGE_OR_SHORT_PIN);
0002c6  2101              MOVS     r1,#1
0002c8  4861              LDR      r0,|L1.1104|
0002ca  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;117    	GPIOPinTypeGPIOInput(OVER_CLIP_PORT, OVER_CLIP_PIN);
0002ce  2102              MOVS     r1,#2
0002d0  4862              LDR      r0,|L1.1116|
0002d2  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;118    	GPIOPinTypeGPIOInput(OVER_DC_ERROR_PORT, OVER_DC_ERROR_PIN);
0002d6  2110              MOVS     r1,#0x10
0002d8  4859              LDR      r0,|L1.1088|
0002da  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;119    	GPIOPinTypeGPIOInput(OVER_CURRENT_PORT, OVER_CURRENT_PIN);
0002de  2108              MOVS     r1,#8
0002e0  4857              LDR      r0,|L1.1088|
0002e2  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;120    	GPIOPinTypeGPIOInput(OVER_15V_PORT, OVER_15V_PIN);
0002e6  2110              MOVS     r1,#0x10
0002e8  485b              LDR      r0,|L1.1112|
0002ea  f7fffffe          BL       GPIOPinTypeGPIOInput
;;;121    	
;;;122    	/*AMP control related gpio*/
;;;123    	GPIOPinTypeGPIOOutput(AMP_EN_PORT, AMP_EN_PIN); 
0002ee  2101              MOVS     r1,#1
0002f0  485a              LDR      r0,|L1.1116|
0002f2  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;124    	GPIOPinTypeGPIOOutput(AMP_MUTE_PORT, AMP_MUTE_PIN); 
0002f6  2120              MOVS     r1,#0x20
0002f8  4851              LDR      r0,|L1.1088|
0002fa  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;125    	
;;;126    	/*pcm1804 gpio init*/
;;;127    	GPIOPinTypeGPIOOutput(PCM1804_RST_PORT, PCM1804_RST_PIN);
0002fe  2110              MOVS     r1,#0x10
000300  4852              LDR      r0,|L1.1100|
000302  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;128    //	GPIOPinTypeGPIOOutput(PCM1804_FS0_PORT, PCM1804_FS0_PIN);
;;;129    //	GPIOPinTypeGPIOOutput(PCM1804_FS1_PORT, PCM1804_FS1_PIN);
;;;130    //	GPIO_PIN_SET(PCM1804_FS0_PORT, PCM1804_FS0_PIN, 0);
;;;131    //	GPIO_PIN_SET(PCM1804_FS1_PORT, PCM1804_FS1_PIN, 0);
;;;132    	
;;;133    	/*lineout switch related gpio init*/
;;;134    	GPIOPinTypeGPIOOutput(RCA_OUT_S_PORT, RCA_OUT_S_PIN);
000306  2140              MOVS     r1,#0x40
000308  f04f2040          MOV      r0,#0x40004000
00030c  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;135    	GPIOPinTypeGPIOOutput(BAN_OUT_S_PORT, BAN_OUT_S_PIN);
000310  2180              MOVS     r1,#0x80
000312  f04f2040          MOV      r0,#0x40004000
000316  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;136    	
;;;137    	/*pop noise control gpio init*/
;;;138    	GPIOPinTypeGPIOOutput(RCA_OUT_MUTE_PORT, RCA_OUT_MUTE_PIN);
00031a  2104              MOVS     r1,#4
00031c  484b              LDR      r0,|L1.1100|
00031e  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;139    	GPIOPinTypeGPIOOutput(BAN_OUT_MUTE_PORT, BAN_OUT_MUTE_PIN);
000322  2102              MOVS     r1,#2
000324  4849              LDR      r0,|L1.1100|
000326  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;140    	GPIOPinTypeGPIOOutput(OUTPUT_MUTE_M_PORT, OUTPUT_MUTE_M_PIN);
00032a  2101              MOVS     r1,#1
00032c  484c              LDR      r0,|L1.1120|
00032e  f7fffffe          BL       GPIOPinTypeGPIOOutput
;;;141    	OUTPUT_M_MUTE_OFF();
000332  bf00              NOP      
000334  2201              MOVS     r2,#1
000336  4611              MOV      r1,r2
000338  4849              LDR      r0,|L1.1120|
00033a  f7fffffe          BL       GPIOPinWrite
00033e  bf00              NOP      
;;;142    	RCA_OUT_MUTE_ON();
000340  bf00              NOP      
000342  2200              MOVS     r2,#0
000344  2104              MOVS     r1,#4
000346  4841              LDR      r0,|L1.1100|
000348  f7fffffe          BL       GPIOPinWrite
00034c  bf00              NOP      
;;;143    	BAN_OUT_MUTE_ON();
00034e  bf00              NOP      
000350  2200              MOVS     r2,#0
000352  2102              MOVS     r1,#2
000354  483d              LDR      r0,|L1.1100|
000356  f7fffffe          BL       GPIOPinWrite
00035a  bf00              NOP      
;;;144    }
00035c  bd10              POP      {r4,pc}
;;;145    
                          ENDP

                  bsp_timer1_init PROC
;;;148    
;;;149    void bsp_timer1_init(void)
00035e  b510              PUSH     {r4,lr}
;;;150    {
;;;151    	/*timer1 100us*/ 
;;;152    	SysCtlPeripheralEnable(SYSCTL_PERIPH_TIMER1);
000360  4840              LDR      r0,|L1.1124|
000362  f7fffffe          BL       SysCtlPeripheralEnable
;;;153    	TimerConfigure(TIMER1_BASE, TIMER_CFG_PERIODIC);
000366  2122              MOVS     r1,#0x22
000368  483f              LDR      r0,|L1.1128|
00036a  f7fffffe          BL       TimerConfigure
;;;154    	TimerLoadSet(TIMER1_BASE, TIMER_A, gSysClock/10000);   
00036e  483f              LDR      r0,|L1.1132|
000370  6800              LDR      r0,[r0,#0]  ; gSysClock
000372  f2427110          MOV      r1,#0x2710
000376  fbb0f4f1          UDIV     r4,r0,r1
00037a  4622              MOV      r2,r4
00037c  21ff              MOVS     r1,#0xff
00037e  483a              LDR      r0,|L1.1128|
000380  f7fffffe          BL       TimerLoadSet
;;;155    
;;;156    	IntEnable(INT_TIMER1A);
000384  2025              MOVS     r0,#0x25
000386  f7fffffe          BL       IntEnable
;;;157    	
;;;158    	TimerIntEnable(TIMER1_BASE, TIMER_TIMA_TIMEOUT);
00038a  2101              MOVS     r1,#1
00038c  4836              LDR      r0,|L1.1128|
00038e  f7fffffe          BL       TimerIntEnable
;;;159    	
;;;160    	TimerEnable(TIMER1_BASE, TIMER_A);
000392  21ff              MOVS     r1,#0xff
000394  4834              LDR      r0,|L1.1128|
000396  f7fffffe          BL       TimerEnable
;;;161    	
;;;162    }
00039a  bd10              POP      {r4,pc}
;;;163    
                          ENDP

                  bsp_timer0_init PROC
;;;164    void bsp_timer0_init(void)
00039c  b510              PUSH     {r4,lr}
;;;165    {
;;;166    	SysCtlPeripheralEnable(SYSCTL_PERIPH_TIMER0);
00039e  4831              LDR      r0,|L1.1124|
0003a0  1e40              SUBS     r0,r0,#1
0003a2  f7fffffe          BL       SysCtlPeripheralEnable
;;;167    	TimerConfigure(TIMER0_BASE, TIMER_CFG_PERIODIC_UP);
0003a6  2132              MOVS     r1,#0x32
0003a8  4831              LDR      r0,|L1.1136|
0003aa  f7fffffe          BL       TimerConfigure
;;;168    	TimerLoadSet(TIMER0_BASE, TIMER_A, 0xffffffff);
0003ae  f04f32ff          MOV      r2,#0xffffffff
0003b2  21ff              MOVS     r1,#0xff
0003b4  482e              LDR      r0,|L1.1136|
0003b6  f7fffffe          BL       TimerLoadSet
;;;169    
;;;170    	TimerEnable(TIMER0_BASE, TIMER_A);
0003ba  21ff              MOVS     r1,#0xff
0003bc  482c              LDR      r0,|L1.1136|
0003be  f7fffffe          BL       TimerEnable
;;;171    }
0003c2  bd10              POP      {r4,pc}
;;;172    
                          ENDP

                  bsp_timer0_get_time PROC
;;;173    uint32 bsp_timer0_get_time(void)
0003c4  b510              PUSH     {r4,lr}
;;;174    {
;;;175    	  return TimerValueGet(TIMER0_BASE, TIMER_A)/TIME0_DIVISION;	
0003c6  21ff              MOVS     r1,#0xff
0003c8  4829              LDR      r0,|L1.1136|
0003ca  f7fffffe          BL       TimerValueGet
0003ce  f64261e0          MOV      r1,#0x2ee0
0003d2  fbb0f0f1          UDIV     r0,r0,r1
;;;176    }
0003d6  bd10              POP      {r4,pc}
;;;177    
                          ENDP

                  bsp_pwm0_init PROC
;;;178    void bsp_pwm0_init(void)
0003d8  b510              PUSH     {r4,lr}
;;;179    {
;;;180    	/*Enable device*/
;;;181      SysCtlPeripheralEnable(SYSCTL_PERIPH_PWM0);
0003da  4826              LDR      r0,|L1.1140|
0003dc  f7fffffe          BL       SysCtlPeripheralEnable
;;;182    	/*Set clock divider*/
;;;183      PWMClockSet(PWM0_BASE,PWM_SYSCLK_DIV_64);
0003e0  f2401105          MOV      r1,#0x105
0003e4  4824              LDR      r0,|L1.1144|
0003e6  f7fffffe          BL       PWMClockSet
;;;184    	/*Enable PWM pin*/
;;;185      GPIOPinConfigure(LCD_PWM_CHANNEL);
0003ea  4824              LDR      r0,|L1.1148|
0003ec  f7fffffe          BL       GPIOPinConfigure
;;;186      GPIOPinTypePWM(LCD_PWM_PORT, LCD_PWM_PIN);
0003f0  2101              MOVS     r1,#1
0003f2  4816              LDR      r0,|L1.1100|
0003f4  f7fffffe          BL       GPIOPinTypePWM
;;;187    	/*Configure PWM generator*/
;;;188      PWMGenConfigure(PWM0_BASE, PWM_GEN_0,(PWM_GEN_MODE_DOWN | PWM_GEN_MODE_NO_SYNC));
0003f8  2200              MOVS     r2,#0
0003fa  2140              MOVS     r1,#0x40
0003fc  481e              LDR      r0,|L1.1144|
0003fe  f7fffffe          BL       PWMGenConfigure
;;;189    	/*Set PWM timer period*/
;;;190      PWMGenPeriodSet(PWM0_BASE, PWM_GEN_0,gSysClock/10000);
000402  481a              LDR      r0,|L1.1132|
000404  6800              LDR      r0,[r0,#0]  ; gSysClock
000406  f2427110          MOV      r1,#0x2710
00040a  fbb0f4f1          UDIV     r4,r0,r1
00040e  4622              MOV      r2,r4
000410  2140              MOVS     r1,#0x40
000412  4819              LDR      r0,|L1.1144|
000414  f7fffffe          BL       PWMGenPeriodSet
;;;191    	/*Set width for PWM0*/
;;;192      PWMPulseWidthSet(PWM0_BASE, PWM_OUT_0, 50*PWMGenPeriodGet(PWM0_BASE,PWM_GEN_0)/100);
000418  2140              MOVS     r1,#0x40
00041a  e031              B        |L1.1152|
                  |L1.1052|
                          DCD      0xf0000800
                  |L1.1056|
                          DCD      0x4c4f434b
                  |L1.1060|
                          DCD      0x40025520
                  |L1.1064|
                          DCD      0x40007520
                  |L1.1068|
                          DCD      0x40024000
                  |L1.1072|
                          DCD      0x40061000
                  |L1.1076|
                          DCD      0x40066000
                  |L1.1080|
                          DCD      0x40007000
                  |L1.1084|
                          DCD      0x40006000
                  |L1.1088|
                          DCD      0x40064000
                  |L1.1092|
                          DCD      0x40005000
                  |L1.1096|
                          DCD      0x40027000
                  |L1.1100|
                          DCD      0x40025000
                  |L1.1104|
                          DCD      0x40065000
                  |L1.1108|
                          DCD      0x40063000
                  |L1.1112|
                          DCD      0x40062000
                  |L1.1116|
                          DCD      0x4003d000
                  |L1.1120|
                          DCD      0x40026000
                  |L1.1124|
                          DCD      0xf0000401
                  |L1.1128|
                          DCD      0x40031000
                  |L1.1132|
                          DCD      gSysClock
                  |L1.1136|
                          DCD      0x40030000
                  |L1.1140|
                          DCD      0xf0004000
                  |L1.1144|
                          DCD      0x40028000
                  |L1.1148|
                          DCD      0x00050006
                  |L1.1152|
000480  486d              LDR      r0,|L1.1592|
000482  f7fffffe          BL       PWMGenPeriodGet
000486  2132              MOVS     r1,#0x32
000488  4348              MULS     r0,r1,r0
00048a  2164              MOVS     r1,#0x64
00048c  fbb0f4f1          UDIV     r4,r0,r1
000490  4622              MOV      r2,r4
000492  2140              MOVS     r1,#0x40
000494  4868              LDR      r0,|L1.1592|
000496  f7fffffe          BL       PWMPulseWidthSet
;;;193    	/*Enable output*/
;;;194      PWMOutputState(PWM0_BASE, PWM_OUT_0_BIT, 0);
00049a  2200              MOVS     r2,#0
00049c  2101              MOVS     r1,#1
00049e  4866              LDR      r0,|L1.1592|
0004a0  f7fffffe          BL       PWMOutputState
;;;195      /*Enable Generator*/
;;;196      PWMGenEnable(PWM0_BASE, PWM_GEN_0);
0004a4  2140              MOVS     r1,#0x40
0004a6  4864              LDR      r0,|L1.1592|
0004a8  f7fffffe          BL       PWMGenEnable
;;;197    }
0004ac  bd10              POP      {r4,pc}
;;;198    
                          ENDP

                  bsp_pwm_for_sense_init PROC
;;;199    void bsp_pwm_for_sense_init(void)
0004ae  b510              PUSH     {r4,lr}
;;;200    {
;;;201      /*Enable device*/
;;;202      SysCtlPeripheralEnable(SYSCTL_PERIPH_PWM0);
0004b0  4862              LDR      r0,|L1.1596|
0004b2  f7fffffe          BL       SysCtlPeripheralEnable
;;;203      /*Set clock divider*/
;;;204      PWMClockSet(PWM0_BASE,PWM_SYSCLK_DIV_1);  
0004b6  2100              MOVS     r1,#0
0004b8  485f              LDR      r0,|L1.1592|
0004ba  f7fffffe          BL       PWMClockSet
;;;205      /*Enable PWM pin*/
;;;206      GPIOPinConfigure(GPIO_PK5_M0PWM7);
0004be  4860              LDR      r0,|L1.1600|
0004c0  f7fffffe          BL       GPIOPinConfigure
;;;207      GPIOPinTypePWM(SENSE_THRES_PORT, SENSE_THRES_PIN);
0004c4  2120              MOVS     r1,#0x20
0004c6  485f              LDR      r0,|L1.1604|
0004c8  f7fffffe          BL       GPIOPinTypePWM
;;;208      /*Configure PWM generator*/
;;;209      PWMGenConfigure(PWM0_BASE, PWM_GEN_3,(PWM_GEN_MODE_DOWN | PWM_GEN_MODE_NO_SYNC));
0004cc  2200              MOVS     r2,#0
0004ce  f44f7180          MOV      r1,#0x100
0004d2  4859              LDR      r0,|L1.1592|
0004d4  f7fffffe          BL       PWMGenConfigure
;;;210      /*Set PWM timer period*/
;;;211      PWMGenPeriodSet(PWM0_BASE, PWM_GEN_3,gSysClock/1000000);   
0004d8  485b              LDR      r0,|L1.1608|
0004da  6800              LDR      r0,[r0,#0]  ; gSysClock
0004dc  495b              LDR      r1,|L1.1612|
0004de  fbb0f4f1          UDIV     r4,r0,r1
0004e2  4622              MOV      r2,r4
0004e4  f44f7180          MOV      r1,#0x100
0004e8  4853              LDR      r0,|L1.1592|
0004ea  f7fffffe          BL       PWMGenPeriodSet
;;;212      /*Set width for PWM0*/
;;;213      PWMPulseWidthSet(PWM0_BASE, PWM_OUT_7, 1*PWMGenPeriodGet(PWM0_BASE,PWM_GEN_3)/5);
0004ee  f44f7180          MOV      r1,#0x100
0004f2  4851              LDR      r0,|L1.1592|
0004f4  f7fffffe          BL       PWMGenPeriodGet
0004f8  2105              MOVS     r1,#5
0004fa  fbb0f4f1          UDIV     r4,r0,r1
0004fe  4622              MOV      r2,r4
000500  f2401107          MOV      r1,#0x107
000504  484c              LDR      r0,|L1.1592|
000506  f7fffffe          BL       PWMPulseWidthSet
;;;214      /*ensable output*/
;;;215      PWMOutputState(PWM0_BASE, PWM_OUT_7_BIT, 1);
00050a  2201              MOVS     r2,#1
00050c  2180              MOVS     r1,#0x80
00050e  484a              LDR      r0,|L1.1592|
000510  f7fffffe          BL       PWMOutputState
;;;216      /*Enable Generator*/
;;;217      PWMGenEnable(PWM0_BASE, PWM_GEN_3);
000514  f44f7180          MOV      r1,#0x100
000518  4847              LDR      r0,|L1.1592|
00051a  f7fffffe          BL       PWMGenEnable
;;;218    	
;;;219    }
00051e  bd10              POP      {r4,pc}
;;;220    
                          ENDP

                  bsp_pwm_for_sense_set PROC
;;;221    void bsp_pwm_for_sense_set(uint16 x, uint16 y)
000520  b570              PUSH     {r4-r6,lr}
;;;222    {
000522  4604              MOV      r4,r0
000524  460d              MOV      r5,r1
;;;223    	 if(x <= y){
000526  42ac              CMP      r4,r5
000528  dc0d              BGT      |L1.1350|
;;;224    		 PWMPulseWidthSet(PWM0_BASE, PWM_OUT_7, x*PWMGenPeriodGet(PWM0_BASE,PWM_GEN_3)/y);
00052a  f44f7180          MOV      r1,#0x100
00052e  4842              LDR      r0,|L1.1592|
000530  f7fffffe          BL       PWMGenPeriodGet
000534  4360              MULS     r0,r4,r0
000536  fbb0f6f5          UDIV     r6,r0,r5
00053a  4632              MOV      r2,r6
00053c  f2401107          MOV      r1,#0x107
000540  483d              LDR      r0,|L1.1592|
000542  f7fffffe          BL       PWMPulseWidthSet
                  |L1.1350|
;;;225    	 }
;;;226    }
000546  bd70              POP      {r4-r6,pc}
;;;227    
                          ENDP

                  bsp_lcd_bright_control PROC
;;;229    
;;;230    void bsp_lcd_bright_control(uint8 duty)
000548  b570              PUSH     {r4-r6,lr}
;;;231    {
00054a  4604              MOV      r4,r0
;;;232    	 if(duty){
00054c  b194              CBZ      r4,|L1.1396|
;;;233    		  PWMOutputState(PWM0_BASE, PWM_OUT_0_BIT, 1);
00054e  2201              MOVS     r2,#1
000550  4611              MOV      r1,r2
000552  4839              LDR      r0,|L1.1592|
000554  f7fffffe          BL       PWMOutputState
;;;234    		  PWMPulseWidthSet(PWM0_BASE, PWM_OUT_0, duty*PWMGenPeriodGet(PWM0_BASE,PWM_GEN_0)/100);
000558  2140              MOVS     r1,#0x40
00055a  4837              LDR      r0,|L1.1592|
00055c  f7fffffe          BL       PWMGenPeriodGet
000560  4360              MULS     r0,r4,r0
000562  2164              MOVS     r1,#0x64
000564  fbb0f5f1          UDIV     r5,r0,r1
000568  462a              MOV      r2,r5
00056a  2140              MOVS     r1,#0x40
00056c  4832              LDR      r0,|L1.1592|
00056e  f7fffffe          BL       PWMPulseWidthSet
000572  e004              B        |L1.1406|
                  |L1.1396|
;;;235    	 }else{
;;;236    		  PWMOutputState(PWM0_BASE, PWM_OUT_0_BIT, 0);
000574  2200              MOVS     r2,#0
000576  2101              MOVS     r1,#1
000578  482f              LDR      r0,|L1.1592|
00057a  f7fffffe          BL       PWMOutputState
                  |L1.1406|
;;;237    	 }
;;;238    }
00057e  bd70              POP      {r4-r6,pc}
;;;239    
                          ENDP

                  Timer1IntHandler PROC
;;;242    
;;;243    void Timer1IntHandler(void)
000580  b510              PUSH     {r4,lr}
;;;244    {
;;;245    	static uint16 cnt = 0;
;;;246    	
;;;247    	TimerIntClear(TIMER1_BASE, TIMER_TIMA_TIMEOUT);
000582  2101              MOVS     r1,#1
000584  4832              LDR      r0,|L1.1616|
000586  f7fffffe          BL       TimerIntClear
;;;248    
;;;249      if(cnt++ == 500){
00058a  4832              LDR      r0,|L1.1620|
00058c  8801              LDRH     r1,[r0,#0]  ; cnt
00058e  8800              LDRH     r0,[r0,#0]  ; cnt
000590  1c40              ADDS     r0,r0,#1
000592  4a30              LDR      r2,|L1.1620|
000594  8010              STRH     r0,[r2,#0]
000596  f5b17ffa          CMP      r1,#0x1f4
00059a  d104              BNE      |L1.1446|
;;;250    		 KeyScanLoop();
00059c  f7fffffe          BL       KeyScanLoop
;;;251    		cnt = 0;
0005a0  2000              MOVS     r0,#0
0005a2  492c              LDR      r1,|L1.1620|
0005a4  8008              STRH     r0,[r1,#0]
                  |L1.1446|
;;;252    	}
;;;253    	
;;;254    	ir_timeout_check();
0005a6  f7fffffe          BL       ir_timeout_check
;;;255    }
0005aa  bd10              POP      {r4,pc}
;;;256    
                          ENDP

                  s_printf PROC
;;;257    
;;;258    void s_printf(const char *fmt, ...)
0005ac  b40f              PUSH     {r0-r3}
;;;259    {
0005ae  b530              PUSH     {r4,r5,lr}
0005b0  f5ad7d01          SUB      sp,sp,#0x204
;;;260    	    va_list ap;
;;;261    	    char buf[512] = {0};
0005b4  f44f7100          MOV      r1,#0x200
0005b8  4668              MOV      r0,sp
0005ba  f7fffffe          BL       __aeabi_memclr4
;;;262          size_t len;
;;;263          size_t index = 0;
0005be  2400              MOVS     r4,#0
;;;264    
;;;265          va_start(ap, fmt);
0005c0  a885              ADD      r0,sp,#0x214
0005c2  9080              STR      r0,[sp,#0x200]
;;;266    	    vsprintf(buf, fmt, ap);
0005c4  4668              MOV      r0,sp
0005c6  9a80              LDR      r2,[sp,#0x200]
0005c8  9984              LDR      r1,[sp,#0x210]
0005ca  f7fffffe          BL       vsprintf
;;;267          va_end(ap);
0005ce  2000              MOVS     r0,#0
0005d0  9080              STR      r0,[sp,#0x200]
;;;268    
;;;269          len = strlen(buf);
0005d2  4668              MOV      r0,sp
0005d4  f7fffffe          BL       strlen
0005d8  4605              MOV      r5,r0
;;;270          while(index < len){
0005da  e008              B        |L1.1518|
                  |L1.1500|
;;;271    				while(UARTCharPutNonBlocking(UART0_BASE, buf[index]) == false);
0005dc  bf00              NOP      
                  |L1.1502|
0005de  f81d1004          LDRB     r1,[sp,r4]
0005e2  481d              LDR      r0,|L1.1624|
0005e4  f7fffffe          BL       UARTCharPutNonBlocking
0005e8  2800              CMP      r0,#0
0005ea  d0f8              BEQ      |L1.1502|
;;;272    				index++;
0005ec  1c64              ADDS     r4,r4,#1
                  |L1.1518|
0005ee  42ac              CMP      r4,r5                 ;270
0005f0  d3f4              BCC      |L1.1500|
;;;273    			}
;;;274    }
0005f2  f50d7d01          ADD      sp,sp,#0x204
0005f6  bc30              POP      {r4,r5}
0005f8  f85dfb14          LDR      pc,[sp],#0x14
;;;275    
                          ENDP

                  GPIO_ReadSinglePin PROC
;;;276    UINT8 GPIO_ReadSinglePin(UINT32 ulPort, UINT8 ucPins)
0005fc  4602              MOV      r2,r0
;;;277    {
;;;278    	if ((HWREG(ulPort + (GPIO_O_DATA + (ucPins << 2)))) != 0)
0005fe  2000              MOVS     r0,#0
000600  eb000081          ADD      r0,r0,r1,LSL #2
000604  5810              LDR      r0,[r2,r0]
000606  b108              CBZ      r0,|L1.1548|
;;;279    		return 1;
000608  2001              MOVS     r0,#1
                  |L1.1546|
;;;280    	else
;;;281    		return 0;
;;;282    }
00060a  4770              BX       lr
                  |L1.1548|
00060c  2000              MOVS     r0,#0                 ;281
00060e  e7fc              B        |L1.1546|
;;;283    
                          ENDP

                  bsp_delay_us PROC
;;;284    
;;;285    void bsp_delay_us(uint32 time)
000610  b510              PUSH     {r4,lr}
;;;286    {
000612  4604              MOV      r4,r0
;;;287    	SysCtlDelay(40 * time);
000614  eb040184          ADD      r1,r4,r4,LSL #2
000618  00c8              LSLS     r0,r1,#3
00061a  f7fffffe          BL       SysCtlDelay
;;;288    }
00061e  bd10              POP      {r4,pc}
;;;289    
                          ENDP

                  bsp_delay_ms PROC
;;;290    
;;;291    void bsp_delay_ms(uint32 time)
000620  b510              PUSH     {r4,lr}
;;;292    {
000622  4604              MOV      r4,r0
;;;293    	 for(;time;time--)
000624  e004              B        |L1.1584|
                  |L1.1574|
;;;294    		 bsp_delay_us(1000);
000626  f44f707a          MOV      r0,#0x3e8
00062a  f7fffffe          BL       bsp_delay_us
00062e  1e64              SUBS     r4,r4,#1              ;293
                  |L1.1584|
000630  2c00              CMP      r4,#0                 ;293
000632  d1f8              BNE      |L1.1574|
;;;295    }
000634  bd10              POP      {r4,pc}
;;;296    
                          ENDP

000636  0000              DCW      0x0000
                  |L1.1592|
                          DCD      0x40028000
                  |L1.1596|
                          DCD      0xf0004000
                  |L1.1600|
                          DCD      0x00091406
                  |L1.1604|
                          DCD      0x40061000
                  |L1.1608|
                          DCD      gSysClock
                  |L1.1612|
                          DCD      0x000f4240
                  |L1.1616|
                          DCD      0x40031000
                  |L1.1620|
                          DCD      ||cnt||
                  |L1.1624|
                          DCD      0x4000c000

                          AREA ||.data||, DATA, ALIGN=1

                  ||cnt||
000000  0000              DCW      0x0000
