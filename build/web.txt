; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\build\web.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\web.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I.\FreeRTOS\include -I.\inc -I.\startup -I.\driverlib -I.\Application -I.\FreeRTOS\portable -I.\Task -I.\Driver -I.\web -I.\third_party\lwip-1.4.1\src\include -I.\third_party\fatfs -I.\third_party\lwip-1.4.1\apps\httpserver_raw -I.\third_party\lwip-1.4.1\ports\tiva-tm4c129\include -I.\third_party\lwip-1.4.1\ports\tiva-tm4c129\include\arch -I.\third_party\lwip-1.4.1\src\include\ipv4 -I..\MCU -I.\third_party\lwip-1.4.1\apps -I.\third_party -I.\Upnp -I.\Dsp -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\TI\TM4C129 -Drvmdk -DPART_TM4C129XNCZAD -DRTOS_FREERTOS -DTARGET_IS_SNOWFLAKE_RA0 -DUSE_LWIP -DTM4C129ENCPDT --omf_browse=.\build\web.crf web\web.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _scanf_int
                  json_output_print PROC
;;;201    
;;;202    static void json_output_print(const char *fmt, ...)
000000  b40f              PUSH     {r0-r3}
;;;203    {
000002  b508              PUSH     {r3,lr}
;;;204    	  va_list ap;
;;;205    	  
;;;206    	  memset(jsbuf, 0, sizeof(jsbuf));
000004  f44f7100          MOV      r1,#0x200
000008  48f5              LDR      r0,|L1.992|
00000a  f7fffffe          BL       __aeabi_memclr
;;;207    	  va_start(ap, fmt);
00000e  a803              ADD      r0,sp,#0xc
000010  9000              STR      r0,[sp,#0]
;;;208    	  vsprintf(jsbuf, fmt, ap);
000012  48f3              LDR      r0,|L1.992|
000014  9a00              LDR      r2,[sp,#0]
000016  9902              LDR      r1,[sp,#8]
000018  f7fffffe          BL       vsprintf
;;;209        va_end(ap);
00001c  2000              MOVS     r0,#0
00001e  9000              STR      r0,[sp,#0]
;;;210    
;;;211        WEB_ASSERT(JSON_BUF_OVERFLOW(strlen(jsbuf))); 
000020  48ef              LDR      r0,|L1.992|
000022  f7fffffe          BL       strlen
000026  49ef              LDR      r1,|L1.996|
000028  6809              LDR      r1,[r1,#0]  ; pjson
00002a  4401              ADD      r1,r1,r0
00002c  48ee              LDR      r0,|L1.1000|
00002e  4281              CMP      r1,r0
000030  d306              BCC      |L1.64|
000032  4aee              LDR      r2,|L1.1004|
000034  a1ee              ADR      r1,|L1.1008|
000036  a0f7              ADR      r0,|L1.1044|
000038  f7fffffe          BL       s_printf
00003c  bf00              NOP      
                  |L1.62|
00003e  e7fe              B        |L1.62|
                  |L1.64|
;;;212    
;;;213        strcat(pjson, jsbuf);
000040  49e7              LDR      r1,|L1.992|
000042  48e8              LDR      r0,|L1.996|
000044  6800              LDR      r0,[r0,#0]  ; pjson
000046  f7fffffe          BL       strcat
;;;214        pjson += strlen(jsbuf);
00004a  48e5              LDR      r0,|L1.992|
00004c  f7fffffe          BL       strlen
000050  49e4              LDR      r1,|L1.996|
000052  6809              LDR      r1,[r1,#0]  ; pjson
000054  4408              ADD      r0,r0,r1
000056  49e3              LDR      r1,|L1.996|
000058  6008              STR      r0,[r1,#0]  ; pjson
;;;215    
;;;216    }
00005a  b001              ADD      sp,sp,#4
00005c  f85dfb14          LDR      pc,[sp],#0x14
;;;217    
                          ENDP

                  _cgi_agr_parse PROC
;;;218    
;;;219    static int _cgi_agr_parse(char *arg, char *argc[])
000060  e92d41f0          PUSH     {r4-r8,lr}
;;;220    {
000064  4607              MOV      r7,r0
000066  460d              MOV      r5,r1
;;;221    	 int index = 0;
000068  2400              MOVS     r4,#0
;;;222    	 char *p = NULL;
00006a  2600              MOVS     r6,#0
;;;223    	
;;;224    	 p = strtok(arg, "&");
00006c  a1f1              ADR      r1,|L1.1076|
00006e  4638              MOV      r0,r7
000070  f7fffffe          BL       strtok
000074  4606              MOV      r6,r0
;;;225    	 while(p){
000076  e00b              B        |L1.144|
                  |L1.120|
;;;226    		 if(index < CGI_ARGC_MAX){
000078  2c0e              CMP      r4,#0xe
00007a  da02              BGE      |L1.130|
;;;227    			  argc[index] = p;
00007c  f8456024          STR      r6,[r5,r4,LSL #2]
000080  e000              B        |L1.132|
                  |L1.130|
;;;228    		 }
;;;229    		 else{
;;;230    			 break;
000082  e007              B        |L1.148|
                  |L1.132|
;;;231    		 }
;;;232    		 p = strtok(NULL, "&");
000084  a1eb              ADR      r1,|L1.1076|
000086  2000              MOVS     r0,#0
000088  f7fffffe          BL       strtok
00008c  4606              MOV      r6,r0
;;;233    		 index++;
00008e  1c64              ADDS     r4,r4,#1
                  |L1.144|
000090  2e00              CMP      r6,#0                 ;225
000092  d1f1              BNE      |L1.120|
                  |L1.148|
000094  bf00              NOP                            ;230
;;;234    	 }
;;;235    	 
;;;236    	 return index;
000096  4620              MOV      r0,r4
;;;237    }
000098  e8bd81f0          POP      {r4-r8,pc}
;;;238    
                          ENDP

                  http_cgi_handler PROC
;;;239    static void http_cgi_handler(http_state_t *hs, char *uri, char *arg)
00009c  e92d41f0          PUSH     {r4-r8,lr}
;;;240    {
0000a0  b08e              SUB      sp,sp,#0x38
0000a2  4606              MOV      r6,r0
0000a4  4688              MOV      r8,r1
0000a6  4615              MOV      r5,r2
;;;241    	  int argv;
;;;242    	  char *argc[CGI_ARGC_MAX] = {NULL};
0000a8  2138              MOVS     r1,#0x38
0000aa  4668              MOV      r0,sp
0000ac  f7fffffe          BL       __aeabi_memclr4
;;;243        uint8_t index;
;;;244    
;;;245        argv = _cgi_agr_parse(arg,argc);
0000b0  4669              MOV      r1,sp
0000b2  4628              MOV      r0,r5
0000b4  f7fffffe          BL       _cgi_agr_parse
0000b8  4607              MOV      r7,r0
;;;246    	  SYS_TRACE("cgi contains %d arg\r\n", argv);
0000ba  4639              MOV      r1,r7
0000bc  a0de              ADR      r0,|L1.1080|
0000be  f7fffffe          BL       s_printf
;;;247    	  
;;;248    		for(index = 0; index < CGI_PAGE_NUM; index++){
0000c2  2400              MOVS     r4,#0
0000c4  e011              B        |L1.234|
                  |L1.198|
;;;249    			if(strcmp(g_Page_CGI[index].PageName, argc[0]) == 0){
0000c6  4ae2              LDR      r2,|L1.1104|
0000c8  f8520034          LDR      r0,[r2,r4,LSL #3]
0000cc  9900              LDR      r1,[sp,#0]
0000ce  f7fffffe          BL       strcmp
0000d2  b940              CBNZ     r0,|L1.230|
;;;250    				g_Page_CGI[index].fnCGIPageHandler(hs,argv,argc);
0000d4  48de              LDR      r0,|L1.1104|
0000d6  eb0000c4          ADD      r0,r0,r4,LSL #3
0000da  466a              MOV      r2,sp
0000dc  4639              MOV      r1,r7
0000de  6843              LDR      r3,[r0,#4]
0000e0  4630              MOV      r0,r6
0000e2  4798              BLX      r3
;;;251    				break;
0000e4  e003              B        |L1.238|
                  |L1.230|
0000e6  1c60              ADDS     r0,r4,#1              ;248
0000e8  b2c4              UXTB     r4,r0                 ;248
                  |L1.234|
0000ea  2c07              CMP      r4,#7                 ;248
0000ec  d3eb              BCC      |L1.198|
                  |L1.238|
0000ee  bf00              NOP      
;;;252    			}
;;;253    		}
;;;254    }
0000f0  b00e              ADD      sp,sp,#0x38
0000f2  e8bd81f0          POP      {r4-r8,pc}
;;;255    
                          ENDP

                  http_state_alloc PROC
;;;258    static http_state_t*
;;;259    http_state_alloc(void)
0000f6  b510              PUSH     {r4,lr}
;;;260    {
;;;261      http_state_t *ret = NULL;
0000f8  2400              MOVS     r4,#0
;;;262    
;;;263      ret = (http_state_t *)mem_malloc(sizeof(http_state_t));
0000fa  2024              MOVS     r0,#0x24
0000fc  f7fffffe          BL       mem_malloc
000100  4604              MOV      r4,r0
;;;264    
;;;265    	OSAL_ASSERT(ret != NULL);
000102  b934              CBNZ     r4,|L1.274|
000104  4ad3              LDR      r2,|L1.1108|
000106  a1d4              ADR      r1,|L1.1112|
000108  a0d6              ADR      r0,|L1.1124|
00010a  f7fffffe          BL       s_printf
00010e  bf00              NOP      
                  |L1.272|
000110  e7fe              B        |L1.272|
                  |L1.274|
;;;266    	
;;;267      if (ret != NULL) {
000112  b11c              CBZ      r4,|L1.284|
;;;268        /* Initialize the structure. */
;;;269        memset(ret, 0, sizeof(http_state_t));
000114  2124              MOVS     r1,#0x24
000116  4620              MOV      r0,r4
000118  f7fffffe          BL       __aeabi_memclr4
                  |L1.284|
;;;270      }
;;;271      return ret;
00011c  4620              MOV      r0,r4
;;;272    }
00011e  bd10              POP      {r4,pc}
;;;273    
                          ENDP

                  http_state_free PROC
;;;278    static void
;;;279    http_state_free(http_state_t *hs)
000120  b510              PUSH     {r4,lr}
;;;280    {
000122  4604              MOV      r4,r0
;;;281      if (hs != NULL) {
000124  b14c              CBZ      r4,|L1.314|
;;;282        if(hs->handle) {
000126  6820              LDR      r0,[r4,#0]
000128  b120              CBZ      r0,|L1.308|
;;;283          fs_close(hs->handle );
00012a  6820              LDR      r0,[r4,#0]
00012c  f7fffffe          BL       fs_close
;;;284          hs->handle = NULL;
000130  2000              MOVS     r0,#0
000132  6020              STR      r0,[r4,#0]
                  |L1.308|
;;;285        }
;;;286        mem_free(hs);
000134  4620              MOV      r0,r4
000136  f7fffffe          BL       mem_free
                  |L1.314|
;;;287      }
;;;288    }
00013a  bd10              POP      {r4,pc}
;;;289    
                          ENDP

                  do_httpd_send PROC
;;;290    static void do_httpd_send(struct netconn *conn, http_state_t *hs)
00013c  b5f8              PUSH     {r3-r7,lr}
;;;291    {
00013e  4606              MOV      r6,r0
000140  460c              MOV      r4,r1
;;;292    	uint32_t len;
;;;293    	
;;;294    	while(hs->left){
000142  e016              B        |L1.370|
                  |L1.324|
;;;295    	if(hs->left > TCP_MSS){
000144  f24051dc          MOV      r1,#0x5dc
000148  68e0              LDR      r0,[r4,#0xc]
00014a  4288              CMP      r0,r1
00014c  d902              BLS      |L1.340|
;;;296    		len = TCP_MSS - 24;
00014e  f24055c4          MOV      r5,#0x5c4
000152  e000              B        |L1.342|
                  |L1.340|
;;;297    	}else{
;;;298    		len = hs->left;
000154  68e5              LDR      r5,[r4,#0xc]
                  |L1.342|
;;;299    	 } 
;;;300      /*we are not processing an sHTML file so no tag checking is necessary*/
;;;301    	netconn_write(conn, (void *)hs->file, len, NETCONN_COPY);
000156  2000              MOVS     r0,#0
000158  9000              STR      r0,[sp,#0]
00015a  2301              MOVS     r3,#1
00015c  462a              MOV      r2,r5
00015e  4630              MOV      r0,r6
000160  6861              LDR      r1,[r4,#4]
000162  f7fffffe          BL       netconn_write_partly
;;;302      /*there is no restrication on the lenght of the data, the stack core will handle that*/
;;;303    	 hs->left -= len;
000166  68e0              LDR      r0,[r4,#0xc]
000168  1b40              SUBS     r0,r0,r5
00016a  60e0              STR      r0,[r4,#0xc]
;;;304       hs->file += len;
00016c  6860              LDR      r0,[r4,#4]
00016e  4428              ADD      r0,r0,r5
000170  6060              STR      r0,[r4,#4]
                  |L1.370|
000172  68e0              LDR      r0,[r4,#0xc]          ;294
000174  2800              CMP      r0,#0                 ;294
000176  d1e5              BNE      |L1.324|
;;;305    }
;;;306    
;;;307    }
000178  bdf8              POP      {r3-r7,pc}
;;;308    
                          ENDP

                  http_send_data PROC
;;;309    
;;;310    static void http_send_data(struct netconn *conn, http_state_t *hs)
00017a  e92d43f8          PUSH     {r3-r9,lr}
;;;311    {
00017e  4680              MOV      r8,r0
000180  460c              MOV      r4,r1
;;;312    	  char *psend = httpd_send_buf;
000182  4ec0              LDR      r6,|L1.1156|
;;;313    	  uint16_t len = 0;
000184  2700              MOVS     r7,#0
;;;314    	
;;;315    	  memset(httpd_send_buf, 0, sizeof(httpd_send_buf));
000186  f44f6180          MOV      r1,#0x400
00018a  4630              MOV      r0,r6
00018c  f7fffffe          BL       __aeabi_memclr
;;;316    	  if(hs->hdr_index < NUM_FILE_HDR_STRINGS){
000190  8ba0              LDRH     r0,[r4,#0x1c]
000192  2803              CMP      r0,#3
000194  da20              BGE      |L1.472|
;;;317    			 for(;hs->hdr_index < NUM_FILE_HDR_STRINGS; hs->hdr_index++){
000196  e013              B        |L1.448|
                  |L1.408|
;;;318    				   strcat(psend, hs->hdrs[hs->hdr_index]);
000198  8ba2              LDRH     r2,[r4,#0x1c]
00019a  f1040010          ADD      r0,r4,#0x10
00019e  f8501022          LDR      r1,[r0,r2,LSL #2]
0001a2  4630              MOV      r0,r6
0001a4  f7fffffe          BL       strcat
;;;319    				   len += strlen(hs->hdrs[hs->hdr_index]);
0001a8  8ba2              LDRH     r2,[r4,#0x1c]
0001aa  f1040110          ADD      r1,r4,#0x10
0001ae  f8510022          LDR      r0,[r1,r2,LSL #2]
0001b2  f7fffffe          BL       strlen
0001b6  4438              ADD      r0,r0,r7
0001b8  b287              UXTH     r7,r0
0001ba  8ba0              LDRH     r0,[r4,#0x1c]         ;317
0001bc  1c40              ADDS     r0,r0,#1              ;317
0001be  83a0              STRH     r0,[r4,#0x1c]         ;317
                  |L1.448|
0001c0  8ba0              LDRH     r0,[r4,#0x1c]         ;317
0001c2  2803              CMP      r0,#3                 ;317
0001c4  dbe8              BLT      |L1.408|
;;;320    			}
;;;321    			netconn_write(conn, (void *)psend, len, NETCONN_COPY);
0001c6  2000              MOVS     r0,#0
0001c8  2301              MOVS     r3,#1
0001ca  463a              MOV      r2,r7
0001cc  4631              MOV      r1,r6
0001ce  9000              STR      r0,[sp,#0]
0001d0  4640              MOV      r0,r8
0001d2  f7fffffe          BL       netconn_write_partly
0001d6  e003              B        |L1.480|
                  |L1.472|
;;;322    		}
;;;323    		else{
;;;324    			SYS_TRACE("waring!! will not send http header index=%d\r\n", hs->hdr_index);
0001d8  8ba1              LDRH     r1,[r4,#0x1c]
0001da  a0ab              ADR      r0,|L1.1160|
0001dc  f7fffffe          BL       s_printf
                  |L1.480|
;;;325    		}
;;;326    		
;;;327    		/*have we run out of file data to send? if so, we need to read the next block from the file*/
;;;328    		if(hs->left == 0){
0001e0  68e0              LDR      r0,[r4,#0xc]
0001e2  bb08              CBNZ     r0,|L1.552|
;;;329    			 int count;
;;;330    			 hs->buf = httpd_send_buf;
0001e4  48a7              LDR      r0,|L1.1156|
0001e6  60a0              STR      r0,[r4,#8]
;;;331    			 memset(httpd_send_buf, 0, sizeof(httpd_send_buf));
0001e8  f44f6180          MOV      r1,#0x400
0001ec  f7fffffe          BL       __aeabi_memclr
;;;332    			 if(hs->handle != NULL){ 
0001f0  6820              LDR      r0,[r4,#0]
0001f2  b1c0              CBZ      r0,|L1.550|
;;;333    				  do{
0001f4  bf00              NOP      
                  |L1.502|
;;;334    						  count = fs_read(hs->handle, hs->buf, HTTPD_SEND_BUF_SIZE);
0001f6  f44f6280          MOV      r2,#0x400
0001fa  68a1              LDR      r1,[r4,#8]
0001fc  6820              LDR      r0,[r4,#0]
0001fe  f7fffffe          BL       fs_read
000202  4605              MOV      r5,r0
;;;335    						  if(count < 0){
000204  2d00              CMP      r5,#0
000206  da06              BGE      |L1.534|
;;;336    								 /*we reach the end of the file so this request is done */
;;;337    								 fs_close(hs->handle);
000208  6820              LDR      r0,[r4,#0]
00020a  f7fffffe          BL       fs_close
;;;338    								 hs->handle = NULL;
00020e  2000              MOVS     r0,#0
000210  6020              STR      r0,[r4,#0]
                  |L1.530|
;;;339    								 return;
;;;340    							}
;;;341    							/*set up to send the block of data we just read*/
;;;342    							hs->file = hs->buf;
;;;343    							hs->left = count;
;;;344    							do_httpd_send(conn, hs);
;;;345    					}while(1);
;;;346    			 }
;;;347    			
;;;348    		}else{
;;;349    			  do_httpd_send(conn, hs);
;;;350    		}
;;;351    }
000212  e8bd83f8          POP      {r3-r9,pc}
                  |L1.534|
000216  68a0              LDR      r0,[r4,#8]            ;342
000218  6060              STR      r0,[r4,#4]            ;342
00021a  60e5              STR      r5,[r4,#0xc]          ;343
00021c  4621              MOV      r1,r4                 ;344
00021e  4640              MOV      r0,r8                 ;344
000220  f7fffffe          BL       do_httpd_send
000224  e7e7              B        |L1.502|
                  |L1.550|
000226  e003              B        |L1.560|
                  |L1.552|
000228  4621              MOV      r1,r4                 ;349
00022a  4640              MOV      r0,r8                 ;349
00022c  f7fffffe          BL       do_httpd_send
                  |L1.560|
000230  bf00              NOP      
000232  e7ee              B        |L1.530|
;;;352    
                          ENDP

                  get_http_headers PROC
;;;353    static void get_http_headers(http_state_t *hs, char *uri)
000234  e92d47f0          PUSH     {r4-r10,lr}
;;;354    {
000238  4604              MOV      r4,r0
00023a  4689              MOV      r9,r1
;;;355    	 uint8_t loop;
;;;356    	 char *pwork;
;;;357    	 char *pext;
;;;358    	 char *pvar;
;;;359    	
;;;360    	 /*in all cases, the second header we send is the server identification so set it here*/
;;;361    	 hs->hdrs[1] = g_psHTTPHeaderStrings[HTTP_HDR_SERVER];
00023c  489e              LDR      r0,|L1.1208|
00023e  6e01              LDR      r1,[r0,#0x60]  ; g_psHTTPHeaderStrings
000240  6161              STR      r1,[r4,#0x14]
;;;362    	
;;;363    	 if(uri == NULL){
000242  f1b90f00          CMP      r9,#0
000246  d108              BNE      |L1.602|
;;;364    		  hs->hdrs[0] = g_psHTTPHeaderStrings[HTTP_HDR_NOT_FOUND];
000248  6bc0              LDR      r0,[r0,#0x3c]  ; g_psHTTPHeaderStrings
00024a  6120              STR      r0,[r4,#0x10]
;;;365    		  hs->hdrs[2] = g_psHTTPHeaderStrings[DEFAULT_404_HTML];
00024c  489a              LDR      r0,|L1.1208|
00024e  6e41              LDR      r1,[r0,#0x64]  ; g_psHTTPHeaderStrings
000250  61a1              STR      r1,[r4,#0x18]
;;;366    		 
;;;367    		  /*set up to send the first header string*/
;;;368    		  hs->hdr_index = 0;
000252  2000              MOVS     r0,#0
000254  83a0              STRH     r0,[r4,#0x1c]
                  |L1.598|
;;;369    		  //SYS_TRACE("fill NOT FOUND HEADER\r\n");
;;;370    		  return;
;;;371    	 }else{
;;;372    		   if(strstr(uri, "404")){
;;;373    				  hs->hdrs[0] = g_psHTTPHeaderStrings[HTTP_HDR_NOT_FOUND];
;;;374    			 }else if(strstr(uri, "400")){
;;;375    				  hs->hdrs[0] = g_psHTTPHeaderStrings[HTTP_HDR_BAD_REQUEST];
;;;376    			 }else if(strstr(uri, "501")){
;;;377    				  hs->hdrs[0] = g_psHTTPHeaderStrings[HTTP_HDR_NOT_IMPL];
;;;378    			 }else{
;;;379    				  hs->hdrs[0] = g_psHTTPHeaderStrings[HTTP_HDR_OK];
;;;380    			 } 
;;;381    			 
;;;382    			 /*check if the URI*/
;;;383    			 pvar = strchr(uri, '?');
;;;384    			 if(pvar){
;;;385    				  *pvar = 0;
;;;386    			 }			 
;;;387    			 /*Get a pointer to the file extension*/
;;;388    			 pext = NULL;
;;;389    			 pwork = strchr(uri, '.');
;;;390    			 while(pwork){
;;;391    				  pext = pwork + 1;
;;;392    				  pwork = strchr(pext, '.');
;;;393    			 }		 
;;;394    			 for(loop = 0; (loop < NUM_HTTP_HEADERS) && pext; loop++){
;;;395    				  if(strcmp(g_psHTTPHeaders[loop].extension, pext) ==0){
;;;396    						 hs->hdrs[2] = g_psHTTPHeaderStrings[g_psHTTPHeaders[loop].headerIndex];
;;;397    						 break;
;;;398    					}
;;;399    			 }		 
;;;400    			 /*Reinstate the parameter marker if there was one in the original URI*/
;;;401    			 if(pvar){
;;;402    				  *pvar = '?';
;;;403    			 }
;;;404    	 }
;;;405    	 
;;;406    	 /*Does the URL passed have any file extension? if not, we assume it is a special-case URL used 
;;;407    	 for control state notification and we do not send any HTTP headers with the reponse*/
;;;408    	 if(!pext){
;;;409    		  /*force the header index to a value indicating that all headers have already been sent*/
;;;410    		  hs->hdr_index = NUM_FILE_HDR_STRINGS;
;;;411    	 }else{	 
;;;412    		  /*did we find a matching extension?*/
;;;413    		  if(loop == NUM_HTTP_HEADERS){
;;;414    				 /*No - use the default, plain text file type*/
;;;415    				 hs->hdrs[2] = g_psHTTPHeaderStrings[HTTP_HDR_DEFAULT_TYPE];
;;;416    			}
;;;417    			/*set up to send the first header string*/
;;;418    		  hs->hdr_index = 0;
;;;419    	 }
;;;420    }
000256  e8bd87f0          POP      {r4-r10,pc}
                  |L1.602|
00025a  a198              ADR      r1,|L1.1212|
00025c  4648              MOV      r0,r9                 ;372
00025e  f7fffffe          BL       strstr
000262  b118              CBZ      r0,|L1.620|
000264  4894              LDR      r0,|L1.1208|
000266  6bc0              LDR      r0,[r0,#0x3c]         ;373  ; g_psHTTPHeaderStrings
000268  6120              STR      r0,[r4,#0x10]         ;373
00026a  e014              B        |L1.662|
                  |L1.620|
00026c  a194              ADR      r1,|L1.1216|
00026e  4648              MOV      r0,r9                 ;374
000270  f7fffffe          BL       strstr
000274  b118              CBZ      r0,|L1.638|
000276  4890              LDR      r0,|L1.1208|
000278  6c00              LDR      r0,[r0,#0x40]         ;375  ; g_psHTTPHeaderStrings
00027a  6120              STR      r0,[r4,#0x10]         ;375
00027c  e00b              B        |L1.662|
                  |L1.638|
00027e  a191              ADR      r1,|L1.1220|
000280  4648              MOV      r0,r9                 ;376
000282  f7fffffe          BL       strstr
000286  b118              CBZ      r0,|L1.656|
000288  488b              LDR      r0,|L1.1208|
00028a  6c40              LDR      r0,[r0,#0x44]         ;377  ; g_psHTTPHeaderStrings
00028c  6120              STR      r0,[r4,#0x10]         ;377
00028e  e002              B        |L1.662|
                  |L1.656|
000290  4889              LDR      r0,|L1.1208|
000292  6b80              LDR      r0,[r0,#0x38]         ;379  ; g_psHTTPHeaderStrings
000294  6120              STR      r0,[r4,#0x10]         ;379
                  |L1.662|
000296  213f              MOVS     r1,#0x3f              ;383
000298  4648              MOV      r0,r9                 ;383
00029a  f7fffffe          BL       strchr
00029e  4606              MOV      r6,r0                 ;383
0002a0  b10e              CBZ      r6,|L1.678|
0002a2  2000              MOVS     r0,#0                 ;385
0002a4  7030              STRB     r0,[r6,#0]            ;385
                  |L1.678|
0002a6  2700              MOVS     r7,#0                 ;388
0002a8  212e              MOVS     r1,#0x2e              ;389
0002aa  4648              MOV      r0,r9                 ;389
0002ac  f7fffffe          BL       strchr
0002b0  4680              MOV      r8,r0                 ;389
0002b2  e006              B        |L1.706|
                  |L1.692|
0002b4  f1080701          ADD      r7,r8,#1              ;391
0002b8  212e              MOVS     r1,#0x2e              ;392
0002ba  4638              MOV      r0,r7                 ;392
0002bc  f7fffffe          BL       strchr
0002c0  4680              MOV      r8,r0                 ;392
                  |L1.706|
0002c2  f1b80f00          CMP      r8,#0                 ;390
0002c6  d1f5              BNE      |L1.692|
0002c8  2500              MOVS     r5,#0                 ;394
0002ca  e011              B        |L1.752|
                  |L1.716|
0002cc  497e              LDR      r1,|L1.1224|
0002ce  f8510035          LDR      r0,[r1,r5,LSL #3]     ;395
0002d2  4639              MOV      r1,r7                 ;395
0002d4  f7fffffe          BL       strcmp
0002d8  b940              CBNZ     r0,|L1.748|
0002da  487b              LDR      r0,|L1.1224|
0002dc  eb0000c5          ADD      r0,r0,r5,LSL #3       ;396
0002e0  6840              LDR      r0,[r0,#4]            ;396
0002e2  4975              LDR      r1,|L1.1208|
0002e4  f8511020          LDR      r1,[r1,r0,LSL #2]     ;396
0002e8  61a1              STR      r1,[r4,#0x18]         ;396
0002ea  e005              B        |L1.760|
                  |L1.748|
0002ec  1c68              ADDS     r0,r5,#1              ;394
0002ee  b2c5              UXTB     r5,r0                 ;394
                  |L1.752|
0002f0  2d11              CMP      r5,#0x11              ;394
0002f2  d201              BCS      |L1.760|
0002f4  2f00              CMP      r7,#0                 ;394
0002f6  d1e9              BNE      |L1.716|
                  |L1.760|
0002f8  bf00              NOP                            ;397
0002fa  b10e              CBZ      r6,|L1.768|
0002fc  203f              MOVS     r0,#0x3f              ;402
0002fe  7030              STRB     r0,[r6,#0]            ;402
                  |L1.768|
000300  b917              CBNZ     r7,|L1.776|
000302  2003              MOVS     r0,#3                 ;410
000304  83a0              STRH     r0,[r4,#0x1c]         ;410
000306  e006              B        |L1.790|
                  |L1.776|
000308  2d11              CMP      r5,#0x11              ;413
00030a  d102              BNE      |L1.786|
00030c  486a              LDR      r0,|L1.1208|
00030e  6b41              LDR      r1,[r0,#0x34]         ;415  ; g_psHTTPHeaderStrings
000310  61a1              STR      r1,[r4,#0x18]         ;415
                  |L1.786|
000312  2000              MOVS     r0,#0                 ;418
000314  83a0              STRH     r0,[r4,#0x1c]         ;418
                  |L1.790|
000316  bf00              NOP      
000318  e79d              B        |L1.598|
;;;421    
                          ENDP

                  http_init_file PROC
;;;422    static err_t http_init_file(http_state_t *hs, struct fs_file *file, const char *uri)
00031a  b570              PUSH     {r4-r6,lr}
;;;423    {
00031c  4604              MOV      r4,r0
00031e  460d              MOV      r5,r1
000320  4616              MOV      r6,r2
;;;424    	 if(file != NULL){
000322  b11d              CBZ      r5,|L1.812|
;;;425    		  hs->handle = file;
000324  6025              STR      r5,[r4,#0]
;;;426    		  hs->file = NULL;
000326  2000              MOVS     r0,#0
000328  6060              STR      r0,[r4,#4]
;;;427    		  hs->left = 0;
00032a  60e0              STR      r0,[r4,#0xc]
                  |L1.812|
;;;428    	 }
;;;429    	 get_http_headers(hs, (char *)uri);  
00032c  4631              MOV      r1,r6
00032e  4620              MOV      r0,r4
000330  f7fffffe          BL       get_http_headers
;;;430    	 return ERR_OK;
000334  2000              MOVS     r0,#0
;;;431    }
000336  bd70              POP      {r4-r6,pc}
;;;432    
                          ENDP

                  http_find_file PROC
;;;433    static err_t http_find_file(http_state_t *hs, char *uri)
000338  e92d41f0          PUSH     {r4-r8,lr}
;;;434    {
00033c  4607              MOV      r7,r0
00033e  460d              MOV      r5,r1
;;;435    	struct fs_file *file = NULL;
000340  2600              MOVS     r6,#0
;;;436    	char *params;
;;;437    	
;;;438    	/*Have we been asked for the default root files*/
;;;439    	if((uri[0] == '/') && (uri[1] == 0)){
000342  7828              LDRB     r0,[r5,#0]
000344  282f              CMP      r0,#0x2f
000346  d10c              BNE      |L1.866|
000348  7868              LDRB     r0,[r5,#1]
00034a  b950              CBNZ     r0,|L1.866|
;;;440    		file = fs_open(DEFAULT_FILE_NAME);
00034c  a05f              ADR      r0,|L1.1228|
00034e  f7fffffe          BL       fs_open
000352  4606              MOV      r6,r0
;;;441    		uri = DEFAULT_FILE_NAME;
000354  a55d              ADR      r5,|L1.1228|
;;;442    		  
;;;443    		if(file == NULL){
000356  2e00              CMP      r6,#0
000358  d121              BNE      |L1.926|
;;;444    				SYS_TRACE("open index page file fail\r\n");
00035a  a05f              ADR      r0,|L1.1240|
00035c  f7fffffe          BL       s_printf
000360  e01d              B        |L1.926|
                  |L1.866|
;;;445    	    }
;;;446    			else{
;;;447    				// SYS_TRACE("open index page file success\r\n");
;;;448    			}
;;;449    	 }
;;;450    	 else{
;;;451    		  /*No - we've been asked for a specific file*/
;;;452    		 /*First, isolate the base URI*/
;;;453    		 params = (char *)strchr(uri, '?');
000362  213f              MOVS     r1,#0x3f
000364  4628              MOV      r0,r5
000366  f7fffffe          BL       strchr
00036a  4604              MOV      r4,r0
;;;454    		 if(params != NULL){
00036c  b16c              CBZ      r4,|L1.906|
;;;455    			  *params = 0;
00036e  2000              MOVS     r0,#0
000370  7020              STRB     r0,[r4,#0]
;;;456    			   params++;
000372  1c64              ADDS     r4,r4,#1
;;;457    			   SYS_TRACE("CGI=%s---uri=%s\r\n", params, uri);
000374  462a              MOV      r2,r5
000376  4621              MOV      r1,r4
000378  a05e              ADR      r0,|L1.1268|
00037a  f7fffffe          BL       s_printf
;;;458    			   http_cgi_handler(hs, uri, params);
00037e  4622              MOV      r2,r4
000380  4629              MOV      r1,r5
000382  4638              MOV      r0,r7
000384  f7fffffe          BL       http_cgi_handler
000388  e009              B        |L1.926|
                  |L1.906|
;;;459    		 }else{
;;;460    			 file = fs_open(uri);
00038a  4628              MOV      r0,r5
00038c  f7fffffe          BL       fs_open
000390  4606              MOV      r6,r0
;;;461    		   if(file == NULL){
000392  b926              CBNZ     r6,|L1.926|
;;;462    				 SYS_TRACE("Try open %s fail\r\n", uri);
000394  4629              MOV      r1,r5
000396  a05c              ADR      r0,|L1.1288|
000398  f7fffffe          BL       s_printf
;;;463    				 uri = NULL;
00039c  2500              MOVS     r5,#0
                  |L1.926|
;;;464    			 }else{
;;;465    				// SYS_TRACE("Try open %s success\r\n", uri);
;;;466    			 }
;;;467    		 }
;;;468    		 
;;;469    	 }
;;;470    	 
;;;471       return http_init_file(hs,file,uri);	 
00039e  462a              MOV      r2,r5
0003a0  4631              MOV      r1,r6
0003a2  4638              MOV      r0,r7
0003a4  f7fffffe          BL       http_init_file
;;;472    }
0003a8  e8bd81f0          POP      {r4-r8,pc}
;;;473    
                          ENDP

                  http_parse_request PROC
;;;474    
;;;475    err_t http_parse_request(http_state_t *hs, char *data, uint16_t len)
0003ac  e92d4ff7          PUSH     {r0-r2,r4-r11,lr}
;;;476    {
0003b0  b082              SUB      sp,sp,#8
0003b2  460e              MOV      r6,r1
0003b4  4617              MOV      r7,r2
;;;477    	 char *crlf;
;;;478    
;;;479    	/*wait for CRLF before parsing anything*/
;;;480      crlf = 	strstr(data, "\r\n");
0003b6  a11e              ADR      r1,|L1.1072|
0003b8  4630              MOV      r0,r6
0003ba  f7fffffe          BL       strstr
0003be  9001              STR      r0,[sp,#4]
;;;481    	if(crlf != NULL){
0003c0  9801              LDR      r0,[sp,#4]
0003c2  2800              CMP      r0,#0
0003c4  d00a              BEQ      |L1.988|
;;;482    		 int is_post = 0;
0003c6  f04f0a00          MOV      r10,#0
;;;483    		 char *sp1, *sp2;
;;;484    		 uint16_t left_len, uri_len;
;;;485    		
;;;486    		 if(strncmp(data, "GET ", strlen("GET ")) ==0){
0003ca  2204              MOVS     r2,#4
0003cc  a153              ADR      r1,|L1.1308|
0003ce  4630              MOV      r0,r6
0003d0  f7fffffe          BL       strncmp
0003d4  b908              CBNZ     r0,|L1.986|
;;;487    			  sp1 = data + 3;
0003d6  1cf4              ADDS     r4,r6,#3
0003d8  e0b3              B        |L1.1346|
                  |L1.986|
0003da  e0a3              B        |L1.1316|
                  |L1.988|
0003dc  e0d6              B        |L1.1420|
0003de  0000              DCW      0x0000
                  |L1.992|
                          DCD      jsbuf
                  |L1.996|
                          DCD      pjson
                  |L1.1000|
                          DCD      json_output_buf+0x7ff
                  |L1.1004|
                          DCD      __FUNCTION__
                  |L1.1008|
0003f0  4a534f4e          DCB      "JSON_BUF_OVERFLOW(strlen(jsbuf))",0
0003f4  5f425546
0003f8  5f4f5645
0003fc  52464c4f
000400  57287374
000404  726c656e
000408  286a7362
00040c  75662929
000410  00      
000411  00                DCB      0
000412  00                DCB      0
000413  00                DCB      0
                  |L1.1044|
000414  28257329          DCB      "(%s) has assert failed at %s"
000418  20686173
00041c  20617373
000420  65727420
000424  6661696c
000428  65642061
00042c  74202573
                  |L1.1072|
000430  0d0a00            DCB      "\r\n",0
000433  00                DCB      0
                  |L1.1076|
000434  2600              DCB      "&",0
000436  00                DCB      0
000437  00                DCB      0
                  |L1.1080|
000438  63676920          DCB      "cgi contains %d arg\r\n",0
00043c  636f6e74
000440  61696e73
000444  20256420
000448  6172670d
00044c  0a00    
00044e  00                DCB      0
00044f  00                DCB      0
                  |L1.1104|
                          DCD      g_Page_CGI
                  |L1.1108|
                          DCD      |symbol_number.29|
                  |L1.1112|
000458  72657420          DCB      "ret != NULL",0
00045c  213d204e
000460  554c4c00
                  |L1.1124|
000464  28257329          DCB      "(%s) has assert failed at %s.\n",0
000468  20686173
00046c  20617373
000470  65727420
000474  6661696c
000478  65642061
00047c  74202573
000480  2e0a00  
000483  00                DCB      0
                  |L1.1156|
                          DCD      httpd_send_buf
                  |L1.1160|
000488  77617269          DCB      "waring!! will not send http header index=%d\r\n",0
00048c  6e672121
000490  2077696c
000494  6c206e6f
000498  74207365
00049c  6e642068
0004a0  74747020
0004a4  68656164
0004a8  65722069
0004ac  6e646578
0004b0  3d25640d
0004b4  0a00    
0004b6  00                DCB      0
0004b7  00                DCB      0
                  |L1.1208|
                          DCD      g_psHTTPHeaderStrings
                  |L1.1212|
0004bc  34303400          DCB      "404",0
                  |L1.1216|
0004c0  34303000          DCB      "400",0
                  |L1.1220|
0004c4  35303100          DCB      "501",0
                  |L1.1224|
                          DCD      g_psHTTPHeaders
                  |L1.1228|
0004cc  2f686f6d          DCB      "/home.htm",0
0004d0  652e6874
0004d4  6d00    
0004d6  00                DCB      0
0004d7  00                DCB      0
                  |L1.1240|
0004d8  6f70656e          DCB      "open index page file fail\r\n",0
0004dc  20696e64
0004e0  65782070
0004e4  61676520
0004e8  66696c65
0004ec  20666169
0004f0  6c0d0a00
                  |L1.1268|
0004f4  4347493d          DCB      "CGI=%s---uri=%s\r\n",0
0004f8  25732d2d
0004fc  2d757269
000500  3d25730d
000504  0a00    
000506  00                DCB      0
000507  00                DCB      0
                  |L1.1288|
000508  54727920          DCB      "Try open %s fail\r\n",0
00050c  6f70656e
000510  20257320
000514  6661696c
000518  0d0a00  
00051b  00                DCB      0
                  |L1.1308|
00051c  47455420          DCB      "GET ",0
000520  00      
000521  00                DCB      0
000522  00                DCB      0
000523  00                DCB      0
                  |L1.1316|
;;;488    		 }
;;;489    		 else if(strncmp(data, "POST ", strlen("POST ")) ==0){
000524  2205              MOVS     r2,#5
000526  a1fe              ADR      r1,|L1.2336|
000528  4630              MOV      r0,r6
00052a  f7fffffe          BL       strncmp
00052e  b918              CBNZ     r0,|L1.1336|
;;;490    			  is_post = 1;
000530  f04f0a01          MOV      r10,#1
;;;491    			  sp1 = data + 4;
000534  1d34              ADDS     r4,r6,#4
000536  e004              B        |L1.1346|
                  |L1.1336|
;;;492    		 }else{
;;;493    			   return ERR_ARG;
000538  f06f000d          MVN      r0,#0xd
                  |L1.1340|
;;;494    		 }
;;;495    		 
;;;496    		 /*if we come here, method is OK, parse URI*/
;;;497    		 left_len = len - ((sp1 + 1) - data);
;;;498    		 sp2 = strstr(sp1 + 1, " ");
;;;499    		 if(sp2 != NULL){
;;;500    				uri_len = sp2 - (sp1 + 1);
;;;501    			  if((sp2 != 0) && (sp2 > sp1)){
;;;502    					 char *uri = sp1 + 1;
;;;503    					 /*null-terminate the METHOD*/
;;;504    					 *sp1 = 0;
;;;505    					 uri[uri_len] = 0;					
;;;506    					 if(is_post){
;;;507    						  //TBD
;;;508    					 }else{
;;;509    						   return http_find_file(hs,uri);
;;;510    					 }
;;;511    				}
;;;512    		 }
;;;513    		 else{
;;;514    			   SYS_TRACE("invalid URI\r\n");
;;;515    		 }
;;;516    		 
;;;517    	 (void)left_len;
;;;518    	}
;;;519    	
;;;520    	
;;;521    	
;;;522    	 return ERR_ARG;
;;;523    }
00053c  b005              ADD      sp,sp,#0x14
00053e  e8bd8ff0          POP      {r4-r11,pc}
                  |L1.1346|
000542  1c60              ADDS     r0,r4,#1              ;497
000544  1b80              SUBS     r0,r0,r6              ;497
000546  1a38              SUBS     r0,r7,r0              ;497
000548  fa1ffb80          UXTH     r11,r0                ;497
00054c  a1f5              ADR      r1,|L1.2340|
00054e  1c60              ADDS     r0,r4,#1              ;498
000550  f7fffffe          BL       strstr
000554  4605              MOV      r5,r0                 ;498
000556  b1ad              CBZ      r5,|L1.1412|
000558  1c60              ADDS     r0,r4,#1              ;500
00055a  1a28              SUBS     r0,r5,r0              ;500
00055c  fa1ff880          UXTH     r8,r0                 ;500
000560  b19d              CBZ      r5,|L1.1418|
000562  42a5              CMP      r5,r4                 ;501
000564  d911              BLS      |L1.1418|
000566  f1040901          ADD      r9,r4,#1              ;502
00056a  2000              MOVS     r0,#0                 ;504
00056c  7020              STRB     r0,[r4,#0]            ;504
00056e  f8090008          STRB     r0,[r9,r8]            ;505
000572  f1ba0f00          CMP      r10,#0                ;506
000576  d104              BNE      |L1.1410|
000578  4649              MOV      r1,r9                 ;509
00057a  9802              LDR      r0,[sp,#8]            ;509
00057c  f7fffffe          BL       http_find_file
000580  e7dc              B        |L1.1340|
                  |L1.1410|
000582  e002              B        |L1.1418|
                  |L1.1412|
000584  a0e8              ADR      r0,|L1.2344|
000586  f7fffffe          BL       s_printf
                  |L1.1418|
00058a  bf00              NOP                            ;518
                  |L1.1420|
00058c  f06f000d          MVN      r0,#0xd               ;522
000590  e7d4              B        |L1.1340|
;;;524    
                          ENDP

                  do_process PROC
;;;525    static err_t do_process(struct netconn *conn, http_state_t *hs, char *data, uint16_t len)
000592  e92d41f0          PUSH     {r4-r8,lr}
;;;526    {
000596  4680              MOV      r8,r0
000598  460c              MOV      r4,r1
00059a  4615              MOV      r5,r2
00059c  461e              MOV      r6,r3
;;;527    	err_t parsed = ERR_ISCONN;  
00059e  f06f0708          MVN      r7,#8
;;;528    	
;;;529    	/*first check whether we are in post context*/
;;;530    	 if(hs->post_content_len_left > 0){
0005a2  6a20              LDR      r0,[r4,#0x20]
0005a4  b9a0              CBNZ     r0,|L1.1488|
;;;531    		 //TBD
;;;532    	 }else{
;;;533    		 if(hs->handle == NULL){
0005a6  6820              LDR      r0,[r4,#0]
0005a8  b930              CBNZ     r0,|L1.1464|
;;;534    				 parsed = http_parse_request(hs, data, len);
0005aa  4632              MOV      r2,r6
0005ac  4629              MOV      r1,r5
0005ae  4620              MOV      r0,r4
0005b0  f7fffffe          BL       http_parse_request
0005b4  4607              MOV      r7,r0
0005b6  e002              B        |L1.1470|
                  |L1.1464|
;;;535    			}else{
;;;536    				 SYS_TRACE("http_recv: already sending data\r\n");
0005b8  a0df              ADR      r0,|L1.2360|
0005ba  f7fffffe          BL       s_printf
                  |L1.1470|
;;;537    			}
;;;538    			if(parsed == ERR_OK)
0005be  b93f              CBNZ     r7,|L1.1488|
;;;539    			{
;;;540    				 if(hs->post_content_len_left == 0){
0005c0  6a20              LDR      r0,[r4,#0x20]
0005c2  b928              CBNZ     r0,|L1.1488|
;;;541    					   http_send_data(conn,hs);
0005c4  4621              MOV      r1,r4
0005c6  4640              MOV      r0,r8
0005c8  f7fffffe          BL       http_send_data
;;;542    					   parsed = ERR_CLSD;
0005cc  f06f070b          MVN      r7,#0xb
                  |L1.1488|
;;;543    				 }
;;;544    			}
;;;545    	 }
;;;546    	
;;;547    	 return parsed;
0005d0  4638              MOV      r0,r7
;;;548    }
0005d2  e8bd81f0          POP      {r4-r8,pc}
;;;549    
                          ENDP

                  httpd_process PROC
;;;550    static void httpd_process(struct netconn *conn, http_state_t *hs)
0005d6  b5fe              PUSH     {r1-r7,lr}
;;;551    {
0005d8  4604              MOV      r4,r0
0005da  460d              MOV      r5,r1
;;;552    	struct netbuf *inbuf;
;;;553    	uint16_t len;
;;;554    	char *pdata;
;;;555    	err_t parsed = ERR_ISCONN;
0005dc  f06f0608          MVN      r6,#8
;;;556    	
;;;557    	netconn_set_recvtimeout(conn, 1000);
0005e0  f44f707a          MOV      r0,#0x3e8
0005e4  f8c40128          STR      r0,[r4,#0x128]
;;;558    	
;;;559    	while(netconn_recv(conn, &inbuf) == ERR_OK)
0005e8  e02a              B        |L1.1600|
                  |L1.1514|
;;;560    	{
;;;561    		
;;;562    		  /*recover from v0.4.4*/
;;;563    		  sys_ip_power_on_handler(gSystem_t);
0005ea  48dc              LDR      r0,|L1.2396|
0005ec  6800              LDR      r0,[r0,#0]  ; gSystem_t
0005ee  f7fffffe          BL       sys_ip_power_on_handler
;;;564    		
;;;565    		  memset(httpd_recv_buf, 0, sizeof(httpd_recv_buf));
0005f2  f44f6180          MOV      r1,#0x400
0005f6  48da              LDR      r0,|L1.2400|
0005f8  f7fffffe          BL       __aeabi_memclr
;;;566    		  pdata = httpd_recv_buf;
0005fc  48d8              LDR      r0,|L1.2400|
0005fe  9000              STR      r0,[sp,#0]
;;;567    		  netbuf_first(inbuf);
000600  9802              LDR      r0,[sp,#8]
000602  f7fffffe          BL       netbuf_first
;;;568    		  do{			  
000606  bf00              NOP      
                  |L1.1544|
;;;569    				  netbuf_data(inbuf, (void **)&pdata, &len);
000608  aa01              ADD      r2,sp,#4
00060a  4669              MOV      r1,sp
00060c  9802              LDR      r0,[sp,#8]
00060e  f7fffffe          BL       netbuf_data
;;;570    				  parsed = do_process(conn,hs, pdata, len);
000612  f8bd3004          LDRH     r3,[sp,#4]
000616  4629              MOV      r1,r5
000618  4620              MOV      r0,r4
00061a  9a00              LDR      r2,[sp,#0]
00061c  f7fffffe          BL       do_process
000620  4606              MOV      r6,r0
;;;571    				  if(ERR_CLSD == parsed){
000622  f1160f0c          CMN      r6,#0xc
000626  d103              BNE      |L1.1584|
;;;572    						netbuf_delete(inbuf);
000628  9802              LDR      r0,[sp,#8]
00062a  f7fffffe          BL       netbuf_delete
                  |L1.1582|
;;;573    						return;
;;;574    					}
;;;575    			}while(netbuf_next(inbuf) >= 0);
;;;576    			
;;;577    			netbuf_delete(inbuf);
;;;578    	}
;;;579    }
00062e  bdfe              POP      {r1-r7,pc}
                  |L1.1584|
000630  9802              LDR      r0,[sp,#8]            ;575
000632  f7fffffe          BL       netbuf_next
000636  2800              CMP      r0,#0                 ;575
000638  dae6              BGE      |L1.1544|
00063a  9802              LDR      r0,[sp,#8]            ;577
00063c  f7fffffe          BL       netbuf_delete
                  |L1.1600|
000640  a902              ADD      r1,sp,#8              ;559
000642  4620              MOV      r0,r4                 ;559
000644  f7fffffe          BL       netconn_recv
000648  2800              CMP      r0,#0                 ;559
00064a  d0ce              BEQ      |L1.1514|
00064c  bf00              NOP      
00064e  e7ee              B        |L1.1582|
;;;580    
                          ENDP

                  web_server PROC
;;;581    
;;;582    static void web_server(void)
000650  b508              PUSH     {r3,lr}
;;;583    {
;;;584    	struct netconn *conn, *newconn;
;;;585    	http_state_t *hs = NULL;
000652  2500              MOVS     r5,#0
;;;586    	err_t err;
;;;587    	
;;;588    	conn = netconn_new(NETCONN_TCP);
000654  2200              MOVS     r2,#0
000656  4611              MOV      r1,r2
000658  2010              MOVS     r0,#0x10
00065a  f7fffffe          BL       netconn_new_with_proto_and_callback
00065e  4606              MOV      r6,r0
;;;589    	netconn_bind(conn, NULL, 80);
000660  2250              MOVS     r2,#0x50
000662  2100              MOVS     r1,#0
000664  4630              MOV      r0,r6
000666  f7fffffe          BL       netconn_bind
;;;590    	netconn_listen(conn);
00066a  21ff              MOVS     r1,#0xff
00066c  4630              MOV      r0,r6
00066e  f7fffffe          BL       netconn_listen_with_backlog
;;;591    	SYS_TRACE("web task running\r\n");
000672  a0bc              ADR      r0,|L1.2404|
000674  f7fffffe          BL       s_printf
;;;592    	
;;;593    	while(1){
000678  e023              B        |L1.1730|
                  |L1.1658|
;;;594    		err = netconn_accept(conn, &newconn);
00067a  4669              MOV      r1,sp
00067c  4630              MOV      r0,r6
00067e  f7fffffe          BL       netconn_accept
000682  4604              MOV      r4,r0
;;;595    		if(err != ERR_OK) {
000684  b124              CBZ      r4,|L1.1680|
;;;596    		  SYS_TRACE("netconn_accept =%d\r\n",err);
000686  4621              MOV      r1,r4
000688  a0bb              ADR      r0,|L1.2424|
00068a  f7fffffe          BL       s_printf
;;;597    			continue;
00068e  e018              B        |L1.1730|
                  |L1.1680|
;;;598        }
;;;599    		
;;;600    		hs = http_state_alloc();
000690  f7fffffe          BL       http_state_alloc
000694  4605              MOV      r5,r0
;;;601    		if(hs == NULL){
000696  b935              CBNZ     r5,|L1.1702|
;;;602    			  http_state_free(hs);
000698  4628              MOV      r0,r5
00069a  f7fffffe          BL       http_state_free
;;;603    			  netconn_delete(newconn);
00069e  9800              LDR      r0,[sp,#0]
0006a0  f7fffffe          BL       netconn_delete
;;;604    			  continue;
0006a4  e00d              B        |L1.1730|
                  |L1.1702|
;;;605    		}
;;;606    
;;;607    		httpd_process(newconn,hs);
0006a6  4629              MOV      r1,r5
0006a8  9800              LDR      r0,[sp,#0]
0006aa  f7fffffe          BL       httpd_process
;;;608    		http_state_free(hs); 
0006ae  4628              MOV      r0,r5
0006b0  f7fffffe          BL       http_state_free
;;;609    		netconn_delete(newconn);
0006b4  9800              LDR      r0,[sp,#0]
0006b6  f7fffffe          BL       netconn_delete
;;;610    		vTaskDelay(10/portTICK_RATE_MS); 
0006ba  200a              MOVS     r0,#0xa
0006bc  f7fffffe          BL       vTaskDelay
0006c0  bf00              NOP                            ;597
                  |L1.1730|
0006c2  e7da              B        |L1.1658|
;;;611    	}
;;;612    }
;;;613    
                          ENDP

                  web_task PROC
;;;614    
;;;615    void web_task(void *parameter)
0006c4  b51c              PUSH     {r2-r4,lr}
;;;616    {
;;;617    	uint8 j ;
;;;618    	
;;;619    	fs_init();
0006c6  f7fffffe          BL       fs_init
;;;620    	
;;;621    	if(gSystem_t->mac[0] == 0xff && gSystem_t->mac[1] == 0xff && gSystem_t->mac[2] == 0xff
0006ca  48a4              LDR      r0,|L1.2396|
0006cc  6800              LDR      r0,[r0,#0]  ; gSystem_t
0006ce  7b00              LDRB     r0,[r0,#0xc]
0006d0  28ff              CMP      r0,#0xff
0006d2  d126              BNE      |L1.1826|
0006d4  48a1              LDR      r0,|L1.2396|
0006d6  6800              LDR      r0,[r0,#0]  ; gSystem_t
0006d8  7b40              LDRB     r0,[r0,#0xd]
0006da  28ff              CMP      r0,#0xff
0006dc  d121              BNE      |L1.1826|
0006de  489f              LDR      r0,|L1.2396|
0006e0  6800              LDR      r0,[r0,#0]  ; gSystem_t
0006e2  7b80              LDRB     r0,[r0,#0xe]
0006e4  28ff              CMP      r0,#0xff
0006e6  d11c              BNE      |L1.1826|
;;;622    		&& gSystem_t->mac[3] == 0xff && gSystem_t->mac[4] == 0xff && gSystem_t->mac[5] == 0xff){
0006e8  489c              LDR      r0,|L1.2396|
0006ea  6800              LDR      r0,[r0,#0]  ; gSystem_t
0006ec  7bc0              LDRB     r0,[r0,#0xf]
0006ee  28ff              CMP      r0,#0xff
0006f0  d117              BNE      |L1.1826|
0006f2  489a              LDR      r0,|L1.2396|
0006f4  6800              LDR      r0,[r0,#0]  ; gSystem_t
0006f6  7c00              LDRB     r0,[r0,#0x10]
0006f8  28ff              CMP      r0,#0xff
0006fa  d112              BNE      |L1.1826|
0006fc  4897              LDR      r0,|L1.2396|
0006fe  6800              LDR      r0,[r0,#0]  ; gSystem_t
000700  7c40              LDRB     r0,[r0,#0x11]
000702  28ff              CMP      r0,#0xff
000704  d10d              BNE      |L1.1826|
;;;623    	
;;;624    		g_MACArray[0] = 0x00;
000706  2000              MOVS     r0,#0
000708  49a1              LDR      r1,|L1.2448|
00070a  7008              STRB     r0,[r1,#0]
;;;625    		g_MACArray[1] = 0x60;
00070c  2060              MOVS     r0,#0x60
00070e  7048              STRB     r0,[r1,#1]
;;;626    		g_MACArray[2] = 0x6e;
000710  206e              MOVS     r0,#0x6e
000712  7088              STRB     r0,[r1,#2]
;;;627    		g_MACArray[3] = 0x11;
000714  2011              MOVS     r0,#0x11
000716  70c8              STRB     r0,[r1,#3]
;;;628    		g_MACArray[4] = 0x22;
000718  2022              MOVS     r0,#0x22
00071a  7108              STRB     r0,[r1,#4]
;;;629    		g_MACArray[5] = 0x33;
00071c  2033              MOVS     r0,#0x33
00071e  7148              STRB     r0,[r1,#5]
000720  e00b              B        |L1.1850|
                  |L1.1826|
;;;630    	}else{
;;;631    		for(j = 0; j < 6; j++){
000722  2400              MOVS     r4,#0
000724  e007              B        |L1.1846|
                  |L1.1830|
;;;632    			g_MACArray[j] = gSystem_t->mac[j];
000726  488d              LDR      r0,|L1.2396|
000728  6800              LDR      r0,[r0,#0]  ; gSystem_t
00072a  300c              ADDS     r0,r0,#0xc
00072c  5d00              LDRB     r0,[r0,r4]
00072e  4998              LDR      r1,|L1.2448|
000730  5508              STRB     r0,[r1,r4]
000732  1c60              ADDS     r0,r4,#1              ;631
000734  b2c4              UXTB     r4,r0                 ;631
                  |L1.1846|
000736  2c06              CMP      r4,#6                 ;631
000738  dbf5              BLT      |L1.1830|
                  |L1.1850|
;;;633    		}
;;;634    	}
;;;635    	
;;;636    	
;;;637    	lwIPInit(gSysClock, g_MACArray, gSystem_t->ip, gSystem_t->netmask, gSystem_t->gateway, gSystem_t->ip_mode);
00073a  4888              LDR      r0,|L1.2396|
00073c  6800              LDR      r0,[r0,#0]  ; gSystem_t
00073e  7c80              LDRB     r0,[r0,#0x12]
000740  4986              LDR      r1,|L1.2396|
000742  6809              LDR      r1,[r1,#0]  ; gSystem_t
000744  6889              LDR      r1,[r1,#8]
000746  e9cd1000          STRD     r1,r0,[sp,#0]
00074a  4884              LDR      r0,|L1.2396|
00074c  6800              LDR      r0,[r0,#0]  ; gSystem_t
00074e  6843              LDR      r3,[r0,#4]
000750  4882              LDR      r0,|L1.2396|
000752  6800              LDR      r0,[r0,#0]  ; gSystem_t
000754  498e              LDR      r1,|L1.2448|
000756  6802              LDR      r2,[r0,#0]
000758  488e              LDR      r0,|L1.2452|
00075a  6800              LDR      r0,[r0,#0]  ; gSysClock
00075c  f7fffffe          BL       lwIPInit
;;;638    	//lwIPInit(gSysClock, g_MACArray, gSystem_t->ip, gSystem_t->netmask, gSystem_t->gateway, 1);
;;;639    
;;;640    	IntPrioritySet(INT_EMAC0, ETHERNET_INT_PRIORITY);
000760  21c0              MOVS     r1,#0xc0
000762  2038              MOVS     r0,#0x38
000764  f7fffffe          BL       IntPrioritySet
;;;641    	
;;;642    	  //
;;;643        // PF1/PK4/PK6 are used for Ethernet LEDs.
;;;644        //
;;;645        GPIOPinConfigure(GPIO_PK4_EN0LED0);
000768  488b              LDR      r0,|L1.2456|
00076a  f7fffffe          BL       GPIOPinConfigure
;;;646        GPIOPinConfigure(GPIO_PK6_EN0LED1);
00076e  488b              LDR      r0,|L1.2460|
000770  f7fffffe          BL       GPIOPinConfigure
;;;647        GPIOPinTypeEthernetLED(GPIO_PORTK_BASE, GPIO_PIN_4);
000774  2110              MOVS     r1,#0x10
000776  488a              LDR      r0,|L1.2464|
000778  f7fffffe          BL       GPIOPinTypeEthernetLED
;;;648        GPIOPinTypeEthernetLED(GPIO_PORTK_BASE, GPIO_PIN_6);
00077c  2140              MOVS     r1,#0x40
00077e  4888              LDR      r0,|L1.2464|
000780  f7fffffe          BL       GPIOPinTypeEthernetLED
;;;649    	
;;;650    	//sys_timeout(1000, sys_database_update, NULL);
;;;651    	web_server();
000784  f7fffffe          BL       web_server
;;;652    }
;;;653    
                          ENDP

                  phase_adj_handler PROC
;;;1497   
;;;1498   static void phase_adj_handler(sys_state_t *sys, char *arg)
000788  b570              PUSH     {r4-r6,lr}
;;;1499   {
00078a  4604              MOV      r4,r0
00078c  460d              MOV      r5,r1
;;;1500      uint8 phase;
;;;1501   	
;;;1502   	 phase = atoi(arg);
00078e  4628              MOV      r0,r5
000790  f7fffffe          BL       atoi
000794  b2c6              UXTB     r6,r0
;;;1503   	
;;;1504   	 sys->sub[sys->sub_model].phrase = phase - 1;
000796  1e70              SUBS     r0,r6,#1
000798  7ee2              LDRB     r2,[r4,#0x1b]
00079a  eb020242          ADD      r2,r2,r2,LSL #1
00079e  6be1              LDR      r1,[r4,#0x3c]
0007a0  f8010022          STRB     r0,[r1,r2,LSL #2]
;;;1505   	
;;;1506   	 sys_phrase_set(sys);
0007a4  4620              MOV      r0,r4
0007a6  f7fffffe          BL       sys_phrase_set
;;;1507   	
;;;1508   	 sys_send_msg(DATABASE_UPDATE_MSG, 1);
0007aa  2101              MOVS     r1,#1
0007ac  2002              MOVS     r0,#2
0007ae  f7fffffe          BL       sys_send_msg
;;;1509   }
0007b2  bd70              POP      {r4-r6,pc}
;;;1510   
                          ENDP

                  delay_switch_handler PROC
;;;1480   
;;;1481   static void delay_switch_handler(sys_state_t *sys, char *arg)
0007b4  b570              PUSH     {r4-r6,lr}
;;;1482   {
0007b6  4605              MOV      r5,r0
0007b8  460e              MOV      r6,r1
;;;1483   	 uint8 router;
;;;1484   	
;;;1485   	 router = atoi(arg);
0007ba  4630              MOV      r0,r6
0007bc  f7fffffe          BL       atoi
0007c0  b2c4              UXTB     r4,r0
;;;1486   	
;;;1487   	 OSAL_ASSERT(router > 0);
0007c2  2c00              CMP      r4,#0
0007c4  dc07              BGT      |L1.2006|
0007c6  4a77              LDR      r2,|L1.2468|
0007c8  a177              ADR      r1,|L1.2472|
0007ca  f2af3068          ADR      r0,|L1.1124|
0007ce  f7fffffe          BL       s_printf
0007d2  bf00              NOP      
                  |L1.2004|
0007d4  e7fe              B        |L1.2004|
                  |L1.2006|
;;;1488   	
;;;1489   	 if(router < DELAY_ROUTER_MAX + 1){
0007d6  2c04              CMP      r4,#4
0007d8  da02              BGE      |L1.2016|
;;;1490   		 sys->d_router = (delay_router_t)(router - 1);
0007da  1e60              SUBS     r0,r4,#1
0007dc  f8850026          STRB     r0,[r5,#0x26]
                  |L1.2016|
;;;1491   	 }
;;;1492   	 
;;;1493   	sys_delay_switch_to(sys);
0007e0  4628              MOV      r0,r5
0007e2  f7fffffe          BL       sys_delay_switch_to
;;;1494   	 
;;;1495   	sys_send_msg(DATABASE_UPDATE_MSG, 0);
0007e6  2100              MOVS     r1,#0
0007e8  2002              MOVS     r0,#2
0007ea  f7fffffe          BL       sys_send_msg
;;;1496   }
0007ee  bd70              POP      {r4-r6,pc}
;;;1497   
                          ENDP

                  delay_time_change_handler PROC
;;;1461   
;;;1462   static void delay_time_change_handler(sys_state_t *sys, char *arg)
0007f0  b570              PUSH     {r4-r6,lr}
;;;1463   {
0007f2  4604              MOV      r4,r0
0007f4  460e              MOV      r6,r1
;;;1464   	  uint16 time;
;;;1465   	
;;;1466   	  time = atoi(arg);
0007f6  4630              MOV      r0,r6
0007f8  f7fffffe          BL       atoi
0007fc  b285              UXTH     r5,r0
;;;1467   	
;;;1468   	  if(time <= SUB_DELAY_MAX){
0007fe  2dfa              CMP      r5,#0xfa
000800  dc13              BGT      |L1.2090|
;;;1469   			if(sys->d_router == DELAY_SUB){
000802  f8940026          LDRB     r0,[r4,#0x26]
000806  b958              CBNZ     r0,|L1.2080|
;;;1470   				sys->sub[sys->sub_model].delay = time;
000808  7ee1              LDRB     r1,[r4,#0x1b]
00080a  eb010141          ADD      r1,r1,r1,LSL #1
00080e  6be0              LDR      r0,[r4,#0x3c]
000810  eb000081          ADD      r0,r0,r1,LSL #2
000814  8145              STRH     r5,[r0,#0xa]
;;;1471   				sys_send_msg(DATABASE_UPDATE_MSG, 1);
000816  2101              MOVS     r1,#1
000818  2002              MOVS     r0,#2
00081a  f7fffffe          BL       sys_send_msg
00081e  e004              B        |L1.2090|
                  |L1.2080|
;;;1472   			}else{
;;;1473   				sys->line_delay_time = time;
000820  84a5              STRH     r5,[r4,#0x24]
;;;1474   				sys_send_msg(DATABASE_UPDATE_MSG, 0);
000822  2100              MOVS     r1,#0
000824  2002              MOVS     r0,#2
000826  f7fffffe          BL       sys_send_msg
                  |L1.2090|
;;;1475   			}
;;;1476   		}
;;;1477   		
;;;1478   		sys_delay_time_set(sys);
00082a  4620              MOV      r0,r4
00082c  f7fffffe          BL       sys_delay_time_set
;;;1479   }
000830  bd70              POP      {r4-r6,pc}
;;;1480   
                          ENDP

                  lineout_slope_select_handler PROC
;;;1448   
;;;1449   static void lineout_slope_select_handler(sys_state_t *sys, char *arg)
000832  b570              PUSH     {r4-r6,lr}
;;;1450   {
000834  4604              MOV      r4,r0
000836  460d              MOV      r5,r1
;;;1451   	 uint8 slope;
;;;1452   	
;;;1453   	 slope = atoi(arg);
000838  4628              MOV      r0,r5
00083a  f7fffffe          BL       atoi
00083e  b2c6              UXTB     r6,r0
;;;1454   	
;;;1455   	 sys->lineout_highpass_slope = slope;
000840  f8846022          STRB     r6,[r4,#0x22]
;;;1456   	
;;;1457   	 sys_line_highpass_set(sys);
000844  4620              MOV      r0,r4
000846  f7fffffe          BL       sys_line_highpass_set
;;;1458   	
;;;1459   	 sys_send_msg(DATABASE_UPDATE_MSG, 0);
00084a  2100              MOVS     r1,#0
00084c  2002              MOVS     r0,#2
00084e  f7fffffe          BL       sys_send_msg
;;;1460   }
000852  bd70              POP      {r4-r6,pc}
;;;1461   
                          ENDP

                  lineout_hp_change_handler PROC
;;;1433   
;;;1434   static void lineout_hp_change_handler(sys_state_t *sys, char *arg)
000854  b570              PUSH     {r4-r6,lr}
;;;1435   {
000856  4604              MOV      r4,r0
000858  460d              MOV      r5,r1
;;;1436   	 uint16 freq;
;;;1437   	
;;;1438   	 freq = atoi(arg);
00085a  4628              MOV      r0,r5
00085c  f7fffffe          BL       atoi
000860  b286              UXTH     r6,r0
;;;1439   	
;;;1440   	 if(freq >= LINEOUT_HIGHPASS_MIN){
000862  2e1e              CMP      r6,#0x1e
000864  db00              BLT      |L1.2152|
;;;1441   		 sys->lineout_highpass = freq;
000866  8426              STRH     r6,[r4,#0x20]
                  |L1.2152|
;;;1442   	 }
;;;1443   	 
;;;1444   	 sys_line_highpass_set(sys);
000868  4620              MOV      r0,r4
00086a  f7fffffe          BL       sys_line_highpass_set
;;;1445   	 
;;;1446   	 sys_send_msg(DATABASE_UPDATE_MSG, 0);
00086e  2100              MOVS     r1,#0
000870  2002              MOVS     r0,#2
000872  f7fffffe          BL       sys_send_msg
;;;1447   }
000876  bd70              POP      {r4-r6,pc}
;;;1448   
                          ENDP

                  input_gain_change_handler PROC
;;;1407   
;;;1408   static void input_gain_change_handler(sys_state_t *sys, char *arg)
000878  b570              PUSH     {r4-r6,lr}
;;;1409   {
00087a  4604              MOV      r4,r0
00087c  460e              MOV      r6,r1
;;;1410   	 int gain;
;;;1411   	
;;;1412   	 gain = atoi(arg);
00087e  4630              MOV      r0,r6
000880  f7fffffe          BL       atoi
000884  4605              MOV      r5,r0
;;;1413   	
;;;1414   	 if(gain <= INPUT_GAIN_MAX && gain >= INPUT_GAIN_MIN){
000886  2d0a              CMP      r5,#0xa
000888  dc20              BGT      |L1.2252|
00088a  f1150f0a          CMN      r5,#0xa
00088e  db1d              BLT      |L1.2252|
;;;1415   		 
;;;1416   		 sys->master_vol += (sys->input_gain - gain);
000890  69e1              LDR      r1,[r4,#0x1c]
000892  1b49              SUBS     r1,r1,r5
000894  6960              LDR      r0,[r4,#0x14]
000896  4408              ADD      r0,r0,r1
000898  6160              STR      r0,[r4,#0x14]
;;;1417   		 
;;;1418   		 sys->input_gain = gain;
00089a  61e5              STR      r5,[r4,#0x1c]
;;;1419   	 
;;;1420   	   if(sys->master_vol < MASTER_VOL_VALUE_MIN){
00089c  6960              LDR      r0,[r4,#0x14]
00089e  f1100f28          CMN      r0,#0x28
0008a2  da03              BGE      |L1.2220|
;;;1421   		   sys->master_vol = MASTER_VOL_VALUE_MIN;
0008a4  f06f0027          MVN      r0,#0x27
0008a8  6160              STR      r0,[r4,#0x14]
0008aa  e004              B        |L1.2230|
                  |L1.2220|
;;;1422   	   }else if(sys->master_vol > MASTER_VOL_VALUE_MAX){
0008ac  6960              LDR      r0,[r4,#0x14]
0008ae  280b              CMP      r0,#0xb
0008b0  dd01              BLE      |L1.2230|
;;;1423   		   sys->master_vol = MASTER_VOL_VALUE_MAX;
0008b2  200b              MOVS     r0,#0xb
0008b4  6160              STR      r0,[r4,#0x14]
                  |L1.2230|
;;;1424   	   }
;;;1425   		 
;;;1426   		 sys_master_vol_set(sys);
0008b6  4620              MOV      r0,r4
0008b8  f7fffffe          BL       sys_master_vol_set
;;;1427   		 
;;;1428   		 dis_send_msg(DIS_UPDATE, MENU_NUM);
0008bc  2116              MOVS     r1,#0x16
0008be  2001              MOVS     r0,#1
0008c0  f7fffffe          BL       dis_send_msg
;;;1429   		 sys_send_msg(DATABASE_UPDATE_MSG, 1);
0008c4  2101              MOVS     r1,#1
0008c6  2002              MOVS     r0,#2
0008c8  f7fffffe          BL       sys_send_msg
                  |L1.2252|
;;;1430   	 }
;;;1431   	 
;;;1432   }
0008cc  bd70              POP      {r4-r6,pc}
;;;1433   
                          ENDP

                  sub_hp_slope_select PROC
;;;1394   
;;;1395   static void sub_hp_slope_select(sys_state_t *sys, char *arg)
0008ce  b570              PUSH     {r4-r6,lr}
;;;1396   {
0008d0  4604              MOV      r4,r0
0008d2  460d              MOV      r5,r1
;;;1397   	 uint8 slope;
;;;1398   	
;;;1399   	 slope = atoi(arg);
0008d4  4628              MOV      r0,r5
0008d6  f7fffffe          BL       atoi
0008da  b2c6              UXTB     r6,r0
;;;1400   	
;;;1401   	 sys->sub[sys->sub_model].highpass_slope = slope;
0008dc  7ee1              LDRB     r1,[r4,#0x1b]
0008de  eb010141          ADD      r1,r1,r1,LSL #1
0008e2  6be0              LDR      r0,[r4,#0x3c]
0008e4  eb000081          ADD      r0,r0,r1,LSL #2
0008e8  7206              STRB     r6,[r0,#8]
;;;1402   	
;;;1403   	 sys_sub_highpass_set(sys);
0008ea  4620              MOV      r0,r4
0008ec  f7fffffe          BL       sys_sub_highpass_set
;;;1404   	
;;;1405   	 sys_send_msg(DATABASE_UPDATE_MSG, 1);
0008f0  2101              MOVS     r1,#1
0008f2  2002              MOVS     r0,#2
0008f4  f7fffffe          BL       sys_send_msg
;;;1406   }
0008f8  bd70              POP      {r4-r6,pc}
;;;1407   
                          ENDP

                  sub_hp_change_handler PROC
;;;1379   
;;;1380   static void sub_hp_change_handler(sys_state_t *sys, char *arg)
0008fa  b570              PUSH     {r4-r6,lr}
;;;1381   {
0008fc  4604              MOV      r4,r0
0008fe  460d              MOV      r5,r1
;;;1382   	 uint16 freq;
;;;1383   	
;;;1384   	 freq = atoi(arg);
000900  4628              MOV      r0,r5
000902  f7fffffe          BL       atoi
000906  b286              UXTH     r6,r0
;;;1385   	
;;;1386   	 if(freq >= SUB_HIGHPASS_MIN){
000908  2e14              CMP      r6,#0x14
00090a  db06              BLT      |L1.2330|
;;;1387   		 sys->sub[sys->sub_model].highpass = freq;
00090c  7ee1              LDRB     r1,[r4,#0x1b]
00090e  eb010141          ADD      r1,r1,r1,LSL #1
000912  6be0              LDR      r0,[r4,#0x3c]
000914  eb000081          ADD      r0,r0,r1,LSL #2
000918  80c6              STRH     r6,[r0,#6]
                  |L1.2330|
;;;1388   	 }
;;;1389   	 
;;;1390   	 sys_sub_highpass_set(sys);
00091a  4620              MOV      r0,r4
00091c  e04a              B        |L1.2484|
00091e  0000              DCW      0x0000
                  |L1.2336|
000920  504f5354          DCB      "POST"
                  |L1.2340|
000924  2000              DCB      " ",0
000926  00                DCB      0
000927  00                DCB      0
                  |L1.2344|
000928  696e7661          DCB      "invalid URI\r\n",0
00092c  6c696420
000930  5552490d
000934  0a00    
000936  00                DCB      0
000937  00                DCB      0
                  |L1.2360|
000938  68747470          DCB      "http_recv: already sending data\r\n",0
00093c  5f726563
000940  763a2061
000944  6c726561
000948  64792073
00094c  656e6469
000950  6e672064
000954  6174610d
000958  0a00    
00095a  00                DCB      0
00095b  00                DCB      0
                  |L1.2396|
                          DCD      gSystem_t
                  |L1.2400|
                          DCD      httpd_recv_buf
                  |L1.2404|
000964  77656220          DCB      "web task running\r\n",0
000968  7461736b
00096c  2072756e
000970  6e696e67
000974  0d0a00  
000977  00                DCB      0
                  |L1.2424|
000978  6e657463          DCB      "netconn_accept =%d\r\n",0
00097c  6f6e6e5f
000980  61636365
000984  7074203d
000988  25640d0a
00098c  00      
00098d  00                DCB      0
00098e  00                DCB      0
00098f  00                DCB      0
                  |L1.2448|
                          DCD      g_MACArray
                  |L1.2452|
                          DCD      gSysClock
                  |L1.2456|
                          DCD      0x00091005
                  |L1.2460|
                          DCD      0x00091805
                  |L1.2464|
                          DCD      0x40061000
                  |L1.2468|
                          DCD      |symbol_number.38|
                  |L1.2472|
0009a8  726f7574          DCB      "router > 0",0
0009ac  6572203e
0009b0  203000  
0009b3  00                DCB      0
                  |L1.2484|
0009b4  f7fffffe          BL       sys_sub_highpass_set
;;;1391   	 
;;;1392   	 sys_send_msg(DATABASE_UPDATE_MSG, 1);
0009b8  2101              MOVS     r1,#1
0009ba  2002              MOVS     r0,#2
0009bc  f7fffffe          BL       sys_send_msg
;;;1393   }
0009c0  bd70              POP      {r4-r6,pc}
;;;1394   
                          ENDP

                  sub_lp_slope_select_handler PROC
;;;1366   
;;;1367   static void sub_lp_slope_select_handler(sys_state_t *sys, char *arg)
0009c2  b570              PUSH     {r4-r6,lr}
;;;1368   {
0009c4  4604              MOV      r4,r0
0009c6  460d              MOV      r5,r1
;;;1369   	 uint8 slope;
;;;1370   	
;;;1371   	 slope = atoi(arg);
0009c8  4628              MOV      r0,r5
0009ca  f7fffffe          BL       atoi
0009ce  b2c6              UXTB     r6,r0
;;;1372   	
;;;1373   	 sys->sub[sys->sub_model].lowpass_slope = slope;
0009d0  7ee1              LDRB     r1,[r4,#0x1b]
0009d2  eb010141          ADD      r1,r1,r1,LSL #1
0009d6  6be0              LDR      r0,[r4,#0x3c]
0009d8  eb000081          ADD      r0,r0,r1,LSL #2
0009dc  7106              STRB     r6,[r0,#4]
;;;1374   	
;;;1375   	 sys_sub_lowpass_set(sys);
0009de  4620              MOV      r0,r4
0009e0  f7fffffe          BL       sys_sub_lowpass_set
;;;1376   	
;;;1377   	 sys_send_msg(DATABASE_UPDATE_MSG, 1);
0009e4  2101              MOVS     r1,#1
0009e6  2002              MOVS     r0,#2
0009e8  f7fffffe          BL       sys_send_msg
;;;1378   }
0009ec  bd70              POP      {r4-r6,pc}
;;;1379   
                          ENDP

                  sub_lp_change_handler PROC
;;;1351   
;;;1352   static void sub_lp_change_handler(sys_state_t *sys, char *arg)
0009ee  b570              PUSH     {r4-r6,lr}
;;;1353   {
0009f0  4604              MOV      r4,r0
0009f2  460d              MOV      r5,r1
;;;1354   	uint16 freq;
;;;1355   	
;;;1356   	freq = atoi(arg);
0009f4  4628              MOV      r0,r5
0009f6  f7fffffe          BL       atoi
0009fa  b286              UXTH     r6,r0
;;;1357   	
;;;1358   	if(freq >= SUB_LOWPASS_MIN){
0009fc  2e1e              CMP      r6,#0x1e
0009fe  db06              BLT      |L1.2574|
;;;1359   		sys->sub[sys->sub_model].lowpass = freq;
000a00  7ee1              LDRB     r1,[r4,#0x1b]
000a02  eb010141          ADD      r1,r1,r1,LSL #1
000a06  6be0              LDR      r0,[r4,#0x3c]
000a08  eb000081          ADD      r0,r0,r1,LSL #2
000a0c  8046              STRH     r6,[r0,#2]
                  |L1.2574|
;;;1360   	}
;;;1361   	
;;;1362   	sys_sub_lowpass_set(sys);
000a0e  4620              MOV      r0,r4
000a10  f7fffffe          BL       sys_sub_lowpass_set
;;;1363   	
;;;1364   	sys_send_msg(DATABASE_UPDATE_MSG, 1);
000a14  2101              MOVS     r1,#1
000a16  2002              MOVS     r0,#2
000a18  f7fffffe          BL       sys_send_msg
;;;1365   }
000a1c  bd70              POP      {r4-r6,pc}
;;;1366   
                          ENDP

                  do_setup_cgi_page PROC
;;;654    
;;;655    static void do_setup_cgi_page(int argv, char *argc[])
000a1e  b570              PUSH     {r4-r6,lr}
;;;656    {
000a20  4605              MOV      r5,r0
000a22  460c              MOV      r4,r1
;;;657    	 if(argv < 4) return;
000a24  2d04              CMP      r5,#4
000a26  da00              BGE      |L1.2602|
                  |L1.2600|
;;;658    	
;;;659    	 if(strcmp(argc[2]+5, "sub-lp-freq") == 0){
;;;660    		 sub_lp_change_handler(gSystem_t, argc[3]+6);
;;;661    	 }else if(strcmp(argc[2]+5, "cur-sub-lp-freq") == 0){
;;;662    		 sub_lp_slope_select_handler(gSystem_t, argc[3]+6);
;;;663    	 }else if(strcmp(argc[2]+5, "sub-hp-freq") == 0){
;;;664    		 sub_hp_change_handler(gSystem_t, argc[3]+6);
;;;665    	 }else if(strcmp(argc[2]+5, "cur-sub-hp-slop") == 0){
;;;666    		 sub_hp_slope_select(gSystem_t, argc[3]+6);
;;;667    	 }else if(strcmp(argc[2]+5, "input-gain-level") == 0){
;;;668    		 input_gain_change_handler(gSystem_t, argc[3]+6);
;;;669    	 }else if(strcmp(argc[2]+5, "lineout-hp-freq") == 0){
;;;670    		 lineout_hp_change_handler(gSystem_t, argc[3]+6);
;;;671    	 }else if(strcmp(argc[2]+5, "cur-lineout-hp-slop") == 0){
;;;672    		 lineout_slope_select_handler(gSystem_t, argc[3]+6);
;;;673    	 }else if(strcmp(argc[2]+5, "route-delay-time") == 0){
;;;674    		 delay_time_change_handler(gSystem_t, argc[3]+6);
;;;675    	 }else if(strcmp(argc[2]+5, "cur-route-delay-type") == 0){
;;;676    		 delay_switch_handler(gSystem_t, argc[3]+6);
;;;677    	 }else if(strcmp(argc[2]+5, "cur-phase-adjustment") == 0){
;;;678    		 phase_adj_handler(gSystem_t, argc[3]+6);
;;;679    	 }else if(strcmp(argc[2]+5, "reset") == 0){
;;;680    		 sys_factory_reset(gSystem_t);
;;;681    	 }
;;;682    }
000a28  bd70              POP      {r4-r6,pc}
                  |L1.2602|
000a2a  68a1              LDR      r1,[r4,#8]            ;659
000a2c  1d48              ADDS     r0,r1,#5              ;659
000a2e  a1f8              ADR      r1,|L1.3600|
000a30  f7fffffe          BL       strcmp
000a34  b930              CBNZ     r0,|L1.2628|
000a36  68e0              LDR      r0,[r4,#0xc]          ;660
000a38  1d81              ADDS     r1,r0,#6              ;660
000a3a  48f8              LDR      r0,|L1.3612|
000a3c  6800              LDR      r0,[r0,#0]            ;660  ; gSystem_t
000a3e  f7fffffe          BL       sub_lp_change_handler
000a42  e07e              B        |L1.2882|
                  |L1.2628|
000a44  68a1              LDR      r1,[r4,#8]            ;661
000a46  1d48              ADDS     r0,r1,#5              ;661
000a48  a1f5              ADR      r1,|L1.3616|
000a4a  f7fffffe          BL       strcmp
000a4e  b930              CBNZ     r0,|L1.2654|
000a50  68e0              LDR      r0,[r4,#0xc]          ;662
000a52  1d81              ADDS     r1,r0,#6              ;662
000a54  48f1              LDR      r0,|L1.3612|
000a56  6800              LDR      r0,[r0,#0]            ;662  ; gSystem_t
000a58  f7fffffe          BL       sub_lp_slope_select_handler
000a5c  e071              B        |L1.2882|
                  |L1.2654|
000a5e  68a1              LDR      r1,[r4,#8]            ;663
000a60  1d48              ADDS     r0,r1,#5              ;663
000a62  a1f3              ADR      r1,|L1.3632|
000a64  f7fffffe          BL       strcmp
000a68  b930              CBNZ     r0,|L1.2680|
000a6a  68e0              LDR      r0,[r4,#0xc]          ;664
000a6c  1d81              ADDS     r1,r0,#6              ;664
000a6e  48eb              LDR      r0,|L1.3612|
000a70  6800              LDR      r0,[r0,#0]            ;664  ; gSystem_t
000a72  f7fffffe          BL       sub_hp_change_handler
000a76  e064              B        |L1.2882|
                  |L1.2680|
000a78  68a1              LDR      r1,[r4,#8]            ;665
000a7a  1d48              ADDS     r0,r1,#5              ;665
000a7c  a1ef              ADR      r1,|L1.3644|
000a7e  f7fffffe          BL       strcmp
000a82  b930              CBNZ     r0,|L1.2706|
000a84  68e0              LDR      r0,[r4,#0xc]          ;666
000a86  1d81              ADDS     r1,r0,#6              ;666
000a88  48e4              LDR      r0,|L1.3612|
000a8a  6800              LDR      r0,[r0,#0]            ;666  ; gSystem_t
000a8c  f7fffffe          BL       sub_hp_slope_select
000a90  e057              B        |L1.2882|
                  |L1.2706|
000a92  68a1              LDR      r1,[r4,#8]            ;667
000a94  1d48              ADDS     r0,r1,#5              ;667
000a96  a1ed              ADR      r1,|L1.3660|
000a98  f7fffffe          BL       strcmp
000a9c  b930              CBNZ     r0,|L1.2732|
000a9e  68e0              LDR      r0,[r4,#0xc]          ;668
000aa0  1d81              ADDS     r1,r0,#6              ;668
000aa2  48de              LDR      r0,|L1.3612|
000aa4  6800              LDR      r0,[r0,#0]            ;668  ; gSystem_t
000aa6  f7fffffe          BL       input_gain_change_handler
000aaa  e04a              B        |L1.2882|
                  |L1.2732|
000aac  68a1              LDR      r1,[r4,#8]            ;669
000aae  1d48              ADDS     r0,r1,#5              ;669
000ab0  a1eb              ADR      r1,|L1.3680|
000ab2  f7fffffe          BL       strcmp
000ab6  b930              CBNZ     r0,|L1.2758|
000ab8  68e0              LDR      r0,[r4,#0xc]          ;670
000aba  1d81              ADDS     r1,r0,#6              ;670
000abc  48d7              LDR      r0,|L1.3612|
000abe  6800              LDR      r0,[r0,#0]            ;670  ; gSystem_t
000ac0  f7fffffe          BL       lineout_hp_change_handler
000ac4  e03d              B        |L1.2882|
                  |L1.2758|
000ac6  68a1              LDR      r1,[r4,#8]            ;671
000ac8  1d48              ADDS     r0,r1,#5              ;671
000aca  a1e9              ADR      r1,|L1.3696|
000acc  f7fffffe          BL       strcmp
000ad0  b930              CBNZ     r0,|L1.2784|
000ad2  68e0              LDR      r0,[r4,#0xc]          ;672
000ad4  1d81              ADDS     r1,r0,#6              ;672
000ad6  48d1              LDR      r0,|L1.3612|
000ad8  6800              LDR      r0,[r0,#0]            ;672  ; gSystem_t
000ada  f7fffffe          BL       lineout_slope_select_handler
000ade  e030              B        |L1.2882|
                  |L1.2784|
000ae0  68a1              LDR      r1,[r4,#8]            ;673
000ae2  1d48              ADDS     r0,r1,#5              ;673
000ae4  a1e7              ADR      r1,|L1.3716|
000ae6  f7fffffe          BL       strcmp
000aea  b930              CBNZ     r0,|L1.2810|
000aec  68e0              LDR      r0,[r4,#0xc]          ;674
000aee  1d81              ADDS     r1,r0,#6              ;674
000af0  48ca              LDR      r0,|L1.3612|
000af2  6800              LDR      r0,[r0,#0]            ;674  ; gSystem_t
000af4  f7fffffe          BL       delay_time_change_handler
000af8  e023              B        |L1.2882|
                  |L1.2810|
000afa  68a1              LDR      r1,[r4,#8]            ;675
000afc  1d48              ADDS     r0,r1,#5              ;675
000afe  a1e6              ADR      r1,|L1.3736|
000b00  f7fffffe          BL       strcmp
000b04  b930              CBNZ     r0,|L1.2836|
000b06  68e0              LDR      r0,[r4,#0xc]          ;676
000b08  1d81              ADDS     r1,r0,#6              ;676
000b0a  48c4              LDR      r0,|L1.3612|
000b0c  6800              LDR      r0,[r0,#0]            ;676  ; gSystem_t
000b0e  f7fffffe          BL       delay_switch_handler
000b12  e016              B        |L1.2882|
                  |L1.2836|
000b14  68a1              LDR      r1,[r4,#8]            ;677
000b16  1d48              ADDS     r0,r1,#5              ;677
000b18  a1e5              ADR      r1,|L1.3760|
000b1a  f7fffffe          BL       strcmp
000b1e  b930              CBNZ     r0,|L1.2862|
000b20  68e0              LDR      r0,[r4,#0xc]          ;678
000b22  1d81              ADDS     r1,r0,#6              ;678
000b24  48bd              LDR      r0,|L1.3612|
000b26  6800              LDR      r0,[r0,#0]            ;678  ; gSystem_t
000b28  f7fffffe          BL       phase_adj_handler
000b2c  e009              B        |L1.2882|
                  |L1.2862|
000b2e  68a1              LDR      r1,[r4,#8]            ;679
000b30  1d48              ADDS     r0,r1,#5              ;679
000b32  a1e5              ADR      r1,|L1.3784|
000b34  f7fffffe          BL       strcmp
000b38  b918              CBNZ     r0,|L1.2882|
000b3a  48b8              LDR      r0,|L1.3612|
000b3c  6800              LDR      r0,[r0,#0]            ;680  ; gSystem_t
000b3e  f7fffffe          BL       sys_factory_reset
                  |L1.2882|
000b42  bf00              NOP      
000b44  e770              B        |L1.2600|
;;;683    
                          ENDP

                  _load_setup_page_json_file PROC
;;;684    static void _load_setup_page_json_file(sys_state_t *sys, http_state_t *hs)
000b46  e92d41f0          PUSH     {r4-r8,lr}
;;;685    {
000b4a  4604              MOV      r4,r0
000b4c  460d              MOV      r5,r1
;;;686    	 JSON_OUTPUT_BEGIN();
000b4e  48e0              LDR      r0,|L1.3792|
000b50  49e0              LDR      r1,|L1.3796|
000b52  6008              STR      r0,[r1,#0]  ; pjson
000b54  f44f6100          MOV      r1,#0x800
000b58  f7fffffe          BL       __aeabi_memclr
000b5c  a1de              ADR      r1,|L1.3800|
000b5e  48dd              LDR      r0,|L1.3796|
000b60  6800              LDR      r0,[r0,#0]  ; pjson
000b62  f7fffffe          BL       strcat
000b66  48db              LDR      r0,|L1.3796|
000b68  6800              LDR      r0,[r0,#0]  ; pjson
000b6a  1c40              ADDS     r0,r0,#1
000b6c  49d9              LDR      r1,|L1.3796|
000b6e  6008              STR      r0,[r1,#0]  ; pjson
;;;687    	
;;;688    	 json_output_print("\"sub-mode\":\"%s\",", sub_name[sys->sub_model]);
000b70  7ee0              LDRB     r0,[r4,#0x1b]
000b72  4ada              LDR      r2,|L1.3804|
000b74  f8521020          LDR      r1,[r2,r0,LSL #2]
000b78  a0d9              ADR      r0,|L1.3808|
000b7a  f7fffffe          BL       json_output_print
;;;689    	 json_output_print("\"ip-address\":\"%s\",", ipaddr_ntoa(get_cur_ip()));
000b7e  f7fffffe          BL       get_cur_ip
000b82  4607              MOV      r7,r0
000b84  f7fffffe          BL       ipaddr_ntoa
000b88  4606              MOV      r6,r0
000b8a  4631              MOV      r1,r6
000b8c  a0d9              ADR      r0,|L1.3828|
000b8e  f7fffffe          BL       json_output_print
;;;690    	 json_output_print("\"master-volume\":\"%d\",", sys->master_vol);
000b92  a0dd              ADR      r0,|L1.3848|
000b94  6961              LDR      r1,[r4,#0x14]
000b96  f7fffffe          BL       json_output_print
;;;691    	 
;;;692    	
;;;693    	 json_output_print("\"sub-lp-freq\":\"%d\",", sys->sub[sys->sub_model].lowpass);
000b9a  7ee2              LDRB     r2,[r4,#0x1b]
000b9c  eb020242          ADD      r2,r2,r2,LSL #1
000ba0  6be0              LDR      r0,[r4,#0x3c]
000ba2  eb000082          ADD      r0,r0,r2,LSL #2
000ba6  8841              LDRH     r1,[r0,#2]
000ba8  a0dd              ADR      r0,|L1.3872|
000baa  f7fffffe          BL       json_output_print
;;;694    	 json_output_print("%s", SUB_LOWPASS_SLOPE);
000bae  49e1              LDR      r1,|L1.3892|
000bb0  a0e1              ADR      r0,|L1.3896|
000bb2  f7fffffe          BL       json_output_print
;;;695    	 json_output_print("\"cur-sub-lp-freq\":\"%d\",", sys->sub[sys->sub_model].lowpass_slope);
000bb6  7ee2              LDRB     r2,[r4,#0x1b]
000bb8  eb020242          ADD      r2,r2,r2,LSL #1
000bbc  6be0              LDR      r0,[r4,#0x3c]
000bbe  eb000082          ADD      r0,r0,r2,LSL #2
000bc2  7901              LDRB     r1,[r0,#4]
000bc4  a0dd              ADR      r0,|L1.3900|
000bc6  f7fffffe          BL       json_output_print
;;;696    	
;;;697    	 json_output_print("\"sub-hp-freq\":\"%d\",", sys->sub[sys->sub_model].highpass);
000bca  7ee2              LDRB     r2,[r4,#0x1b]
000bcc  eb020242          ADD      r2,r2,r2,LSL #1
000bd0  6be0              LDR      r0,[r4,#0x3c]
000bd2  eb000082          ADD      r0,r0,r2,LSL #2
000bd6  88c1              LDRH     r1,[r0,#6]
000bd8  a0de              ADR      r0,|L1.3924|
000bda  f7fffffe          BL       json_output_print
;;;698    	 json_output_print("%s", SUB_HIGHPASS_SLOPE);
000bde  49d5              LDR      r1,|L1.3892|
000be0  3160              ADDS     r1,r1,#0x60
000be2  a0d5              ADR      r0,|L1.3896|
000be4  f7fffffe          BL       json_output_print
;;;699    	 json_output_print("\"cur-sub-hp-slop\":\"%d\",", sys->sub[sys->sub_model].highpass_slope);
000be8  7ee2              LDRB     r2,[r4,#0x1b]
000bea  eb020242          ADD      r2,r2,r2,LSL #1
000bee  6be0              LDR      r0,[r4,#0x3c]
000bf0  eb000082          ADD      r0,r0,r2,LSL #2
000bf4  7a01              LDRB     r1,[r0,#8]
000bf6  a0dc              ADR      r0,|L1.3944|
000bf8  f7fffffe          BL       json_output_print
;;;700    	
;;;701    	 json_output_print("\"input-gain-level\":\"%d\",", sys->input_gain);
000bfc  a0e0              ADR      r0,|L1.3968|
000bfe  69e1              LDR      r1,[r4,#0x1c]
000c00  f7fffffe          BL       json_output_print
;;;702    	
;;;703    	 json_output_print("\"lineout-hp-freq\":\"%d\",", sys->lineout_highpass);
000c04  8c21              LDRH     r1,[r4,#0x20]
000c06  a0e5              ADR      r0,|L1.3996|
000c08  f7fffffe          BL       json_output_print
;;;704    	 json_output_print("%s", LINEOUT_HIGHPASS_SLOPE);
000c0c  49c9              LDR      r1,|L1.3892|
000c0e  31c0              ADDS     r1,r1,#0xc0
000c10  a0c9              ADR      r0,|L1.3896|
000c12  f7fffffe          BL       json_output_print
;;;705    	 json_output_print("\"cur-lineout-hp-slop\":\"%d\",", sys->lineout_highpass_slope);
000c16  f8941022          LDRB     r1,[r4,#0x22]
000c1a  a0e6              ADR      r0,|L1.4020|
000c1c  f7fffffe          BL       json_output_print
;;;706    	
;;;707    	 
;;;708    	 json_output_print("\"route-delay-time\":\"%d\",", (sys->d_router == DELAY_SUB ? (sys->sub[sys->sub_model].delay):(sys->line_delay_time)));
000c20  f8940026          LDRB     r0,[r4,#0x26]
000c24  b938              CBNZ     r0,|L1.3126|
000c26  7ee2              LDRB     r2,[r4,#0x1b]
000c28  eb020242          ADD      r2,r2,r2,LSL #1
000c2c  6be0              LDR      r0,[r4,#0x3c]
000c2e  eb000082          ADD      r0,r0,r2,LSL #2
000c32  8940              LDRH     r0,[r0,#0xa]
000c34  e000              B        |L1.3128|
                  |L1.3126|
000c36  8ca0              LDRH     r0,[r4,#0x24]
                  |L1.3128|
000c38  4601              MOV      r1,r0
000c3a  a0e5              ADR      r0,|L1.4048|
000c3c  f7fffffe          BL       json_output_print
;;;709    	 json_output_print("%s", ROUTER_DELAY);
000c40  49ea              LDR      r1,|L1.4076|
000c42  a0bd              ADR      r0,|L1.3896|
000c44  f7fffffe          BL       json_output_print
;;;710    	 json_output_print("\"cur-route-delay-type\":\"%d\",", sys->d_router + 1);
000c48  f8940026          LDRB     r0,[r4,#0x26]
000c4c  1c41              ADDS     r1,r0,#1
000c4e  a0e8              ADR      r0,|L1.4080|
000c50  f7fffffe          BL       json_output_print
;;;711    	 
;;;712    	 json_output_print("%s", PHRASE_ADJ);
000c54  49e5              LDR      r1,|L1.4076|
000c56  3170              ADDS     r1,r1,#0x70
000c58  a0b7              ADR      r0,|L1.3896|
000c5a  f7fffffe          BL       json_output_print
;;;713    	 json_output_print("\"cur-phase-adjustment\":\"%d\"", sys->sub[sys->sub_model].phrase + 1);
000c5e  7ee2              LDRB     r2,[r4,#0x1b]
000c60  eb020242          ADD      r2,r2,r2,LSL #1
000c64  6be0              LDR      r0,[r4,#0x3c]
000c66  f8100022          LDRB     r0,[r0,r2,LSL #2]
000c6a  1c41              ADDS     r1,r0,#1
000c6c  a0e8              ADR      r0,|L1.4112|
000c6e  f7fffffe          BL       json_output_print
;;;714    	 
;;;715    	 JSON_OUTPUT_END();
000c72  4898              LDR      r0,|L1.3796|
000c74  6800              LDR      r0,[r0,#0]  ; pjson
000c76  1c40              ADDS     r0,r0,#1
000c78  49ec              LDR      r1,|L1.4140|
000c7a  4288              CMP      r0,r1
000c7c  d307              BCC      |L1.3214|
000c7e  4aec              LDR      r2,|L1.4144|
000c80  a1ec              ADR      r1,|L1.4148|
000c82  f6af0070          ADR      r0,|L1.1044|
000c86  f7fffffe          BL       s_printf
000c8a  bf00              NOP      
                  |L1.3212|
000c8c  e7fe              B        |L1.3212|
                  |L1.3214|
000c8e  a1ef              ADR      r1,|L1.4172|
000c90  4890              LDR      r0,|L1.3796|
000c92  6800              LDR      r0,[r0,#0]  ; pjson
000c94  f7fffffe          BL       strcat
;;;716    	
;;;717    	 hs->file = json_output_buf;
000c98  488d              LDR      r0,|L1.3792|
000c9a  6068              STR      r0,[r5,#4]
;;;718    	 hs->left = strlen(json_output_buf);
000c9c  f7fffffe          BL       strlen
000ca0  60e8              STR      r0,[r5,#0xc]
;;;719    }
000ca2  e8bd81f0          POP      {r4-r8,pc}
;;;720    
                          ENDP

                  Cgi_setup_page_handler PROC
;;;724    
;;;725    static int Cgi_setup_page_handler(http_state_t *hs, int argv, char *argc[])
000ca6  b570              PUSH     {r4-r6,lr}
;;;726    {
000ca8  4606              MOV      r6,r0
000caa  460c              MOV      r4,r1
000cac  4615              MOV      r5,r2
;;;727    	SYS_TRACE("in Cgi_setup_page_handler\r\n");
000cae  a0e8              ADR      r0,|L1.4176|
000cb0  f7fffffe          BL       s_printf
;;;728    	
;;;729    	if(argv >= 2){
000cb4  2c02              CMP      r4,#2
000cb6  db0d              BLT      |L1.3284|
;;;730         if(strcmp(argc[1], "action=write") == 0){
000cb8  a1ec              ADR      r1,|L1.4204|
000cba  6868              LDR      r0,[r5,#4]
000cbc  f7fffffe          BL       strcmp
000cc0  b918              CBNZ     r0,|L1.3274|
;;;731    			 do_setup_cgi_page(argv,argc);
000cc2  4629              MOV      r1,r5
000cc4  4620              MOV      r0,r4
000cc6  f7fffffe          BL       do_setup_cgi_page
                  |L1.3274|
;;;732    		 }
;;;733    		   _load_setup_page_json_file(gSystem_t, hs);
000cca  4631              MOV      r1,r6
000ccc  4853              LDR      r0,|L1.3612|
000cce  6800              LDR      r0,[r0,#0]  ; gSystem_t
000cd0  f7fffffe          BL       _load_setup_page_json_file
                  |L1.3284|
;;;734    	}		
;;;735    	
;;;736    	return 0;
000cd4  2000              MOVS     r0,#0
;;;737    }
000cd6  bd70              POP      {r4-r6,pc}
;;;738    
                          ENDP

                  mute_state_control PROC
;;;1542   
;;;1543   static void mute_state_control(sys_state_t *sys, char *arg)
000cd8  b570              PUSH     {r4-r6,lr}
;;;1544   {
000cda  4604              MOV      r4,r0
000cdc  460d              MOV      r5,r1
;;;1545   	uint8 is_mute;
;;;1546   	
;;;1547   	is_mute = atoi(arg);
000cde  4628              MOV      r0,r5
000ce0  f7fffffe          BL       atoi
000ce4  b2c6              UXTB     r6,r0
;;;1548   	
;;;1549   	if(is_mute){
000ce6  b11e              CBZ      r6,|L1.3312|
;;;1550   		sys->is_mute = true;
000ce8  2001              MOVS     r0,#1
000cea  f8840049          STRB     r0,[r4,#0x49]
000cee  e002              B        |L1.3318|
                  |L1.3312|
;;;1551   	}else{
;;;1552   		sys->is_mute = false;
000cf0  2000              MOVS     r0,#0
000cf2  f8840049          STRB     r0,[r4,#0x49]
                  |L1.3318|
;;;1553   	}
;;;1554   	
;;;1555   	sys_master_vol_set(sys);
000cf6  4620              MOV      r0,r4
000cf8  f7fffffe          BL       sys_master_vol_set
;;;1556   	
;;;1557   	sys_send_msg(DATABASE_UPDATE_MSG, 0);
000cfc  2100              MOVS     r1,#0
000cfe  2002              MOVS     r0,#2
000d00  f7fffffe          BL       sys_send_msg
;;;1558   }
000d04  bd70              POP      {r4-r6,pc}
;;;1559   
                          ENDP

                  sense_timeout_select_handler PROC
;;;1627   
;;;1628   static void sense_timeout_select_handler(sys_state_t *sys, char *arg)
000d06  b570              PUSH     {r4-r6,lr}
;;;1629   {
000d08  4604              MOV      r4,r0
000d0a  460e              MOV      r6,r1
;;;1630   	 uint8 timeout;
;;;1631   	
;;;1632   	 timeout = atoi(arg);
000d0c  4630              MOV      r0,r6
000d0e  f7fffffe          BL       atoi
000d12  b2c5              UXTB     r5,r0
;;;1633   	
;;;1634   	 if(timeout <= SE_TIMEOUT_NUM){
000d14  2d05              CMP      r5,#5
000d16  dc06              BGT      |L1.3366|
;;;1635   		 sys->se_timeout = (sense_timeout_t)(timeout > 0? (timeout - 1):(0));
000d18  2d00              CMP      r5,#0
000d1a  dd01              BLE      |L1.3360|
000d1c  1e68              SUBS     r0,r5,#1
000d1e  e000              B        |L1.3362|
                  |L1.3360|
000d20  2000              MOVS     r0,#0
                  |L1.3362|
000d22  f8840028          STRB     r0,[r4,#0x28]
                  |L1.3366|
;;;1636   	 }
;;;1637   	 if(sys->method == AUDIO){
000d26  7ce0              LDRB     r0,[r4,#0x13]
000d28  2801              CMP      r0,#1
000d2a  d102              BNE      |L1.3378|
;;;1638   		update_detect_state(DETECT_AUDIO);
000d2c  2000              MOVS     r0,#0
000d2e  f7fffffe          BL       update_detect_state
                  |L1.3378|
;;;1639   	 }
;;;1640   	
;;;1641   	 sys_send_msg(DATABASE_UPDATE_MSG, 0);
000d32  2100              MOVS     r1,#0
000d34  2002              MOVS     r0,#2
000d36  f7fffffe          BL       sys_send_msg
;;;1642   }
000d3a  bd70              POP      {r4-r6,pc}
;;;1643   
                          ENDP

                  sense_level_select_handler PROC
;;;1610   
;;;1611   static void sense_level_select_handler(sys_state_t *sys, char *arg)
000d3c  b570              PUSH     {r4-r6,lr}
;;;1612   {
000d3e  4604              MOV      r4,r0
000d40  460e              MOV      r6,r1
;;;1613   	uint8 level;
;;;1614   	
;;;1615   	level = atoi(arg);
000d42  4630              MOV      r0,r6
000d44  f7fffffe          BL       atoi
000d48  b2c5              UXTB     r5,r0
;;;1616   	
;;;1617   	if(level <= SENSE_LEVEL_MAX && level >= SENSE_LEVEL_MIN){
000d4a  2d0f              CMP      r5,#0xf
000d4c  dc07              BGT      |L1.3422|
000d4e  2d03              CMP      r5,#3
000d50  db05              BLT      |L1.3422|
;;;1618   		sys->sense_thres = (sense_threshold_t)(level/3 - 1);
000d52  2003              MOVS     r0,#3
000d54  fb95f0f0          SDIV     r0,r5,r0
000d58  1e40              SUBS     r0,r0,#1
000d5a  f8840027          STRB     r0,[r4,#0x27]
                  |L1.3422|
;;;1619   	}
;;;1620   	if(sys->method == AUDIO){
000d5e  7ce0              LDRB     r0,[r4,#0x13]
000d60  2801              CMP      r0,#1
000d62  d102              BNE      |L1.3434|
;;;1621   		update_detect_state(DETECT_AUDIO);
000d64  2000              MOVS     r0,#0
000d66  f7fffffe          BL       update_detect_state
                  |L1.3434|
;;;1622   	}
;;;1623   	sys_audio_sense_thres_set(sys->sense_thres);
000d6a  f8940027          LDRB     r0,[r4,#0x27]
000d6e  f7fffffe          BL       sys_audio_sense_thres_set
;;;1624   	
;;;1625   	sys_send_msg(DATABASE_UPDATE_MSG, 0);
000d72  2100              MOVS     r1,#0
000d74  2002              MOVS     r0,#2
000d76  f7fffffe          BL       sys_send_msg
;;;1626   }
000d7a  bd70              POP      {r4-r6,pc}
;;;1627   
                          ENDP

                  power_on_method_select PROC
;;;1590   
;;;1591   static void power_on_method_select(sys_state_t *sys, char *arg)
000d7c  b570              PUSH     {r4-r6,lr}
;;;1592   {
000d7e  4604              MOV      r4,r0
000d80  460e              MOV      r6,r1
;;;1593   	 uint8 method;
;;;1594   	
;;;1595   	 method = atoi(arg);
000d82  4630              MOV      r0,r6
000d84  f7fffffe          BL       atoi
000d88  b2c5              UXTB     r5,r0
;;;1596   	 
;;;1597   	 if(method <= POWER_ON_MAX){
000d8a  2d04              CMP      r5,#4
000d8c  dc05              BGT      |L1.3482|
;;;1598   		 sys->method = (power_on_t)(method > 0 ? (method - 1):(0));
000d8e  2d00              CMP      r5,#0
000d90  dd01              BLE      |L1.3478|
000d92  1e68              SUBS     r0,r5,#1
000d94  e000              B        |L1.3480|
                  |L1.3478|
000d96  2000              MOVS     r0,#0
                  |L1.3480|
000d98  74e0              STRB     r0,[r4,#0x13]
                  |L1.3482|
;;;1599   	 }
;;;1600   	 
;;;1601   	 if(sys->method == AUDIO){
000d9a  7ce0              LDRB     r0,[r4,#0x13]
000d9c  2801              CMP      r0,#1
000d9e  d103              BNE      |L1.3496|
;;;1602   		 update_detect_state(DETECT_AUDIO);
000da0  2000              MOVS     r0,#0
000da2  f7fffffe          BL       update_detect_state
000da6  e007              B        |L1.3512|
                  |L1.3496|
;;;1603   	 }else if(sys->method == TRIGGER){
000da8  7ce0              LDRB     r0,[r4,#0x13]
000daa  2802              CMP      r0,#2
000dac  d104              BNE      |L1.3512|
;;;1604   		 sys->is_trigger_off_need_delay = true;
000dae  2001              MOVS     r0,#1
000db0  f884004d          STRB     r0,[r4,#0x4d]
;;;1605   		 update_detect_state(DETECT_TRIGGER);
000db4  f7fffffe          BL       update_detect_state
                  |L1.3512|
;;;1606   	 }
;;;1607   	
;;;1608   	 sys_send_msg(DATABASE_UPDATE_MSG, 0);
000db8  2100              MOVS     r1,#0
000dba  2002              MOVS     r0,#2
000dbc  f7fffffe          BL       sys_send_msg
;;;1609   }
000dc0  bd70              POP      {r4-r6,pc}
;;;1610   
                          ENDP

                  src_select_handler PROC
;;;1574   
;;;1575   static void src_select_handler(sys_state_t *sys, char *arg)
000dc2  b570              PUSH     {r4-r6,lr}
;;;1576   {
000dc4  4604              MOV      r4,r0
000dc6  460e              MOV      r6,r1
;;;1577   	uint8 src;
;;;1578   	
;;;1579   	src = atoi(arg);
000dc8  4630              MOV      r0,r6
000dca  f7fffffe          BL       atoi
000dce  b2c5              UXTB     r5,r0
;;;1580   	
;;;1581   	if(src <= SRC_NUM){
000dd0  2d03              CMP      r5,#3
000dd2  dc05              BGT      |L1.3552|
;;;1582   		sys->src = (src_t)(src > 0 ? (src - 1):(0));
000dd4  2d00              CMP      r5,#0
000dd6  dd01              BLE      |L1.3548|
000dd8  1e68              SUBS     r0,r5,#1
000dda  e000              B        |L1.3550|
                  |L1.3548|
000ddc  2000              MOVS     r0,#0
                  |L1.3550|
000dde  7620              STRB     r0,[r4,#0x18]
                  |L1.3552|
;;;1583   	}
;;;1584   	
;;;1585   	sys_input_select(sys->src);
000de0  7e20              LDRB     r0,[r4,#0x18]
000de2  f7fffffe          BL       sys_input_select
;;;1586   	
;;;1587   	sys_send_msg(DATABASE_UPDATE_MSG, 0);
000de6  2100              MOVS     r1,#0
000de8  2002              MOVS     r0,#2
000dea  f7fffffe          BL       sys_send_msg
;;;1588   }
000dee  bd70              POP      {r4-r6,pc}
;;;1589   
                          ENDP

                  preset_selcet_handler PROC
;;;1559   
;;;1560   static void preset_selcet_handler(sys_state_t *sys, char *arg)
000df0  b570              PUSH     {r4-r6,lr}
;;;1561   {
000df2  4605              MOV      r5,r0
000df4  460e              MOV      r6,r1
;;;1562   	uint8 preset;
;;;1563   	
;;;1564   	preset = atoi(arg);
000df6  4630              MOV      r0,r6
000df8  f7fffffe          BL       atoi
000dfc  b2c4              UXTB     r4,r0
;;;1565   	if(preset <= PRESET_NUM){
000dfe  2c06              CMP      r4,#6
000e00  dc03              BGT      |L1.3594|
;;;1566   		sys->preset = (preset_t)(preset > 0? (preset - 1):(0));
000e02  2c00              CMP      r4,#0
000e04  dd02              BLE      |L1.3596|
000e06  1e60              SUBS     r0,r4,#1
000e08  e139              B        |L1.4222|
                  |L1.3594|
000e0a  e139              B        |L1.4224|
                  |L1.3596|
000e0c  e136              B        |L1.4220|
000e0e  0000              DCW      0x0000
                  |L1.3600|
000e10  7375622d          DCB      "sub-lp-freq",0
000e14  6c702d66
000e18  72657100
                  |L1.3612|
                          DCD      gSystem_t
                  |L1.3616|
000e20  6375722d          DCB      "cur-sub-lp-freq",0
000e24  7375622d
000e28  6c702d66
000e2c  72657100
                  |L1.3632|
000e30  7375622d          DCB      "sub-hp-freq",0
000e34  68702d66
000e38  72657100
                  |L1.3644|
000e3c  6375722d          DCB      "cur-sub-hp-slop",0
000e40  7375622d
000e44  68702d73
000e48  6c6f7000
                  |L1.3660|
000e4c  696e7075          DCB      "input-gain-level",0
000e50  742d6761
000e54  696e2d6c
000e58  6576656c
000e5c  00      
000e5d  00                DCB      0
000e5e  00                DCB      0
000e5f  00                DCB      0
                  |L1.3680|
000e60  6c696e65          DCB      "lineout-hp-freq",0
000e64  6f75742d
000e68  68702d66
000e6c  72657100
                  |L1.3696|
000e70  6375722d          DCB      "cur-lineout-hp-slop",0
000e74  6c696e65
000e78  6f75742d
000e7c  68702d73
000e80  6c6f7000
                  |L1.3716|
000e84  726f7574          DCB      "route-delay-time",0
000e88  652d6465
000e8c  6c61792d
000e90  74696d65
000e94  00      
000e95  00                DCB      0
000e96  00                DCB      0
000e97  00                DCB      0
                  |L1.3736|
000e98  6375722d          DCB      "cur-route-delay-type",0
000e9c  726f7574
000ea0  652d6465
000ea4  6c61792d
000ea8  74797065
000eac  00      
000ead  00                DCB      0
000eae  00                DCB      0
000eaf  00                DCB      0
                  |L1.3760|
000eb0  6375722d          DCB      "cur-phase-adjustment",0
000eb4  70686173
000eb8  652d6164
000ebc  6a757374
000ec0  6d656e74
000ec4  00      
000ec5  00                DCB      0
000ec6  00                DCB      0
000ec7  00                DCB      0
                  |L1.3784|
000ec8  72657365          DCB      "reset",0
000ecc  7400    
000ece  00                DCB      0
000ecf  00                DCB      0
                  |L1.3792|
                          DCD      json_output_buf
                  |L1.3796|
                          DCD      pjson
                  |L1.3800|
000ed8  7b00              DCB      "{",0
000eda  00                DCB      0
000edb  00                DCB      0
                  |L1.3804|
                          DCD      sub_name
                  |L1.3808|
000ee0  22737562          DCB      """sub-mode"":""%s"",",0
000ee4  2d6d6f64
000ee8  65223a22
000eec  2573222c
000ef0  00      
000ef1  00                DCB      0
000ef2  00                DCB      0
000ef3  00                DCB      0
                  |L1.3828|
000ef4  2269702d          DCB      """ip-address"":""%s"",",0
000ef8  61646472
000efc  65737322
000f00  3a222573
000f04  222c00  
000f07  00                DCB      0
                  |L1.3848|
000f08  226d6173          DCB      """master-volume"":""%d"",",0
000f0c  7465722d
000f10  766f6c75
000f14  6d65223a
000f18  22256422
000f1c  2c00    
000f1e  00                DCB      0
000f1f  00                DCB      0
                  |L1.3872|
000f20  22737562          DCB      """sub-lp-freq"":""%d"",",0
000f24  2d6c702d
000f28  66726571
000f2c  223a2225
000f30  64222c00
                  |L1.3892|
                          DCD      ||.constdata||+0x204
                  |L1.3896|
000f38  257300            DCB      "%s",0
000f3b  00                DCB      0
                  |L1.3900|
000f3c  22637572          DCB      """cur-sub-lp-freq"":""%d"",",0
000f40  2d737562
000f44  2d6c702d
000f48  66726571
000f4c  223a2225
000f50  64222c00
                  |L1.3924|
000f54  22737562          DCB      """sub-hp-freq"":""%d"",",0
000f58  2d68702d
000f5c  66726571
000f60  223a2225
000f64  64222c00
                  |L1.3944|
000f68  22637572          DCB      """cur-sub-hp-slop"":""%d"",",0
000f6c  2d737562
000f70  2d68702d
000f74  736c6f70
000f78  223a2225
000f7c  64222c00
                  |L1.3968|
000f80  22696e70          DCB      """input-gain-level"":""%d"",",0
000f84  75742d67
000f88  61696e2d
000f8c  6c657665
000f90  6c223a22
000f94  2564222c
000f98  00      
000f99  00                DCB      0
000f9a  00                DCB      0
000f9b  00                DCB      0
                  |L1.3996|
000f9c  226c696e          DCB      """lineout-hp-freq"":""%d"",",0
000fa0  656f7574
000fa4  2d68702d
000fa8  66726571
000fac  223a2225
000fb0  64222c00
                  |L1.4020|
000fb4  22637572          DCB      """cur-lineout-hp-slop"":""%d"",",0
000fb8  2d6c696e
000fbc  656f7574
000fc0  2d68702d
000fc4  736c6f70
000fc8  223a2225
000fcc  64222c00
                  |L1.4048|
000fd0  22726f75          DCB      """route-delay-time"":""%d"",",0
000fd4  74652d64
000fd8  656c6179
000fdc  2d74696d
000fe0  65223a22
000fe4  2564222c
000fe8  00      
000fe9  00                DCB      0
000fea  00                DCB      0
000feb  00                DCB      0
                  |L1.4076|
                          DCD      ||.constdata||+0x328
                  |L1.4080|
000ff0  22637572          DCB      """cur-route-delay-type"":""%d"",",0
000ff4  2d726f75
000ff8  74652d64
000ffc  656c6179
001000  2d747970
001004  65223a22
001008  2564222c
00100c  00      
00100d  00                DCB      0
00100e  00                DCB      0
00100f  00                DCB      0
                  |L1.4112|
001010  22637572          DCB      """cur-phase-adjustment"":""%d""",0
001014  2d706861
001018  73652d61
00101c  646a7573
001020  746d656e
001024  74223a22
001028  25642200
                  |L1.4140|
                          DCD      json_output_buf+0x7ff
                  |L1.4144|
                          DCD      |symbol_number.30|
                  |L1.4148|
001034  4a534f4e          DCB      "JSON_BUF_OVERFLOW(1)",0
001038  5f425546
00103c  5f4f5645
001040  52464c4f
001044  57283129
001048  00      
001049  00                DCB      0
00104a  00                DCB      0
00104b  00                DCB      0
                  |L1.4172|
00104c  7d00              DCB      "}",0
00104e  00                DCB      0
00104f  00                DCB      0
                  |L1.4176|
001050  696e2043          DCB      "in Cgi_setup_page_handler\r\n",0
001054  67695f73
001058  65747570
00105c  5f706167
001060  655f6861
001064  6e646c65
001068  720d0a00
                  |L1.4204|
00106c  61637469          DCB      "action=write",0
001070  6f6e3d77
001074  72697465
001078  00      
001079  00                DCB      0
00107a  00                DCB      0
00107b  00                DCB      0
                  |L1.4220|
00107c  2000              MOVS     r0,#0
                  |L1.4222|
00107e  7668              STRB     r0,[r5,#0x19]
                  |L1.4224|
;;;1567   	}
;;;1568   	
;;;1569   	sys_load_peq(sys);
001080  4628              MOV      r0,r5
001082  f7fffffe          BL       sys_load_peq
;;;1570   	
;;;1571   	sys_send_msg(DATABASE_UPDATE_MSG, 0);
001086  2100              MOVS     r1,#0
001088  2002              MOVS     r0,#2
00108a  f7fffffe          BL       sys_send_msg
;;;1572   }
00108e  bd70              POP      {r4-r6,pc}
;;;1573   
                          ENDP

                  master_volume_control PROC
;;;1526   
;;;1527   static void master_volume_control(sys_state_t *sys, char *arg)
001090  b570              PUSH     {r4-r6,lr}
;;;1528   {
001092  4604              MOV      r4,r0
001094  460e              MOV      r6,r1
;;;1529   	int vol;
;;;1530   	
;;;1531   	vol = atoi(arg);
001096  4630              MOV      r0,r6
001098  f7fffffe          BL       atoi
00109c  4605              MOV      r5,r0
;;;1532   	if(vol <= VOLUME_VALUE_MAX(sys->input_gain) && vol >= VOLUME_VALUE_MIN(sys->input_gain)){
00109e  69e0              LDR      r0,[r4,#0x1c]
0010a0  2800              CMP      r0,#0
0010a2  db03              BLT      |L1.4268|
0010a4  69e0              LDR      r0,[r4,#0x1c]
0010a6  f1c0000b          RSB      r0,r0,#0xb
0010aa  e000              B        |L1.4270|
                  |L1.4268|
0010ac  200b              MOVS     r0,#0xb
                  |L1.4270|
0010ae  42a8              CMP      r0,r5
0010b0  db0c              BLT      |L1.4300|
0010b2  69e0              LDR      r0,[r4,#0x1c]
0010b4  2800              CMP      r0,#0
0010b6  db02              BLT      |L1.4286|
0010b8  f06f0027          MVN      r0,#0x27
0010bc  e003              B        |L1.4294|
                  |L1.4286|
0010be  f06f0127          MVN      r1,#0x27
0010c2  69e0              LDR      r0,[r4,#0x1c]
0010c4  1a08              SUBS     r0,r1,r0
                  |L1.4294|
0010c6  42a8              CMP      r0,r5
0010c8  dc00              BGT      |L1.4300|
;;;1533   		sys->master_vol = vol;
0010ca  6165              STR      r5,[r4,#0x14]
                  |L1.4300|
;;;1534   	}
;;;1535   	
;;;1536   	if(sys->is_mute == true) sys->is_mute = false;
0010cc  f8940049          LDRB     r0,[r4,#0x49]
0010d0  2801              CMP      r0,#1
0010d2  d102              BNE      |L1.4314|
0010d4  2000              MOVS     r0,#0
0010d6  f8840049          STRB     r0,[r4,#0x49]
                  |L1.4314|
;;;1537   	
;;;1538   	sys_master_vol_set(sys);
0010da  4620              MOV      r0,r4
0010dc  f7fffffe          BL       sys_master_vol_set
;;;1539   	
;;;1540   	sys_send_msg(DATABASE_UPDATE_MSG, 0);
0010e0  2100              MOVS     r1,#0
0010e2  2002              MOVS     r0,#2
0010e4  f7fffffe          BL       sys_send_msg
;;;1541   }
0010e8  bd70              POP      {r4-r6,pc}
;;;1542   
                          ENDP

                  sub_select_handler PROC
;;;1511   
;;;1512   static void sub_select_handler(sys_state_t *sys, char *arg)
0010ea  b570              PUSH     {r4-r6,lr}
;;;1513   {
0010ec  4605              MOV      r5,r0
0010ee  460e              MOV      r6,r1
;;;1514   	uint8 sub_index;
;;;1515   	
;;;1516   	sub_index = atoi(arg);
0010f0  4630              MOV      r0,r6
0010f2  f7fffffe          BL       atoi
0010f6  b2c4              UXTB     r4,r0
;;;1517   	if(sub_index <= SUB_MODEL_NUM){
0010f8  2c0d              CMP      r4,#0xd
0010fa  dc05              BGT      |L1.4360|
;;;1518   		sys->sub_model = (sub_model_t)(sub_index > 0 ? (sub_index - 1):(0));
0010fc  2c00              CMP      r4,#0
0010fe  dd01              BLE      |L1.4356|
001100  1e60              SUBS     r0,r4,#1
001102  e000              B        |L1.4358|
                  |L1.4356|
001104  2000              MOVS     r0,#0
                  |L1.4358|
001106  76e8              STRB     r0,[r5,#0x1b]
                  |L1.4360|
;;;1519   	}
;;;1520   	
;;;1521   	sys_sub_preset_load(sys);
001108  4628              MOV      r0,r5
00110a  f7fffffe          BL       sys_sub_preset_load
;;;1522   	
;;;1523   	sys_send_msg(DATABASE_UPDATE_MSG, 0);
00110e  2100              MOVS     r1,#0
001110  2002              MOVS     r0,#2
001112  f7fffffe          BL       sys_send_msg
;;;1524   }
001116  bd70              POP      {r4-r6,pc}
;;;1525   
                          ENDP

                  do_home_cgi_page PROC
;;;738    
;;;739    static void do_home_cgi_page(int argv, char *argc[])
001118  b570              PUSH     {r4-r6,lr}
;;;740    {
00111a  4605              MOV      r5,r0
00111c  460c              MOV      r4,r1
;;;741    	if(argv < 4) return;
00111e  2d04              CMP      r5,#4
001120  da00              BGE      |L1.4388|
                  |L1.4386|
;;;742    
;;;743    	//SYS_TRACE("%s----%s\r\n", argc[2], argc[3]);
;;;744    	
;;;745    	if(strcmp(argc[2]+5, "current-sub") ==0){
;;;746    		sub_select_handler(gSystem_t, argc[3]+6);
;;;747    	}else if(strcmp(argc[2]+5, "master-volume") == 0){
;;;748    		master_volume_control(gSystem_t, argc[3]+6);
;;;749    	}else if(strcmp(argc[2]+5, "cur-preset-item") == 0){
;;;750    		preset_selcet_handler(gSystem_t, argc[3]+6);
;;;751    	}else if(strcmp(argc[2]+5, "cur-source-index") == 0){
;;;752    		src_select_handler(gSystem_t, argc[3]+6);
;;;753    	}else if(strcmp(argc[2]+5, "cur-power-on-router") == 0){
;;;754    		power_on_method_select(gSystem_t, argc[3]+6);
;;;755    	}else if(strcmp(argc[2]+5, "audio-level") == 0){
;;;756    		sense_level_select_handler(gSystem_t, argc[3]+6);
;;;757    	}else if(strcmp(argc[2]+5, "cur-auto-off-time") == 0){
;;;758    		sense_timeout_select_handler(gSystem_t, argc[3]+6);
;;;759    	}else if(strcmp(argc[2]+5, "mute-state") == 0){
;;;760    		mute_state_control(gSystem_t, argc[3]+6);
;;;761    	}
;;;762    	
;;;763    	dis_send_msg(DIS_UPDATE, MENU_NUM);
;;;764    }
001122  bd70              POP      {r4-r6,pc}
                  |L1.4388|
001124  68a1              LDR      r1,[r4,#8]            ;745
001126  1d48              ADDS     r0,r1,#5              ;745
001128  a1f7              ADR      r1,|L1.5384|
00112a  f7fffffe          BL       strcmp
00112e  b930              CBNZ     r0,|L1.4414|
001130  68e0              LDR      r0,[r4,#0xc]          ;746
001132  1d81              ADDS     r1,r0,#6              ;746
001134  48f7              LDR      r0,|L1.5396|
001136  6800              LDR      r0,[r0,#0]            ;746  ; gSystem_t
001138  f7fffffe          BL       sub_select_handler
00113c  e059              B        |L1.4594|
                  |L1.4414|
00113e  68a1              LDR      r1,[r4,#8]            ;747
001140  1d48              ADDS     r0,r1,#5              ;747
001142  a1f5              ADR      r1,|L1.5400|
001144  f7fffffe          BL       strcmp
001148  b930              CBNZ     r0,|L1.4440|
00114a  68e0              LDR      r0,[r4,#0xc]          ;748
00114c  1d81              ADDS     r1,r0,#6              ;748
00114e  48f1              LDR      r0,|L1.5396|
001150  6800              LDR      r0,[r0,#0]            ;748  ; gSystem_t
001152  f7fffffe          BL       master_volume_control
001156  e04c              B        |L1.4594|
                  |L1.4440|
001158  68a1              LDR      r1,[r4,#8]            ;749
00115a  1d48              ADDS     r0,r1,#5              ;749
00115c  a1f2              ADR      r1,|L1.5416|
00115e  f7fffffe          BL       strcmp
001162  b930              CBNZ     r0,|L1.4466|
001164  68e0              LDR      r0,[r4,#0xc]          ;750
001166  1d81              ADDS     r1,r0,#6              ;750
001168  48ea              LDR      r0,|L1.5396|
00116a  6800              LDR      r0,[r0,#0]            ;750  ; gSystem_t
00116c  f7fffffe          BL       preset_selcet_handler
001170  e03f              B        |L1.4594|
                  |L1.4466|
001172  68a1              LDR      r1,[r4,#8]            ;751
001174  1d48              ADDS     r0,r1,#5              ;751
001176  a1f0              ADR      r1,|L1.5432|
001178  f7fffffe          BL       strcmp
00117c  b930              CBNZ     r0,|L1.4492|
00117e  68e0              LDR      r0,[r4,#0xc]          ;752
001180  1d81              ADDS     r1,r0,#6              ;752
001182  48e4              LDR      r0,|L1.5396|
001184  6800              LDR      r0,[r0,#0]            ;752  ; gSystem_t
001186  f7fffffe          BL       src_select_handler
00118a  e032              B        |L1.4594|
                  |L1.4492|
00118c  68a1              LDR      r1,[r4,#8]            ;753
00118e  1d48              ADDS     r0,r1,#5              ;753
001190  a1ee              ADR      r1,|L1.5452|
001192  f7fffffe          BL       strcmp
001196  b930              CBNZ     r0,|L1.4518|
001198  68e0              LDR      r0,[r4,#0xc]          ;754
00119a  1d81              ADDS     r1,r0,#6              ;754
00119c  48dd              LDR      r0,|L1.5396|
00119e  6800              LDR      r0,[r0,#0]            ;754  ; gSystem_t
0011a0  f7fffffe          BL       power_on_method_select
0011a4  e025              B        |L1.4594|
                  |L1.4518|
0011a6  68a1              LDR      r1,[r4,#8]            ;755
0011a8  1d48              ADDS     r0,r1,#5              ;755
0011aa  a1ed              ADR      r1,|L1.5472|
0011ac  f7fffffe          BL       strcmp
0011b0  b930              CBNZ     r0,|L1.4544|
0011b2  68e0              LDR      r0,[r4,#0xc]          ;756
0011b4  1d81              ADDS     r1,r0,#6              ;756
0011b6  48d7              LDR      r0,|L1.5396|
0011b8  6800              LDR      r0,[r0,#0]            ;756  ; gSystem_t
0011ba  f7fffffe          BL       sense_level_select_handler
0011be  e018              B        |L1.4594|
                  |L1.4544|
0011c0  68a1              LDR      r1,[r4,#8]            ;757
0011c2  1d48              ADDS     r0,r1,#5              ;757
0011c4  a1e9              ADR      r1,|L1.5484|
0011c6  f7fffffe          BL       strcmp
0011ca  b930              CBNZ     r0,|L1.4570|
0011cc  68e0              LDR      r0,[r4,#0xc]          ;758
0011ce  1d81              ADDS     r1,r0,#6              ;758
0011d0  48d0              LDR      r0,|L1.5396|
0011d2  6800              LDR      r0,[r0,#0]            ;758  ; gSystem_t
0011d4  f7fffffe          BL       sense_timeout_select_handler
0011d8  e00b              B        |L1.4594|
                  |L1.4570|
0011da  68a1              LDR      r1,[r4,#8]            ;759
0011dc  1d48              ADDS     r0,r1,#5              ;759
0011de  a1e8              ADR      r1,|L1.5504|
0011e0  f7fffffe          BL       strcmp
0011e4  b928              CBNZ     r0,|L1.4594|
0011e6  68e0              LDR      r0,[r4,#0xc]          ;760
0011e8  1d81              ADDS     r1,r0,#6              ;760
0011ea  48ca              LDR      r0,|L1.5396|
0011ec  6800              LDR      r0,[r0,#0]            ;760  ; gSystem_t
0011ee  f7fffffe          BL       mute_state_control
                  |L1.4594|
0011f2  2116              MOVS     r1,#0x16              ;763
0011f4  2001              MOVS     r0,#1                 ;763
0011f6  f7fffffe          BL       dis_send_msg
0011fa  bf00              NOP      
0011fc  e791              B        |L1.4386|
;;;765    
                          ENDP

                  _load_home_page_json_file PROC
;;;767    
;;;768    static void _load_home_page_json_file(sys_state_t *sys, http_state_t *hs)
0011fe  b570              PUSH     {r4-r6,lr}
;;;769    {
001200  4604              MOV      r4,r0
001202  460d              MOV      r5,r1
;;;770    	 JSON_OUTPUT_BEGIN();
001204  48e1              LDR      r0,|L1.5516|
001206  49e2              LDR      r1,|L1.5520|
001208  6008              STR      r0,[r1,#0]  ; pjson
00120a  f44f6100          MOV      r1,#0x800
00120e  f7fffffe          BL       __aeabi_memclr
001212  f2af313c          ADR      r1,|L1.3800|
001216  48de              LDR      r0,|L1.5520|
001218  6800              LDR      r0,[r0,#0]  ; pjson
00121a  f7fffffe          BL       strcat
00121e  48dc              LDR      r0,|L1.5520|
001220  6800              LDR      r0,[r0,#0]  ; pjson
001222  1c40              ADDS     r0,r0,#1
001224  49da              LDR      r1,|L1.5520|
001226  6008              STR      r0,[r1,#0]  ; pjson
;;;771    	
;;;772    	 json_output_print("\"dsp-name\":\"%s\",", "Traid");
001228  a1da              ADR      r1,|L1.5524|
00122a  a0dc              ADR      r0,|L1.5532|
00122c  f7fffffe          BL       json_output_print
;;;773    	 json_output_print("%s", SUB_MODE);
001230  49df              LDR      r1,|L1.5552|
001232  f2af20fc          ADR      r0,|L1.3896|
001236  f7fffffe          BL       json_output_print
;;;774    	 json_output_print("\"current-sub\":\"%d\",", sys->sub_model + 1);
00123a  7ee0              LDRB     r0,[r4,#0x1b]
00123c  1c41              ADDS     r1,r0,#1
00123e  a0dd              ADR      r0,|L1.5556|
001240  f7fffffe          BL       json_output_print
;;;775    	 json_output_print("\"master-volume\":\"%d\",", sys->master_vol);
001244  f2af3040          ADR      r0,|L1.3848|
001248  6961              LDR      r1,[r4,#0x14]
00124a  f7fffffe          BL       json_output_print
;;;776    	 json_output_print("\"mute-state\":\"%d\",", (sys->is_mute == true?(1):(0)));
00124e  f8940049          LDRB     r0,[r4,#0x49]
001252  2801              CMP      r0,#1
001254  d100              BNE      |L1.4696|
001256  e000              B        |L1.4698|
                  |L1.4696|
001258  2000              MOVS     r0,#0
                  |L1.4698|
00125a  4601              MOV      r1,r0
00125c  a0da              ADR      r0,|L1.5576|
00125e  f7fffffe          BL       json_output_print
;;;777    	 json_output_print("%s", AUDIO_LEVEL);
001262  49de              LDR      r1,|L1.5596|
001264  f2af3030          ADR      r0,|L1.3896|
001268  f7fffffe          BL       json_output_print
;;;778    	 json_output_print("\"audio-level\":\"%d\",", (sys->sense_thres + 1)*3);
00126c  f8940027          LDRB     r0,[r4,#0x27]
001270  1c40              ADDS     r0,r0,#1
001272  eb000140          ADD      r1,r0,r0,LSL #1
001276  a0da              ADR      r0,|L1.5600|
001278  f7fffffe          BL       json_output_print
;;;779    	 json_output_print("\"cur-auto-off-time\":\"%d\",", sys->se_timeout + 1);
00127c  f8940028          LDRB     r0,[r4,#0x28]
001280  1c41              ADDS     r1,r0,#1
001282  a0dc              ADR      r0,|L1.5620|
001284  f7fffffe          BL       json_output_print
;;;780    	 json_output_print("%s", POWER_ROUTING);
001288  49d4              LDR      r1,|L1.5596|
00128a  3190              ADDS     r1,r1,#0x90
00128c  f2af3058          ADR      r0,|L1.3896|
001290  f7fffffe          BL       json_output_print
;;;781    	 json_output_print("\"cur-power-on-router\":\"%d\",", sys->method + 1);
001294  7ce0              LDRB     r0,[r4,#0x13]
001296  1c41              ADDS     r1,r0,#1
001298  a0dd              ADR      r0,|L1.5648|
00129a  f7fffffe          BL       json_output_print
;;;782    	 json_output_print("%s", INPUT_SOURCE);
00129e  49e3              LDR      r1,|L1.5676|
0012a0  f2af306c          ADR      r0,|L1.3896|
0012a4  f7fffffe          BL       json_output_print
;;;783    	 json_output_print("\"cur-source-index\":\"%d\",", sys->src + 1);
0012a8  7e20              LDRB     r0,[r4,#0x18]
0012aa  1c41              ADDS     r1,r0,#1
0012ac  a0e0              ADR      r0,|L1.5680|
0012ae  f7fffffe          BL       json_output_print
;;;784    	 json_output_print("%s", EQ_PRESET);
0012b2  49de              LDR      r1,|L1.5676|
0012b4  3168              ADDS     r1,r1,#0x68
0012b6  f2af3080          ADR      r0,|L1.3896|
0012ba  f7fffffe          BL       json_output_print
;;;785    	 json_output_print("\"cur-preset-item\":\"%d\"", sys->preset + 1);
0012be  7e60              LDRB     r0,[r4,#0x19]
0012c0  1c41              ADDS     r1,r0,#1
0012c2  a0e2              ADR      r0,|L1.5708|
0012c4  f7fffffe          BL       json_output_print
;;;786    	 
;;;787    	 JSON_OUTPUT_END();
0012c8  48b1              LDR      r0,|L1.5520|
0012ca  6800              LDR      r0,[r0,#0]  ; pjson
0012cc  1c40              ADDS     r0,r0,#1
0012ce  49e5              LDR      r1,|L1.5732|
0012d0  4288              CMP      r0,r1
0012d2  d308              BCC      |L1.4838|
0012d4  4ae4              LDR      r2,|L1.5736|
0012d6  f2af21a4          ADR      r1,|L1.4148|
0012da  f6af60c8          ADR      r0,|L1.1044|
0012de  f7fffffe          BL       s_printf
0012e2  bf00              NOP      
                  |L1.4836|
0012e4  e7fe              B        |L1.4836|
                  |L1.4838|
0012e6  f2af219c          ADR      r1,|L1.4172|
0012ea  48a9              LDR      r0,|L1.5520|
0012ec  6800              LDR      r0,[r0,#0]  ; pjson
0012ee  f7fffffe          BL       strcat
;;;788    	
;;;789    	 hs->file = json_output_buf;
0012f2  48a6              LDR      r0,|L1.5516|
0012f4  6068              STR      r0,[r5,#4]
;;;790    	 hs->left = strlen(json_output_buf);
0012f6  f7fffffe          BL       strlen
0012fa  60e8              STR      r0,[r5,#0xc]
;;;791    }
0012fc  bd70              POP      {r4-r6,pc}
;;;792    
                          ENDP

                  Cgi_home_page_handler PROC
;;;793    static int Cgi_home_page_handler(http_state_t *hs, int argv, char *argc[])
0012fe  b570              PUSH     {r4-r6,lr}
;;;794    {
001300  4606              MOV      r6,r0
001302  460c              MOV      r4,r1
001304  4615              MOV      r5,r2
;;;795    	 if(argv >= 2){
001306  2c02              CMP      r4,#2
001308  db0e              BLT      |L1.4904|
;;;796         if(strcmp(argc[1], "action=write") == 0){
00130a  f2af21a0          ADR      r1,|L1.4204|
00130e  6868              LDR      r0,[r5,#4]
001310  f7fffffe          BL       strcmp
001314  b918              CBNZ     r0,|L1.4894|
;;;797    			 do_home_cgi_page(argv,argc);
001316  4629              MOV      r1,r5
001318  4620              MOV      r0,r4
00131a  f7fffffe          BL       do_home_cgi_page
                  |L1.4894|
;;;798    		 }
;;;799    		 _load_home_page_json_file(gSystem_t,hs);
00131e  4631              MOV      r1,r6
001320  487c              LDR      r0,|L1.5396|
001322  6800              LDR      r0,[r0,#0]  ; gSystem_t
001324  f7fffffe          BL       _load_home_page_json_file
                  |L1.4904|
;;;800    	}		
;;;801    	return 0;
001328  2000              MOVS     r0,#0
;;;802    }
00132a  bd70              POP      {r4-r6,pc}
;;;803    
                          ENDP

                  req_save_handler PROC
;;;1328   
;;;1329   static void req_save_handler(sys_state_t *sys, char *a, char *b, char *g)
00132c  e92d4ff8          PUSH     {r3-r11,lr}
;;;1330   {
001330  4604              MOV      r4,r0
001332  460d              MOV      r5,r1
001334  4616              MOV      r6,r2
001336  461f              MOV      r7,r3
;;;1331   	 uint32 var_a = atoi(a);
001338  4628              MOV      r0,r5
00133a  f7fffffe          BL       atoi
00133e  4680              MOV      r8,r0
;;;1332   	 uint32 var_b = atoi(b);
001340  4630              MOV      r0,r6
001342  f7fffffe          BL       atoi
001346  4681              MOV      r9,r0
;;;1333   	 uint32 var_g = atoi(g);
001348  4638              MOV      r0,r7
00134a  f7fffffe          BL       atoi
00134e  4682              MOV      r10,r0
;;;1334   	
;;;1335   	 //OSAL_ASSERT(sys->cur_room_eq < PRE_USER1);
;;;1336   	 OSAL_ASSERT(sys->room_eq_index < ROOM_EQ_FILTER_NUM);
001350  f8940029          LDRB     r0,[r4,#0x29]
001354  2806              CMP      r0,#6
001356  db07              BLT      |L1.4968|
001358  4ac4              LDR      r2,|L1.5740|
00135a  a1c5              ADR      r1,|L1.5744|
00135c  f6af60fc          ADR      r0,|L1.1124|
001360  f7fffffe          BL       s_printf
001364  bf00              NOP      
                  |L1.4966|
001366  e7fe              B        |L1.4966|
                  |L1.4968|
;;;1337   	
;;;1338   	 sys->eq->req.filter[sys->room_eq_index].freq = gEqTemp.freq;
001368  48cb              LDR      r0,|L1.5784|
00136a  8800              LDRH     r0,[r0,#0]  ; gEqTemp
00136c  f8942029          LDRB     r2,[r4,#0x29]
001370  eb020282          ADD      r2,r2,r2,LSL #2
001374  6c21              LDR      r1,[r4,#0x40]
001376  f8210022          STRH     r0,[r1,r2,LSL #2]
;;;1339   	 sys->eq->req.filter[sys->room_eq_index].gain = gEqTemp.gain;
00137a  48c7              LDR      r0,|L1.5784|
00137c  6840              LDR      r0,[r0,#4]  ; gEqTemp
00137e  f8942029          LDRB     r2,[r4,#0x29]
001382  eb020282          ADD      r2,r2,r2,LSL #2
001386  6c21              LDR      r1,[r4,#0x40]
001388  eb010182          ADD      r1,r1,r2,LSL #2
00138c  6048              STR      r0,[r1,#4]
;;;1340   	 sys->eq->req.filter[sys->room_eq_index].Q = gEqTemp.Q;
00138e  48c2              LDR      r0,|L1.5784|
001390  7880              LDRB     r0,[r0,#2]  ; gEqTemp
001392  f8942029          LDRB     r2,[r4,#0x29]
001396  eb020282          ADD      r2,r2,r2,LSL #2
00139a  6c21              LDR      r1,[r4,#0x40]
00139c  eb010182          ADD      r1,r1,r2,LSL #2
0013a0  7088              STRB     r0,[r1,#2]
;;;1341   	 sys->eq->req.filter[sys->room_eq_index].a = var_a;
0013a2  f8941029          LDRB     r1,[r4,#0x29]
0013a6  eb010181          ADD      r1,r1,r1,LSL #2
0013aa  6c20              LDR      r0,[r4,#0x40]
0013ac  eb000081          ADD      r0,r0,r1,LSL #2
0013b0  f8c08008          STR      r8,[r0,#8]
;;;1342   	 sys->eq->req.filter[sys->room_eq_index].b = var_b;
0013b4  f8941029          LDRB     r1,[r4,#0x29]
0013b8  eb010181          ADD      r1,r1,r1,LSL #2
0013bc  6c20              LDR      r0,[r4,#0x40]
0013be  eb000081          ADD      r0,r0,r1,LSL #2
0013c2  f8c0900c          STR      r9,[r0,#0xc]
;;;1343   	 sys->eq->req.filter[sys->room_eq_index].g = var_g;
0013c6  f8941029          LDRB     r1,[r4,#0x29]
0013ca  eb010181          ADD      r1,r1,r1,LSL #2
0013ce  6c20              LDR      r0,[r4,#0x40]
0013d0  eb000081          ADD      r0,r0,r1,LSL #2
0013d4  f8c0a010          STR      r10,[r0,#0x10]
;;;1344   	
;;;1345   
;;;1346   	 sys_req_single_set(sys,sys->room_eq_index, var_a, var_b, var_g);
0013d8  f8cda000          STR      r10,[sp,#0]
0013dc  f8941029          LDRB     r1,[r4,#0x29]
0013e0  464b              MOV      r3,r9
0013e2  4642              MOV      r2,r8
0013e4  4620              MOV      r0,r4
0013e6  f7fffffe          BL       sys_req_single_set
;;;1347   	 
;;;1348   	 
;;;1349   	 sys_send_msg(DATABASE_UPDATE_MSG, 2);
0013ea  2102              MOVS     r1,#2
0013ec  4608              MOV      r0,r1
0013ee  f7fffffe          BL       sys_send_msg
;;;1350   }
0013f2  e8bd8ff8          POP      {r3-r11,pc}
;;;1351   
                          ENDP

                  req_on_off_control PROC
;;;1311   
;;;1312   static void req_on_off_control(sys_state_t *sys, char *arg)
0013f6  b570              PUSH     {r4-r6,lr}
;;;1313   {
0013f8  4604              MOV      r4,r0
0013fa  460d              MOV      r5,r1
;;;1314   	 uint8 on_off;
;;;1315   	
;;;1316   	 on_off = atoi(arg);
0013fc  4628              MOV      r0,r5
0013fe  f7fffffe          BL       atoi
001402  b2c6              UXTB     r6,r0
;;;1317   	
;;;1318   	 if(on_off){
001404  b11e              CBZ      r6,|L1.5134|
;;;1319   		 sys->eq_on_off = 1;
001406  2001              MOVS     r0,#1
001408  f884002a          STRB     r0,[r4,#0x2a]
00140c  e002              B        |L1.5140|
                  |L1.5134|
;;;1320   	 }else{
;;;1321   		 sys->eq_on_off = 0;
00140e  2000              MOVS     r0,#0
001410  f884002a          STRB     r0,[r4,#0x2a]
                  |L1.5140|
;;;1322   	 }
;;;1323   	 
;;;1324   	 sys_eq_state_set(sys);
001414  4620              MOV      r0,r4
001416  f7fffffe          BL       sys_eq_state_set
;;;1325   	 
;;;1326   	 sys_send_msg(DATABASE_UPDATE_MSG, 0);
00141a  2100              MOVS     r1,#0
00141c  2002              MOVS     r0,#2
00141e  f7fffffe          BL       sys_send_msg
;;;1327   }
001422  bd70              POP      {r4-r6,pc}
;;;1328   
                          ENDP

                  req_filter_select_handler PROC
;;;1296   
;;;1297   static void req_filter_select_handler(sys_state_t *sys, char *arg)
001424  b570              PUSH     {r4-r6,lr}
;;;1298   {
001426  4604              MOV      r4,r0
001428  460d              MOV      r5,r1
;;;1299   	 uint8 filter;
;;;1300   	
;;;1301   	 filter = atoi(arg);
00142a  4628              MOV      r0,r5
00142c  f7fffffe          BL       atoi
001430  b2c6              UXTB     r6,r0
;;;1302   	
;;;1303   	 if(filter - 1 < ROOM_EQ_FILTER_NUM){
001432  1e70              SUBS     r0,r6,#1
001434  2806              CMP      r0,#6
001436  da1e              BGE      |L1.5238|
;;;1304   		 sys->room_eq_index = filter - 1;
001438  f8840029          STRB     r0,[r4,#0x29]
;;;1305   		 
;;;1306   		 gEqTemp.freq = sys->eq->req.filter[sys->room_eq_index].freq;
00143c  f8941029          LDRB     r1,[r4,#0x29]
001440  eb010181          ADD      r1,r1,r1,LSL #2
001444  6c20              LDR      r0,[r4,#0x40]
001446  f8300021          LDRH     r0,[r0,r1,LSL #2]
00144a  4993              LDR      r1,|L1.5784|
00144c  8008              STRH     r0,[r1,#0]
;;;1307   		 gEqTemp.gain = sys->eq->req.filter[sys->room_eq_index].gain;
00144e  f8941029          LDRB     r1,[r4,#0x29]
001452  eb010181          ADD      r1,r1,r1,LSL #2
001456  6c20              LDR      r0,[r4,#0x40]
001458  eb000081          ADD      r0,r0,r1,LSL #2
00145c  6840              LDR      r0,[r0,#4]
00145e  498e              LDR      r1,|L1.5784|
001460  6048              STR      r0,[r1,#4]  ; gEqTemp
;;;1308   		 gEqTemp.Q = sys->eq->req.filter[sys->room_eq_index].Q;
001462  f8941029          LDRB     r1,[r4,#0x29]
001466  eb010181          ADD      r1,r1,r1,LSL #2
00146a  6c20              LDR      r0,[r4,#0x40]
00146c  eb000081          ADD      r0,r0,r1,LSL #2
001470  7880              LDRB     r0,[r0,#2]
001472  4989              LDR      r1,|L1.5784|
001474  7088              STRB     r0,[r1,#2]
                  |L1.5238|
;;;1309   	 }
;;;1310   }
001476  bd70              POP      {r4-r6,pc}
;;;1311   
                          ENDP

                  req_preset_select_handler PROC
;;;1281   
;;;1282   static void req_preset_select_handler(sys_state_t *sys, char *arg)
001478  b570              PUSH     {r4-r6,lr}
;;;1283   {
00147a  4604              MOV      r4,r0
00147c  460d              MOV      r5,r1
;;;1284   	 uint8 preset;
;;;1285   	
;;;1286   	 preset = atoi(arg);
00147e  4628              MOV      r0,r5
001480  f7fffffe          BL       atoi
001484  b2c6              UXTB     r6,r0
;;;1287   	
;;;1288   	 if(preset - 1 < PRE_USER1){
001486  1e70              SUBS     r0,r6,#1
001488  2803              CMP      r0,#3
00148a  da01              BGE      |L1.5264|
;;;1289   		 sys->cur_room_eq = preset - 1;
00148c  f8840044          STRB     r0,[r4,#0x44]
                  |L1.5264|
;;;1290   	 }
;;;1291   	 
;;;1292   	 if(sys->cur_room_eq == sys->preset){
001490  f8940044          LDRB     r0,[r4,#0x44]
001494  7e61              LDRB     r1,[r4,#0x19]
001496  4288              CMP      r0,r1
001498  d102              BNE      |L1.5280|
;;;1293   		 sys_load_roomeq(sys);
00149a  4620              MOV      r0,r4
00149c  f7fffffe          BL       sys_load_roomeq
                  |L1.5280|
;;;1294   	 }
;;;1295   }
0014a0  bd70              POP      {r4-r6,pc}
;;;1296   
                          ENDP

                  temp_width_adj_handler PROC
;;;1270   
;;;1271   static void temp_width_adj_handler(sys_state_t *sys, char *arg)
0014a2  b570              PUSH     {r4-r6,lr}
;;;1272   {
0014a4  4606              MOV      r6,r0
0014a6  460d              MOV      r5,r1
;;;1273   	 uint8 q;
;;;1274   	
;;;1275   	 q = atoi(arg);
0014a8  4628              MOV      r0,r5
0014aa  f7fffffe          BL       atoi
0014ae  b2c4              UXTB     r4,r0
;;;1276   	
;;;1277   	 if(q <= EQ_Q_MAX && q>= EQ_Q_MIN){
0014b0  2c78              CMP      r4,#0x78
0014b2  dc03              BGT      |L1.5308|
0014b4  2c03              CMP      r4,#3
0014b6  db01              BLT      |L1.5308|
;;;1278   		 gEqTemp.Q = q;
0014b8  4877              LDR      r0,|L1.5784|
0014ba  7084              STRB     r4,[r0,#2]
                  |L1.5308|
;;;1279   	 }
;;;1280   }
0014bc  bd70              POP      {r4-r6,pc}
;;;1281   
                          ENDP

                  temp_freq_adj_handler PROC
;;;1258   
;;;1259   static void temp_freq_adj_handler(sys_state_t *sys, char *arg)
0014be  b570              PUSH     {r4-r6,lr}
;;;1260   {
0014c0  4606              MOV      r6,r0
0014c2  460d              MOV      r5,r1
;;;1261   	 uint16 freq;
;;;1262   	
;;;1263   	 freq = atoi(arg);
0014c4  4628              MOV      r0,r5
0014c6  f7fffffe          BL       atoi
0014ca  b284              UXTH     r4,r0
;;;1264   	
;;;1265   	 if(freq <= EQ_FREQ_MAX && freq >= EQ_FREQ_MIN){
0014cc  f5b47f96          CMP      r4,#0x12c
0014d0  dc03              BGT      |L1.5338|
0014d2  2c14              CMP      r4,#0x14
0014d4  db01              BLT      |L1.5338|
;;;1266   		 gEqTemp.freq = freq;
0014d6  4870              LDR      r0,|L1.5784|
0014d8  8004              STRH     r4,[r0,#0]
                  |L1.5338|
;;;1267   	 }
;;;1268   }
0014da  bd70              POP      {r4-r6,pc}
;;;1269   
                          ENDP

                  temp_gain_adj_handler PROC
;;;1247   
;;;1248   static void temp_gain_adj_handler(sys_state_t *sys, char *arg)
0014dc  b570              PUSH     {r4-r6,lr}
;;;1249   {
0014de  4606              MOV      r6,r0
0014e0  460d              MOV      r5,r1
;;;1250   	 int gain;
;;;1251   	
;;;1252   	 gain = atoi(arg);
0014e2  4628              MOV      r0,r5
0014e4  f7fffffe          BL       atoi
0014e8  4604              MOV      r4,r0
;;;1253   	
;;;1254   	 if(gain <= EQ_GAIN_MAX && gain >= EQ_GAIN_MIN){
0014ea  2c0c              CMP      r4,#0xc
0014ec  dc04              BGT      |L1.5368|
0014ee  f1140f12          CMN      r4,#0x12
0014f2  db01              BLT      |L1.5368|
;;;1255   		 gEqTemp.gain = gain;
0014f4  4868              LDR      r0,|L1.5784|
0014f6  6044              STR      r4,[r0,#4]  ; gEqTemp
                  |L1.5368|
;;;1256   	 }
;;;1257   }
0014f8  bd70              POP      {r4-r6,pc}
;;;1258   
                          ENDP

                  do_roomeq_cgi_page PROC
;;;804    
;;;805    static void do_roomeq_cgi_page(int argv, char *argc[])
0014fa  b570              PUSH     {r4-r6,lr}
;;;806    {
0014fc  4605              MOV      r5,r0
0014fe  460c              MOV      r4,r1
;;;807    	if(argv < 4) return;
001500  2d04              CMP      r5,#4
001502  da00              BGE      |L1.5382|
;;;808    	
;;;809    	if(strcmp(argc[2]+5, "peq-gain") == 0){
;;;810    		temp_gain_adj_handler(gSystem_t, argc[3]+6);
;;;811    	}else if(strcmp(argc[2]+5, "peq-frequency") == 0){
;;;812    		temp_freq_adj_handler(gSystem_t, argc[3]+6);
;;;813    	}else if(strcmp(argc[2]+5, "peq-width") == 0){
;;;814    		temp_width_adj_handler(gSystem_t, argc[3]+6);
;;;815    	}else if(strcmp(argc[2]+5, "cur-edit-eq-items") == 0){
;;;816    		req_preset_select_handler(gSystem_t, argc[3]+6);
;;;817    	}else if(strcmp(argc[2]+5, "cur-filter-id") == 0){
;;;818    		req_filter_select_handler(gSystem_t, argc[3]+6);
;;;819    	}else if(strcmp(argc[2]+5, "filter-eq-switch") == 0){
;;;820    		req_on_off_control(gSystem_t, argc[3]+6);
;;;821    	}else if(strcmp(argc[2]+5, "filter-save") == 0){
;;;822    		req_save_handler(gSystem_t, argc[3]+7, argc[4]+7, argc[5]+7);
;;;823    	}
;;;824    	
;;;825    	dis_send_msg(DIS_UPDATE, MENU_NUM);
;;;826    }
001504  bd70              POP      {r4-r6,pc}
                  |L1.5382|
001506  e0c9              B        |L1.5788|
                  |L1.5384|
001508  63757272          DCB      "current-sub",0
00150c  656e742d
001510  73756200
                  |L1.5396|
                          DCD      gSystem_t
                  |L1.5400|
001518  6d617374          DCB      "master-volume",0
00151c  65722d76
001520  6f6c756d
001524  6500    
001526  00                DCB      0
001527  00                DCB      0
                  |L1.5416|
001528  6375722d          DCB      "cur-preset-item",0
00152c  70726573
001530  65742d69
001534  74656d00
                  |L1.5432|
001538  6375722d          DCB      "cur-source-index",0
00153c  736f7572
001540  63652d69
001544  6e646578
001548  00      
001549  00                DCB      0
00154a  00                DCB      0
00154b  00                DCB      0
                  |L1.5452|
00154c  6375722d          DCB      "cur-power-on-router",0
001550  706f7765
001554  722d6f6e
001558  2d726f75
00155c  74657200
                  |L1.5472|
001560  61756469          DCB      "audio-level",0
001564  6f2d6c65
001568  76656c00
                  |L1.5484|
00156c  6375722d          DCB      "cur-auto-off-time",0
001570  6175746f
001574  2d6f6666
001578  2d74696d
00157c  6500    
00157e  00                DCB      0
00157f  00                DCB      0
                  |L1.5504|
001580  6d757465          DCB      "mute-state",0
001584  2d737461
001588  746500  
00158b  00                DCB      0
                  |L1.5516|
                          DCD      json_output_buf
                  |L1.5520|
                          DCD      pjson
                  |L1.5524|
001594  54726169          DCB      "Traid",0
001598  6400    
00159a  00                DCB      0
00159b  00                DCB      0
                  |L1.5532|
00159c  22647370          DCB      """dsp-name"":""%s"",",0
0015a0  2d6e616d
0015a4  65223a22
0015a8  2573222c
0015ac  00      
0015ad  00                DCB      0
0015ae  00                DCB      0
0015af  00                DCB      0
                  |L1.5552|
                          DCD      ||.constdata||+0x3e4
                  |L1.5556|
0015b4  22637572          DCB      """current-sub"":""%d"",",0
0015b8  72656e74
0015bc  2d737562
0015c0  223a2225
0015c4  64222c00
                  |L1.5576|
0015c8  226d7574          DCB      """mute-state"":""%d"",",0
0015cc  652d7374
0015d0  61746522
0015d4  3a222564
0015d8  222c00  
0015db  00                DCB      0
                  |L1.5596|
                          DCD      ||.constdata||+0x628
                  |L1.5600|
0015e0  22617564          DCB      """audio-level"":""%d"",",0
0015e4  696f2d6c
0015e8  6576656c
0015ec  223a2225
0015f0  64222c00
                  |L1.5620|
0015f4  22637572          DCB      """cur-auto-off-time"":""%d"",",0
0015f8  2d617574
0015fc  6f2d6f66
001600  662d7469
001604  6d65223a
001608  22256422
00160c  2c00    
00160e  00                DCB      0
00160f  00                DCB      0
                  |L1.5648|
001610  22637572          DCB      """cur-power-on-router"":""%d"",",0
001614  2d706f77
001618  65722d6f
00161c  6e2d726f
001620  75746572
001624  223a2225
001628  64222c00
                  |L1.5676|
                          DCD      ||.constdata||+0x744
                  |L1.5680|
001630  22637572          DCB      """cur-source-index"":""%d"",",0
001634  2d736f75
001638  7263652d
00163c  696e6465
001640  78223a22
001644  2564222c
001648  00      
001649  00                DCB      0
00164a  00                DCB      0
00164b  00                DCB      0
                  |L1.5708|
00164c  22637572          DCB      """cur-preset-item"":""%d""",0
001650  2d707265
001654  7365742d
001658  6974656d
00165c  223a2225
001660  642200  
001663  00                DCB      0
                  |L1.5732|
                          DCD      json_output_buf+0x7ff
                  |L1.5736|
                          DCD      |symbol_number.31|
                  |L1.5740|
                          DCD      |symbol_number.37|
                  |L1.5744|
001670  7379732d          DCB      "sys->room_eq_index < ROOM_EQ_FILTER_NUM",0
001674  3e726f6f
001678  6d5f6571
00167c  5f696e64
001680  6578203c
001684  20524f4f
001688  4d5f4551
00168c  5f46494c
001690  5445525f
001694  4e554d00
                  |L1.5784|
                          DCD      gEqTemp
                  |L1.5788|
00169c  68a1              LDR      r1,[r4,#8]            ;809
00169e  1d48              ADDS     r0,r1,#5              ;809
0016a0  a1fa              ADR      r1,|L1.6796|
0016a2  f7fffffe          BL       strcmp
0016a6  b930              CBNZ     r0,|L1.5814|
0016a8  68e0              LDR      r0,[r4,#0xc]          ;810
0016aa  1d81              ADDS     r1,r0,#6              ;810
0016ac  48fa              LDR      r0,|L1.6808|
0016ae  6800              LDR      r0,[r0,#0]            ;810  ; gSystem_t
0016b0  f7fffffe          BL       temp_gain_adj_handler
0016b4  e050              B        |L1.5976|
                  |L1.5814|
0016b6  68a1              LDR      r1,[r4,#8]            ;811
0016b8  1d48              ADDS     r0,r1,#5              ;811
0016ba  a1f8              ADR      r1,|L1.6812|
0016bc  f7fffffe          BL       strcmp
0016c0  b930              CBNZ     r0,|L1.5840|
0016c2  68e0              LDR      r0,[r4,#0xc]          ;812
0016c4  1d81              ADDS     r1,r0,#6              ;812
0016c6  48f4              LDR      r0,|L1.6808|
0016c8  6800              LDR      r0,[r0,#0]            ;812  ; gSystem_t
0016ca  f7fffffe          BL       temp_freq_adj_handler
0016ce  e043              B        |L1.5976|
                  |L1.5840|
0016d0  68a1              LDR      r1,[r4,#8]            ;813
0016d2  1d48              ADDS     r0,r1,#5              ;813
0016d4  a1f5              ADR      r1,|L1.6828|
0016d6  f7fffffe          BL       strcmp
0016da  b930              CBNZ     r0,|L1.5866|
0016dc  68e0              LDR      r0,[r4,#0xc]          ;814
0016de  1d81              ADDS     r1,r0,#6              ;814
0016e0  48ed              LDR      r0,|L1.6808|
0016e2  6800              LDR      r0,[r0,#0]            ;814  ; gSystem_t
0016e4  f7fffffe          BL       temp_width_adj_handler
0016e8  e036              B        |L1.5976|
                  |L1.5866|
0016ea  68a1              LDR      r1,[r4,#8]            ;815
0016ec  1d48              ADDS     r0,r1,#5              ;815
0016ee  a1f2              ADR      r1,|L1.6840|
0016f0  f7fffffe          BL       strcmp
0016f4  b930              CBNZ     r0,|L1.5892|
0016f6  68e0              LDR      r0,[r4,#0xc]          ;816
0016f8  1d81              ADDS     r1,r0,#6              ;816
0016fa  48e7              LDR      r0,|L1.6808|
0016fc  6800              LDR      r0,[r0,#0]            ;816  ; gSystem_t
0016fe  f7fffffe          BL       req_preset_select_handler
001702  e029              B        |L1.5976|
                  |L1.5892|
001704  68a1              LDR      r1,[r4,#8]            ;817
001706  1d48              ADDS     r0,r1,#5              ;817
001708  a1f0              ADR      r1,|L1.6860|
00170a  f7fffffe          BL       strcmp
00170e  b930              CBNZ     r0,|L1.5918|
001710  68e0              LDR      r0,[r4,#0xc]          ;818
001712  1d81              ADDS     r1,r0,#6              ;818
001714  48e0              LDR      r0,|L1.6808|
001716  6800              LDR      r0,[r0,#0]            ;818  ; gSystem_t
001718  f7fffffe          BL       req_filter_select_handler
00171c  e01c              B        |L1.5976|
                  |L1.5918|
00171e  68a1              LDR      r1,[r4,#8]            ;819
001720  1d48              ADDS     r0,r1,#5              ;819
001722  a1ee              ADR      r1,|L1.6876|
001724  f7fffffe          BL       strcmp
001728  b930              CBNZ     r0,|L1.5944|
00172a  68e0              LDR      r0,[r4,#0xc]          ;820
00172c  1d81              ADDS     r1,r0,#6              ;820
00172e  48da              LDR      r0,|L1.6808|
001730  6800              LDR      r0,[r0,#0]            ;820  ; gSystem_t
001732  f7fffffe          BL       req_on_off_control
001736  e00f              B        |L1.5976|
                  |L1.5944|
001738  68a1              LDR      r1,[r4,#8]            ;821
00173a  1d48              ADDS     r0,r1,#5              ;821
00173c  a1ec              ADR      r1,|L1.6896|
00173e  f7fffffe          BL       strcmp
001742  b948              CBNZ     r0,|L1.5976|
001744  6960              LDR      r0,[r4,#0x14]         ;822
001746  1dc3              ADDS     r3,r0,#7              ;822
001748  6920              LDR      r0,[r4,#0x10]         ;822
00174a  1dc2              ADDS     r2,r0,#7              ;822
00174c  68e0              LDR      r0,[r4,#0xc]          ;822
00174e  1dc1              ADDS     r1,r0,#7              ;822
001750  48d1              LDR      r0,|L1.6808|
001752  6800              LDR      r0,[r0,#0]            ;822  ; gSystem_t
001754  f7fffffe          BL       req_save_handler
                  |L1.5976|
001758  2116              MOVS     r1,#0x16              ;825
00175a  2001              MOVS     r0,#1                 ;825
00175c  f7fffffe          BL       dis_send_msg
001760  bf00              NOP      
001762  bd70              POP      {r4-r6,pc}
;;;827    
                          ENDP

                  _load_roomeq_page_json_file PROC
;;;828    static void _load_roomeq_page_json_file(sys_state_t *sys, http_state_t *hs)
001764  b57c              PUSH     {r2-r6,lr}
;;;829    {
001766  4604              MOV      r4,r0
001768  460e              MOV      r6,r1
;;;830    	 uint8 j;
;;;831    	
;;;832    	 JSON_OUTPUT_BEGIN();
00176a  48e4              LDR      r0,|L1.6908|
00176c  49e4              LDR      r1,|L1.6912|
00176e  6008              STR      r0,[r1,#0]  ; pjson
001770  f44f6100          MOV      r1,#0x800
001774  f7fffffe          BL       __aeabi_memclr
001778  f6af01a4          ADR      r1,|L1.3800|
00177c  48e0              LDR      r0,|L1.6912|
00177e  6800              LDR      r0,[r0,#0]  ; pjson
001780  f7fffffe          BL       strcat
001784  48de              LDR      r0,|L1.6912|
001786  6800              LDR      r0,[r0,#0]  ; pjson
001788  1c40              ADDS     r0,r0,#1
00178a  49dd              LDR      r1,|L1.6912|
00178c  6008              STR      r0,[r1,#0]  ; pjson
;;;833    	
;;;834    	 json_output_print("\"peq-gain\":\"%d\",", gEqTemp.gain);
00178e  48dd              LDR      r0,|L1.6916|
001790  6841              LDR      r1,[r0,#4]  ; gEqTemp
001792  a0dd              ADR      r0,|L1.6920|
001794  f7fffffe          BL       json_output_print
;;;835    	 json_output_print("\"peq-frequency\":\"%d\",", gEqTemp.freq);
001798  48da              LDR      r0,|L1.6916|
00179a  8801              LDRH     r1,[r0,#0]  ; gEqTemp
00179c  a0df              ADR      r0,|L1.6940|
00179e  f7fffffe          BL       json_output_print
;;;836    	 json_output_print("\"peq-width\":\"%d\",", gEqTemp.Q);
0017a2  48d8              LDR      r0,|L1.6916|
0017a4  7881              LDRB     r1,[r0,#2]  ; gEqTemp
0017a6  a0e3              ADR      r0,|L1.6964|
0017a8  f7fffffe          BL       json_output_print
;;;837    	
;;;838    	 json_output_print("%s", EQ_NUM);
0017ac  49e6              LDR      r1,|L1.6984|
0017ae  f6af0078          ADR      r0,|L1.3896|
0017b2  f7fffffe          BL       json_output_print
;;;839    	 json_output_print("\"cur-edit-eq-items\":\"%d\",", sys->cur_room_eq + 1);
0017b6  f8940044          LDRB     r0,[r4,#0x44]
0017ba  1c41              ADDS     r1,r0,#1
0017bc  a0e3              ADR      r0,|L1.6988|
0017be  f7fffffe          BL       json_output_print
;;;840    	
;;;841    	
;;;842    	 json_output_print("%s", EQ_FILTER_BEGIN);
0017c2  a1e9              ADR      r1,|L1.7016|
0017c4  f6af0090          ADR      r0,|L1.3896|
0017c8  f7fffffe          BL       json_output_print
;;;843    	 for(j = 0; j < ROOM_EQ_FILTER_NUM; j++){
0017cc  2500              MOVS     r5,#0
0017ce  e01a              B        |L1.6150|
                  |L1.6096|
;;;844    			json_output_print("{\"name\":\"Filter %d\", \"id\": \"%d\", \"eq-gain\": \"%d\", \"eq-frequency\": \"%d\", \"eq-width\":\"%d\"},",
0017d0  eb050185          ADD      r1,r5,r5,LSL #2
0017d4  6c20              LDR      r0,[r4,#0x40]
0017d6  eb000081          ADD      r0,r0,r1,LSL #2
0017da  7880              LDRB     r0,[r0,#2]
0017dc  eb050285          ADD      r2,r5,r5,LSL #2
0017e0  6c21              LDR      r1,[r4,#0x40]
0017e2  f8311022          LDRH     r1,[r1,r2,LSL #2]
0017e6  e9cd1000          STRD     r1,r0,[sp,#0]
0017ea  eb050185          ADD      r1,r5,r5,LSL #2
0017ee  6c20              LDR      r0,[r4,#0x40]
0017f0  eb000081          ADD      r0,r0,r1,LSL #2
0017f4  1c6a              ADDS     r2,r5,#1
0017f6  1c69              ADDS     r1,r5,#1
0017f8  6843              LDR      r3,[r0,#4]
0017fa  48d3              LDR      r0,|L1.6984|
0017fc  3068              ADDS     r0,r0,#0x68
0017fe  f7fffffe          BL       json_output_print
001802  1c68              ADDS     r0,r5,#1              ;843
001804  b2c5              UXTB     r5,r0                 ;843
                  |L1.6150|
001806  2d06              CMP      r5,#6                 ;843
001808  dbe2              BLT      |L1.6096|
;;;845           j+1, j+1, sys->eq->req.filter[j].gain, sys->eq->req.filter[j].freq, sys->eq->req.filter[j].Q);
;;;846    	 }
;;;847    	 json_output_print("%s", EQ_FILTER_END);
00180a  a1dc              ADR      r1,|L1.7036|
00180c  f6af00d8          ADR      r0,|L1.3896|
001810  f7fffffe          BL       json_output_print
;;;848    	 
;;;849    	 json_output_print("\"cur-filter-id\":\"%d\",", sys->room_eq_index + 1);
001814  f8940029          LDRB     r0,[r4,#0x29]
001818  1c41              ADDS     r1,r0,#1
00181a  a0d9              ADR      r0,|L1.7040|
00181c  f7fffffe          BL       json_output_print
;;;850    	 json_output_print("\"filter-eq-switch\":\"%d\",", sys->eq_on_off);
001820  f894102a          LDRB     r1,[r4,#0x2a]
001824  a0dc              ADR      r0,|L1.7064|
001826  f7fffffe          BL       json_output_print
;;;851    	 
;;;852    	 JSON_OUTPUT_END();
00182a  48b5              LDR      r0,|L1.6912|
00182c  6800              LDR      r0,[r0,#0]  ; pjson
00182e  1c40              ADDS     r0,r0,#1
001830  49e0              LDR      r1,|L1.7092|
001832  4288              CMP      r0,r1
001834  d307              BCC      |L1.6214|
001836  4ae0              LDR      r2,|L1.7096|
001838  f6af0108          ADR      r1,|L1.4148|
00183c  48df              LDR      r0,|L1.7100|
00183e  f7fffffe          BL       s_printf
001842  bf00              NOP      
                  |L1.6212|
001844  e7fe              B        |L1.6212|
                  |L1.6214|
001846  f2af71fc          ADR      r1,|L1.4172|
00184a  48ad              LDR      r0,|L1.6912|
00184c  6800              LDR      r0,[r0,#0]  ; pjson
00184e  f7fffffe          BL       strcat
;;;853    	
;;;854    	 hs->file = json_output_buf;
001852  48aa              LDR      r0,|L1.6908|
001854  6070              STR      r0,[r6,#4]
;;;855    	 hs->left = strlen(json_output_buf); 
001856  f7fffffe          BL       strlen
00185a  60f0              STR      r0,[r6,#0xc]
;;;856    }
00185c  bd7c              POP      {r2-r6,pc}
;;;857    
                          ENDP

                  Cgi_roomeq_page_handler PROC
;;;858    static int Cgi_roomeq_page_handler(http_state_t *hs, int argv, char *argc[])
00185e  b570              PUSH     {r4-r6,lr}
;;;859    {
001860  4606              MOV      r6,r0
001862  460c              MOV      r4,r1
001864  4615              MOV      r5,r2
;;;860    	if(argv >= 2){
001866  2c02              CMP      r4,#2
001868  db0e              BLT      |L1.6280|
;;;861         if(strcmp(argc[1], "action=write") == 0){
00186a  f6af0100          ADR      r1,|L1.4204|
00186e  6868              LDR      r0,[r5,#4]
001870  f7fffffe          BL       strcmp
001874  b918              CBNZ     r0,|L1.6270|
;;;862    			 do_roomeq_cgi_page(argv,argc);
001876  4629              MOV      r1,r5
001878  4620              MOV      r0,r4
00187a  f7fffffe          BL       do_roomeq_cgi_page
                  |L1.6270|
;;;863    		 }
;;;864    		 _load_roomeq_page_json_file(gSystem_t,hs);
00187e  4631              MOV      r1,r6
001880  4885              LDR      r0,|L1.6808|
001882  6800              LDR      r0,[r0,#0]  ; gSystem_t
001884  f7fffffe          BL       _load_roomeq_page_json_file
                  |L1.6280|
;;;865    	}
;;;866    
;;;867      return 0;  
001888  2000              MOVS     r0,#0
;;;868    }
00188a  bd70              POP      {r4-r6,pc}
;;;869    
                          ENDP

                  _load_preset_page_json_file PROC
;;;870    static void _load_preset_page_json_file(sys_state_t *sys, http_state_t *hs)
00188c  b570              PUSH     {r4-r6,lr}
;;;871    {
00188e  4604              MOV      r4,r0
001890  460d              MOV      r5,r1
;;;872    	 JSON_OUTPUT_BEGIN();
001892  489a              LDR      r0,|L1.6908|
001894  499a              LDR      r1,|L1.6912|
001896  6008              STR      r0,[r1,#0]  ; pjson
001898  f44f6100          MOV      r1,#0x800
00189c  f7fffffe          BL       __aeabi_memclr
0018a0  f6af11cc          ADR      r1,|L1.3800|
0018a4  4896              LDR      r0,|L1.6912|
0018a6  6800              LDR      r0,[r0,#0]  ; pjson
0018a8  f7fffffe          BL       strcat
0018ac  4894              LDR      r0,|L1.6912|
0018ae  6800              LDR      r0,[r0,#0]  ; pjson
0018b0  1c40              ADDS     r0,r0,#1
0018b2  4993              LDR      r1,|L1.6912|
0018b4  6008              STR      r0,[r1,#0]  ; pjson
;;;873    	
;;;874    	 json_output_print("\"volume\":\"%d\",", sys->eq->peq[sys->cur_cust_eq].vol);
0018b6  f8540f40          LDR      r0,[r4,#0x40]!
0018ba  3078              ADDS     r0,r0,#0x78
0018bc  7962              LDRB     r2,[r4,#5]
0018be  eb020342          ADD      r3,r2,r2,LSL #1
0018c2  eb0302c2          ADD      r2,r3,r2,LSL #3
0018c6  eb000082          ADD      r0,r0,r2,LSL #2
0018ca  6a81              LDR      r1,[r0,#0x28]
0018cc  a0bc              ADR      r0,|L1.7104|
0018ce  f7fffffe          BL       json_output_print
;;;875    	 json_output_print("\"peq-gain\":\"%d\",", sys->eq->peq[sys->cur_cust_eq].filter[0].gain);
0018d2  6820              LDR      r0,[r4,#0]
0018d4  3078              ADDS     r0,r0,#0x78
0018d6  7962              LDRB     r2,[r4,#5]
0018d8  eb020342          ADD      r3,r2,r2,LSL #1
0018dc  eb0302c2          ADD      r2,r3,r2,LSL #3
0018e0  eb000082          ADD      r0,r0,r2,LSL #2
0018e4  6841              LDR      r1,[r0,#4]
0018e6  a088              ADR      r0,|L1.6920|
0018e8  f7fffffe          BL       json_output_print
;;;876    	 json_output_print("\"peq-frequency\":\"%d\",", sys->eq->peq[sys->cur_cust_eq].filter[0].freq);
0018ec  6820              LDR      r0,[r4,#0]
0018ee  3078              ADDS     r0,r0,#0x78
0018f0  7962              LDRB     r2,[r4,#5]
0018f2  eb020342          ADD      r3,r2,r2,LSL #1
0018f6  eb0302c2          ADD      r2,r3,r2,LSL #3
0018fa  f8301022          LDRH     r1,[r0,r2,LSL #2]
0018fe  a087              ADR      r0,|L1.6940|
001900  f7fffffe          BL       json_output_print
;;;877    	 json_output_print("\"peq-width\":\"%d\",", sys->eq->peq[sys->cur_cust_eq].filter[0].Q);
001904  6820              LDR      r0,[r4,#0]
001906  3078              ADDS     r0,r0,#0x78
001908  7962              LDRB     r2,[r4,#5]
00190a  eb020342          ADD      r3,r2,r2,LSL #1
00190e  eb0302c2          ADD      r2,r3,r2,LSL #3
001912  eb000082          ADD      r0,r0,r2,LSL #2
001916  7881              LDRB     r1,[r0,#2]
001918  a086              ADR      r0,|L1.6964|
00191a  f7fffffe          BL       json_output_print
;;;878    	 json_output_print("\"peq-gain2\":\"%d\",", sys->eq->peq[sys->cur_cust_eq].filter[1].gain);
00191e  6820              LDR      r0,[r4,#0]
001920  3078              ADDS     r0,r0,#0x78
001922  7962              LDRB     r2,[r4,#5]
001924  eb020342          ADD      r3,r2,r2,LSL #1
001928  eb0302c2          ADD      r2,r3,r2,LSL #3
00192c  eb000082          ADD      r0,r0,r2,LSL #2
001930  6981              LDR      r1,[r0,#0x18]
001932  a0a7              ADR      r0,|L1.7120|
001934  f7fffffe          BL       json_output_print
;;;879    	 json_output_print("\"peq-frequency2\":\"%d\",", sys->eq->peq[sys->cur_cust_eq].filter[1].freq);
001938  6820              LDR      r0,[r4,#0]
00193a  3078              ADDS     r0,r0,#0x78
00193c  7962              LDRB     r2,[r4,#5]
00193e  eb020342          ADD      r3,r2,r2,LSL #1
001942  eb0302c2          ADD      r2,r3,r2,LSL #3
001946  eb000082          ADD      r0,r0,r2,LSL #2
00194a  8a81              LDRH     r1,[r0,#0x14]
00194c  a0a5              ADR      r0,|L1.7140|
00194e  f7fffffe          BL       json_output_print
;;;880    	 json_output_print("\"peq-width2\":\"%d\",", sys->eq->peq[sys->cur_cust_eq].filter[1].Q);
001952  6820              LDR      r0,[r4,#0]
001954  3078              ADDS     r0,r0,#0x78
001956  7962              LDRB     r2,[r4,#5]
001958  eb020342          ADD      r3,r2,r2,LSL #1
00195c  eb0302c2          ADD      r2,r3,r2,LSL #3
001960  eb000082          ADD      r0,r0,r2,LSL #2
001964  7d81              LDRB     r1,[r0,#0x16]
001966  a0a5              ADR      r0,|L1.7164|
001968  f7fffffe          BL       json_output_print
;;;881    
;;;882    	 json_output_print("%s", CUSTOMER_EQ_NUM);
00196c  4976              LDR      r1,|L1.6984|
00196e  31c4              ADDS     r1,r1,#0xc4
001970  f6af203c          ADR      r0,|L1.3896|
001974  f7fffffe          BL       json_output_print
;;;883    	 json_output_print("\"current-peq\":\"%d\"", sys->cur_cust_eq + 1);
001978  7960              LDRB     r0,[r4,#5]
00197a  f1a40440          SUB      r4,r4,#0x40
00197e  f1000101          ADD      r1,r0,#1
001982  a0a3              ADR      r0,|L1.7184|
001984  f7fffffe          BL       json_output_print
;;;884    	 
;;;885    	 JSON_OUTPUT_END();
001988  485d              LDR      r0,|L1.6912|
00198a  6800              LDR      r0,[r0,#0]  ; pjson
00198c  1c40              ADDS     r0,r0,#1
00198e  4989              LDR      r1,|L1.7092|
001990  4288              CMP      r0,r1
001992  d307              BCC      |L1.6564|
001994  4aa3              LDR      r2,|L1.7204|
001996  f6af1164          ADR      r1,|L1.4148|
00199a  4888              LDR      r0,|L1.7100|
00199c  f7fffffe          BL       s_printf
0019a0  bf00              NOP      
                  |L1.6562|
0019a2  e7fe              B        |L1.6562|
                  |L1.6564|
0019a4  f6af115c          ADR      r1,|L1.4172|
0019a8  4855              LDR      r0,|L1.6912|
0019aa  6800              LDR      r0,[r0,#0]  ; pjson
0019ac  f7fffffe          BL       strcat
;;;886    	
;;;887    	 hs->file = json_output_buf;
0019b0  4852              LDR      r0,|L1.6908|
0019b2  6068              STR      r0,[r5,#4]
;;;888    	 hs->left = strlen(json_output_buf);  
0019b4  f7fffffe          BL       strlen
0019b8  60e8              STR      r0,[r5,#0xc]
;;;889    }
0019ba  bd70              POP      {r4-r6,pc}
;;;890    
                          ENDP

                  preset_customer_eq_select_handler PROC
;;;1238   
;;;1239   static void preset_customer_eq_select_handler(sys_state_t *sys, char *arg)
0019bc  b570              PUSH     {r4-r6,lr}
;;;1240   {
0019be  4604              MOV      r4,r0
0019c0  460d              MOV      r5,r1
;;;1241   	 uint8 preset;
;;;1242   	
;;;1243   	 preset = atoi(arg);
0019c2  4628              MOV      r0,r5
0019c4  f7fffffe          BL       atoi
0019c8  b2c6              UXTB     r6,r0
;;;1244   	
;;;1245   	 sys->cur_cust_eq = preset - 1;
0019ca  1e70              SUBS     r0,r6,#1
0019cc  f8840045          STRB     r0,[r4,#0x45]
;;;1246   }
0019d0  bd70              POP      {r4-r6,pc}
;;;1247   
                          ENDP

                  preset_width2_change_handler PROC
;;;1214   
;;;1215   static void preset_width2_change_handler(sys_state_t *sys, char *arg, char *a, char *b, char *g)
0019d2  e92d5ffc          PUSH     {r2-r12,lr}
;;;1216   {
0019d6  4604              MOV      r4,r0
0019d8  460e              MOV      r6,r1
0019da  4617              MOV      r7,r2
0019dc  4698              MOV      r8,r3
;;;1217   	 uint8 q;
;;;1218   	 uint32 var_a = atoi(a);
0019de  4638              MOV      r0,r7
0019e0  f7fffffe          BL       atoi
0019e4  4681              MOV      r9,r0
;;;1219   	 uint32 var_b = atoi(b);
0019e6  4640              MOV      r0,r8
0019e8  f7fffffe          BL       atoi
0019ec  4682              MOV      r10,r0
;;;1220   	 uint32 var_g = atoi(g);
0019ee  980c              LDR      r0,[sp,#0x30]
0019f0  f7fffffe          BL       atoi
0019f4  4683              MOV      r11,r0
;;;1221   	
;;;1222   	 q = atoi(arg);
0019f6  4630              MOV      r0,r6
0019f8  f7fffffe          BL       atoi
0019fc  b2c5              UXTB     r5,r0
;;;1223   	
;;;1224   	 if(q <= EQ_Q_MAX && q >= EQ_Q_MIN){
0019fe  2d78              CMP      r5,#0x78
001a00  dc2f              BGT      |L1.6754|
001a02  2d03              CMP      r5,#3
001a04  db2d              BLT      |L1.6754|
;;;1225   		 sys->eq->peq[sys->cur_cust_eq].filter[1].Q = q;
001a06  f8540f40          LDR      r0,[r4,#0x40]!
001a0a  3078              ADDS     r0,r0,#0x78
001a0c  7961              LDRB     r1,[r4,#5]
001a0e  eb010241          ADD      r2,r1,r1,LSL #1
001a12  eb0201c1          ADD      r1,r2,r1,LSL #3
001a16  eb000081          ADD      r0,r0,r1,LSL #2
001a1a  7585              STRB     r5,[r0,#0x16]
;;;1226   		 sys->eq->peq[sys->cur_cust_eq].filter[1].g = var_g;
001a1c  6820              LDR      r0,[r4,#0]
001a1e  3078              ADDS     r0,r0,#0x78
001a20  7961              LDRB     r1,[r4,#5]
001a22  eb010241          ADD      r2,r1,r1,LSL #1
001a26  eb0201c1          ADD      r1,r2,r1,LSL #3
001a2a  eb000081          ADD      r0,r0,r1,LSL #2
001a2e  f8c0b024          STR      r11,[r0,#0x24]
;;;1227   		 sys->eq->peq[sys->cur_cust_eq].filter[1].a = var_a;
001a32  6820              LDR      r0,[r4,#0]
001a34  3078              ADDS     r0,r0,#0x78
001a36  7961              LDRB     r1,[r4,#5]
001a38  eb010241          ADD      r2,r1,r1,LSL #1
001a3c  eb0201c1          ADD      r1,r2,r1,LSL #3
001a40  eb000081          ADD      r0,r0,r1,LSL #2
001a44  f8c0901c          STR      r9,[r0,#0x1c]
;;;1228   		 sys->eq->peq[sys->cur_cust_eq].filter[1].b = var_b;
001a48  6820              LDR      r0,[r4,#0]
001a4a  3078              ADDS     r0,r0,#0x78
001a4c  7961              LDRB     r1,[r4,#5]
001a4e  f1a40440          SUB      r4,r4,#0x40
001a52  eb010241          ADD      r2,r1,r1,LSL #1
001a56  eb0201c1          ADD      r1,r2,r1,LSL #3
001a5a  eb000081          ADD      r0,r0,r1,LSL #2
001a5e  f8c0a020          STR      r10,[r0,#0x20]
                  |L1.6754|
;;;1229   	 }
;;;1230   	 
;;;1231   	 if(sys->preset == sys->cur_cust_eq){
001a62  7e60              LDRB     r0,[r4,#0x19]
001a64  f8941045          LDRB     r1,[r4,#0x45]
001a68  4288              CMP      r0,r1
001a6a  d108              BNE      |L1.6782|
;;;1232   		 sys_peq_single_set(sys, sys->cur_cust_eq, 1, var_a, var_b, var_g);
001a6c  e9cdab00          STRD     r10,r11,[sp,#0]
001a70  f8941045          LDRB     r1,[r4,#0x45]
001a74  464b              MOV      r3,r9
001a76  2201              MOVS     r2,#1
001a78  4620              MOV      r0,r4
001a7a  f7fffffe          BL       sys_peq_single_set
                  |L1.6782|
;;;1233   	 }
;;;1234   	 
;;;1235   	 sys_send_msg(DATABASE_UPDATE_MSG, 2);
001a7e  2102              MOVS     r1,#2
001a80  4608              MOV      r0,r1
001a82  f7fffffe          BL       sys_send_msg
;;;1236   }
001a86  e8bd9ffc          POP      {r2-r12,pc}
001a8a  0000              DCW      0x0000
                  |L1.6796|
001a8c  7065712d          DCB      "peq-gain",0
001a90  6761696e
001a94  00      
001a95  00                DCB      0
001a96  00                DCB      0
001a97  00                DCB      0
                  |L1.6808|
                          DCD      gSystem_t
                  |L1.6812|
001a9c  7065712d          DCB      "peq-frequency",0
001aa0  66726571
001aa4  75656e63
001aa8  7900    
001aaa  00                DCB      0
001aab  00                DCB      0
                  |L1.6828|
001aac  7065712d          DCB      "peq-width",0
001ab0  77696474
001ab4  6800    
001ab6  00                DCB      0
001ab7  00                DCB      0
                  |L1.6840|
001ab8  6375722d          DCB      "cur-edit-eq-items",0
001abc  65646974
001ac0  2d65712d
001ac4  6974656d
001ac8  7300    
001aca  00                DCB      0
001acb  00                DCB      0
                  |L1.6860|
001acc  6375722d          DCB      "cur-filter-id",0
001ad0  66696c74
001ad4  65722d69
001ad8  6400    
001ada  00                DCB      0
001adb  00                DCB      0
                  |L1.6876|
001adc  66696c74          DCB      "filter-eq-switch",0
001ae0  65722d65
001ae4  712d7377
001ae8  69746368
001aec  00      
001aed  00                DCB      0
001aee  00                DCB      0
001aef  00                DCB      0
                  |L1.6896|
001af0  66696c74          DCB      "filter-save",0
001af4  65722d73
001af8  61766500
                  |L1.6908|
                          DCD      json_output_buf
                  |L1.6912|
                          DCD      pjson
                  |L1.6916|
                          DCD      gEqTemp
                  |L1.6920|
001b08  22706571          DCB      """peq-gain"":""%d"",",0
001b0c  2d676169
001b10  6e223a22
001b14  2564222c
001b18  00      
001b19  00                DCB      0
001b1a  00                DCB      0
001b1b  00                DCB      0
                  |L1.6940|
001b1c  22706571          DCB      """peq-frequency"":""%d"",",0
001b20  2d667265
001b24  7175656e
001b28  6379223a
001b2c  22256422
001b30  2c00    
001b32  00                DCB      0
001b33  00                DCB      0
                  |L1.6964|
001b34  22706571          DCB      """peq-width"":""%d"",",0
001b38  2d776964
001b3c  7468223a
001b40  22256422
001b44  2c00    
001b46  00                DCB      0
001b47  00                DCB      0
                  |L1.6984|
                          DCD      ||.constdata||+0x8b8
                  |L1.6988|
001b4c  22637572          DCB      """cur-edit-eq-items"":""%d"",",0
001b50  2d656469
001b54  742d6571
001b58  2d697465
001b5c  6d73223a
001b60  22256422
001b64  2c00    
001b66  00                DCB      0
001b67  00                DCB      0
                  |L1.7016|
001b68  2266696c          DCB      """filter-items"":[",0
001b6c  7465722d
001b70  6974656d
001b74  73223a5b
001b78  00      
001b79  00                DCB      0
001b7a  00                DCB      0
001b7b  00                DCB      0
                  |L1.7036|
001b7c  5d2c00            DCB      "],",0
001b7f  00                DCB      0
                  |L1.7040|
001b80  22637572          DCB      """cur-filter-id"":""%d"",",0
001b84  2d66696c
001b88  7465722d
001b8c  6964223a
001b90  22256422
001b94  2c00    
001b96  00                DCB      0
001b97  00                DCB      0
                  |L1.7064|
001b98  2266696c          DCB      """filter-eq-switch"":""%d"",",0
001b9c  7465722d
001ba0  65712d73
001ba4  77697463
001ba8  68223a22
001bac  2564222c
001bb0  00      
001bb1  00                DCB      0
001bb2  00                DCB      0
001bb3  00                DCB      0
                  |L1.7092|
                          DCD      json_output_buf+0x7ff
                  |L1.7096|
                          DCD      |symbol_number.32|
                  |L1.7100|
                          DCD      ||.text||+0x414
                  |L1.7104|
001bc0  22766f6c          DCB      """volume"":""%d"",",0
001bc4  756d6522
001bc8  3a222564
001bcc  222c00  
001bcf  00                DCB      0
                  |L1.7120|
001bd0  22706571          DCB      """peq-gain2"":""%d"",",0
001bd4  2d676169
001bd8  6e32223a
001bdc  22256422
001be0  2c00    
001be2  00                DCB      0
001be3  00                DCB      0
                  |L1.7140|
001be4  22706571          DCB      """peq-frequency2"":""%d"",",0
001be8  2d667265
001bec  7175656e
001bf0  63793222
001bf4  3a222564
001bf8  222c00  
001bfb  00                DCB      0
                  |L1.7164|
001bfc  22706571          DCB      """peq-width2"":""%d"",",0
001c00  2d776964
001c04  74683222
001c08  3a222564
001c0c  222c00  
001c0f  00                DCB      0
                  |L1.7184|
001c10  22637572          DCB      """current-peq"":""%d""",0
001c14  72656e74
001c18  2d706571
001c1c  223a2225
001c20  642200  
001c23  00                DCB      0
                  |L1.7204|
                          DCD      |symbol_number.33|
                          ENDP

                  preset_freq2_change_handler PROC
;;;1190   
;;;1191   static void preset_freq2_change_handler(sys_state_t *sys, char *arg, char *a, char *b, char *g)
001c28  e92d5ffc          PUSH     {r2-r12,lr}
;;;1192   {
001c2c  4604              MOV      r4,r0
001c2e  460e              MOV      r6,r1
001c30  4617              MOV      r7,r2
001c32  4698              MOV      r8,r3
;;;1193   	uint16 freq;
;;;1194   	uint32 var_a = atoi(a);
001c34  4638              MOV      r0,r7
001c36  f7fffffe          BL       atoi
001c3a  4681              MOV      r9,r0
;;;1195   	uint32 var_b = atoi(b);
001c3c  4640              MOV      r0,r8
001c3e  f7fffffe          BL       atoi
001c42  4682              MOV      r10,r0
;;;1196   	uint32 var_g = atoi(g);
001c44  980c              LDR      r0,[sp,#0x30]
001c46  f7fffffe          BL       atoi
001c4a  4683              MOV      r11,r0
;;;1197   	
;;;1198   	freq = atoi(arg);
001c4c  4630              MOV      r0,r6
001c4e  f7fffffe          BL       atoi
001c52  b285              UXTH     r5,r0
;;;1199   	
;;;1200   	if(freq <= EQ_FREQ_MAX && freq >= EQ_FREQ_MIN){
001c54  f5b57f96          CMP      r5,#0x12c
001c58  dc2f              BGT      |L1.7354|
001c5a  2d14              CMP      r5,#0x14
001c5c  db2d              BLT      |L1.7354|
;;;1201   		sys->eq->peq[sys->cur_cust_eq].filter[1].freq = freq;
001c5e  f8540f40          LDR      r0,[r4,#0x40]!
001c62  3078              ADDS     r0,r0,#0x78
001c64  7961              LDRB     r1,[r4,#5]
001c66  eb010241          ADD      r2,r1,r1,LSL #1
001c6a  eb0201c1          ADD      r1,r2,r1,LSL #3
001c6e  eb000081          ADD      r0,r0,r1,LSL #2
001c72  8285              STRH     r5,[r0,#0x14]
;;;1202   		sys->eq->peq[sys->cur_cust_eq].filter[1].g = var_g;
001c74  6820              LDR      r0,[r4,#0]
001c76  3078              ADDS     r0,r0,#0x78
001c78  7961              LDRB     r1,[r4,#5]
001c7a  eb010241          ADD      r2,r1,r1,LSL #1
001c7e  eb0201c1          ADD      r1,r2,r1,LSL #3
001c82  eb000081          ADD      r0,r0,r1,LSL #2
001c86  f8c0b024          STR      r11,[r0,#0x24]
;;;1203   		sys->eq->peq[sys->cur_cust_eq].filter[1].a = var_a;
001c8a  6820              LDR      r0,[r4,#0]
001c8c  3078              ADDS     r0,r0,#0x78
001c8e  7961              LDRB     r1,[r4,#5]
001c90  eb010241          ADD      r2,r1,r1,LSL #1
001c94  eb0201c1          ADD      r1,r2,r1,LSL #3
001c98  eb000081          ADD      r0,r0,r1,LSL #2
001c9c  f8c0901c          STR      r9,[r0,#0x1c]
;;;1204   		sys->eq->peq[sys->cur_cust_eq].filter[1].b = var_b;
001ca0  6820              LDR      r0,[r4,#0]
001ca2  3078              ADDS     r0,r0,#0x78
001ca4  7961              LDRB     r1,[r4,#5]
001ca6  f1a40440          SUB      r4,r4,#0x40
001caa  eb010241          ADD      r2,r1,r1,LSL #1
001cae  eb0201c1          ADD      r1,r2,r1,LSL #3
001cb2  eb000081          ADD      r0,r0,r1,LSL #2
001cb6  f8c0a020          STR      r10,[r0,#0x20]
                  |L1.7354|
;;;1205   	}
;;;1206   	
;;;1207   	if(sys->preset == sys->cur_cust_eq){
001cba  7e60              LDRB     r0,[r4,#0x19]
001cbc  f8941045          LDRB     r1,[r4,#0x45]
001cc0  4288              CMP      r0,r1
001cc2  d108              BNE      |L1.7382|
;;;1208   	  sys_peq_single_set(sys, sys->cur_cust_eq, 1, var_a, var_b, var_g);
001cc4  e9cdab00          STRD     r10,r11,[sp,#0]
001cc8  f8941045          LDRB     r1,[r4,#0x45]
001ccc  464b              MOV      r3,r9
001cce  2201              MOVS     r2,#1
001cd0  4620              MOV      r0,r4
001cd2  f7fffffe          BL       sys_peq_single_set
                  |L1.7382|
;;;1209   	 }
;;;1210   	 
;;;1211   	 sys_send_msg(DATABASE_UPDATE_MSG, 2);
001cd6  2102              MOVS     r1,#2
001cd8  4608              MOV      r0,r1
001cda  f7fffffe          BL       sys_send_msg
;;;1212   }
001cde  e8bd9ffc          POP      {r2-r12,pc}
;;;1213   
                          ENDP

                  preset_gain2_change_handler PROC
;;;1167   
;;;1168   static void preset_gain2_change_handler(sys_state_t *sys, char *arg, char *a, char *b, char *g)
001ce2  e92d5ffc          PUSH     {r2-r12,lr}
;;;1169   {
001ce6  4604              MOV      r4,r0
001ce8  460e              MOV      r6,r1
001cea  4617              MOV      r7,r2
001cec  4698              MOV      r8,r3
;;;1170   	 int gain;
;;;1171      uint32 var_a = atoi(a);
001cee  4638              MOV      r0,r7
001cf0  f7fffffe          BL       atoi
001cf4  4681              MOV      r9,r0
;;;1172   	 uint32 var_b = atoi(b);
001cf6  4640              MOV      r0,r8
001cf8  f7fffffe          BL       atoi
001cfc  4682              MOV      r10,r0
;;;1173   	 uint32 var_g = atoi(g);   
001cfe  980c              LDR      r0,[sp,#0x30]
001d00  f7fffffe          BL       atoi
001d04  4683              MOV      r11,r0
;;;1174   	
;;;1175   	 gain = atoi(arg);
001d06  4630              MOV      r0,r6
001d08  f7fffffe          BL       atoi
001d0c  4605              MOV      r5,r0
;;;1176   	 
;;;1177   	 if(gain <= EQ_GAIN_MAX && gain >= EQ_GAIN_MIN){
001d0e  2d0c              CMP      r5,#0xc
001d10  dc30              BGT      |L1.7540|
001d12  f1150f12          CMN      r5,#0x12
001d16  db2d              BLT      |L1.7540|
;;;1178   		 sys->eq->peq[sys->cur_cust_eq].filter[1].gain = gain;
001d18  f8540f40          LDR      r0,[r4,#0x40]!
001d1c  3078              ADDS     r0,r0,#0x78
001d1e  7961              LDRB     r1,[r4,#5]
001d20  eb010241          ADD      r2,r1,r1,LSL #1
001d24  eb0201c1          ADD      r1,r2,r1,LSL #3
001d28  eb000081          ADD      r0,r0,r1,LSL #2
001d2c  6185              STR      r5,[r0,#0x18]
;;;1179   		 sys->eq->peq[sys->cur_cust_eq].filter[1].g = var_g;
001d2e  6820              LDR      r0,[r4,#0]
001d30  3078              ADDS     r0,r0,#0x78
001d32  7961              LDRB     r1,[r4,#5]
001d34  eb010241          ADD      r2,r1,r1,LSL #1
001d38  eb0201c1          ADD      r1,r2,r1,LSL #3
001d3c  eb000081          ADD      r0,r0,r1,LSL #2
001d40  f8c0b024          STR      r11,[r0,#0x24]
;;;1180   		 sys->eq->peq[sys->cur_cust_eq].filter[1].a = var_a;
001d44  6820              LDR      r0,[r4,#0]
001d46  3078              ADDS     r0,r0,#0x78
001d48  7961              LDRB     r1,[r4,#5]
001d4a  eb010241          ADD      r2,r1,r1,LSL #1
001d4e  eb0201c1          ADD      r1,r2,r1,LSL #3
001d52  eb000081          ADD      r0,r0,r1,LSL #2
001d56  f8c0901c          STR      r9,[r0,#0x1c]
;;;1181   		 sys->eq->peq[sys->cur_cust_eq].filter[1].b = var_b;
001d5a  6820              LDR      r0,[r4,#0]
001d5c  3078              ADDS     r0,r0,#0x78
001d5e  7961              LDRB     r1,[r4,#5]
001d60  f1a40440          SUB      r4,r4,#0x40
001d64  eb010241          ADD      r2,r1,r1,LSL #1
001d68  eb0201c1          ADD      r1,r2,r1,LSL #3
001d6c  eb000081          ADD      r0,r0,r1,LSL #2
001d70  f8c0a020          STR      r10,[r0,#0x20]
                  |L1.7540|
;;;1182   	 }
;;;1183   	 
;;;1184   	 if(sys->preset == sys->cur_cust_eq){
001d74  7e60              LDRB     r0,[r4,#0x19]
001d76  f8941045          LDRB     r1,[r4,#0x45]
001d7a  4288              CMP      r0,r1
001d7c  d108              BNE      |L1.7568|
;;;1185   		 sys_peq_single_set(sys, sys->cur_cust_eq, 1, var_a, var_b, var_g);
001d7e  e9cdab00          STRD     r10,r11,[sp,#0]
001d82  f8941045          LDRB     r1,[r4,#0x45]
001d86  464b              MOV      r3,r9
001d88  2201              MOVS     r2,#1
001d8a  4620              MOV      r0,r4
001d8c  f7fffffe          BL       sys_peq_single_set
                  |L1.7568|
;;;1186   	 }
;;;1187   	 
;;;1188   	 sys_send_msg(DATABASE_UPDATE_MSG, 2);
001d90  2102              MOVS     r1,#2
001d92  4608              MOV      r0,r1
001d94  f7fffffe          BL       sys_send_msg
;;;1189   }
001d98  e8bd9ffc          POP      {r2-r12,pc}
;;;1190   
                          ENDP

                  preset_width1_change_handler PROC
;;;1145   
;;;1146   static void preset_width1_change_handler(sys_state_t *sys, char *arg, char *a, char *b, char *g)
001d9c  e92d5ffc          PUSH     {r2-r12,lr}
;;;1147   {
001da0  4604              MOV      r4,r0
001da2  460e              MOV      r6,r1
001da4  4617              MOV      r7,r2
001da6  4698              MOV      r8,r3
;;;1148   	 uint8 q;
;;;1149   	 uint32 var_a = atoi(a);
001da8  4638              MOV      r0,r7
001daa  f7fffffe          BL       atoi
001dae  4681              MOV      r9,r0
;;;1150   	 uint32 var_b = atoi(b);
001db0  4640              MOV      r0,r8
001db2  f7fffffe          BL       atoi
001db6  4682              MOV      r10,r0
;;;1151   	 uint32 var_g = atoi(g);  
001db8  980c              LDR      r0,[sp,#0x30]
001dba  f7fffffe          BL       atoi
001dbe  4683              MOV      r11,r0
;;;1152   	
;;;1153   	 q = atoi(arg);
001dc0  4630              MOV      r0,r6
001dc2  f7fffffe          BL       atoi
001dc6  b2c5              UXTB     r5,r0
;;;1154   	
;;;1155   	 if(q <= EQ_Q_MAX && q >= EQ_Q_MIN){
001dc8  2d78              CMP      r5,#0x78
001dca  dc2f              BGT      |L1.7724|
001dcc  2d03              CMP      r5,#3
001dce  db2d              BLT      |L1.7724|
;;;1156   		 sys->eq->peq[sys->cur_cust_eq].filter[0].Q = q;
001dd0  f8540f40          LDR      r0,[r4,#0x40]!
001dd4  3078              ADDS     r0,r0,#0x78
001dd6  7961              LDRB     r1,[r4,#5]
001dd8  eb010241          ADD      r2,r1,r1,LSL #1
001ddc  eb0201c1          ADD      r1,r2,r1,LSL #3
001de0  eb000081          ADD      r0,r0,r1,LSL #2
001de4  7085              STRB     r5,[r0,#2]
;;;1157   		 sys->eq->peq[sys->cur_cust_eq].filter[0].g = var_g;
001de6  6820              LDR      r0,[r4,#0]
001de8  3078              ADDS     r0,r0,#0x78
001dea  7961              LDRB     r1,[r4,#5]
001dec  eb010241          ADD      r2,r1,r1,LSL #1
001df0  eb0201c1          ADD      r1,r2,r1,LSL #3
001df4  eb000081          ADD      r0,r0,r1,LSL #2
001df8  f8c0b010          STR      r11,[r0,#0x10]
;;;1158   		 sys->eq->peq[sys->cur_cust_eq].filter[0].a = var_a;
001dfc  6820              LDR      r0,[r4,#0]
001dfe  3078              ADDS     r0,r0,#0x78
001e00  7961              LDRB     r1,[r4,#5]
001e02  eb010241          ADD      r2,r1,r1,LSL #1
001e06  eb0201c1          ADD      r1,r2,r1,LSL #3
001e0a  eb000081          ADD      r0,r0,r1,LSL #2
001e0e  f8c09008          STR      r9,[r0,#8]
;;;1159   		 sys->eq->peq[sys->cur_cust_eq].filter[0].b = var_b;
001e12  6820              LDR      r0,[r4,#0]
001e14  3078              ADDS     r0,r0,#0x78
001e16  7961              LDRB     r1,[r4,#5]
001e18  f1a40440          SUB      r4,r4,#0x40
001e1c  eb010241          ADD      r2,r1,r1,LSL #1
001e20  eb0201c1          ADD      r1,r2,r1,LSL #3
001e24  eb000081          ADD      r0,r0,r1,LSL #2
001e28  f8c0a00c          STR      r10,[r0,#0xc]
                  |L1.7724|
;;;1160   	 }
;;;1161   	 
;;;1162   	 if(sys->preset == sys->cur_cust_eq){
001e2c  7e60              LDRB     r0,[r4,#0x19]
001e2e  f8941045          LDRB     r1,[r4,#0x45]
001e32  4288              CMP      r0,r1
001e34  d108              BNE      |L1.7752|
;;;1163   		 sys_peq_single_set(sys, sys->cur_cust_eq, 0, var_a, var_b, var_g);
001e36  e9cdab00          STRD     r10,r11,[sp,#0]
001e3a  f8941045          LDRB     r1,[r4,#0x45]
001e3e  464b              MOV      r3,r9
001e40  2200              MOVS     r2,#0
001e42  4620              MOV      r0,r4
001e44  f7fffffe          BL       sys_peq_single_set
                  |L1.7752|
;;;1164   	 }
;;;1165   	 sys_send_msg(DATABASE_UPDATE_MSG, 2);
001e48  2102              MOVS     r1,#2
001e4a  4608              MOV      r0,r1
001e4c  f7fffffe          BL       sys_send_msg
;;;1166   }
001e50  e8bd9ffc          POP      {r2-r12,pc}
;;;1167   
                          ENDP

                  preset_freq1_change_handler PROC
;;;1121   
;;;1122   static void preset_freq1_change_handler(sys_state_t *sys, char *arg, char *a, char *b, char *g)
001e54  e92d5ffc          PUSH     {r2-r12,lr}
;;;1123   {
001e58  4604              MOV      r4,r0
001e5a  460e              MOV      r6,r1
001e5c  4617              MOV      r7,r2
001e5e  4698              MOV      r8,r3
;;;1124   	uint16 freq;
;;;1125   	uint32 var_a = atoi(a);
001e60  4638              MOV      r0,r7
001e62  f7fffffe          BL       atoi
001e66  4681              MOV      r9,r0
;;;1126   	uint32 var_b = atoi(b);
001e68  4640              MOV      r0,r8
001e6a  f7fffffe          BL       atoi
001e6e  4682              MOV      r10,r0
;;;1127   	uint32 var_g = atoi(g);  
001e70  980c              LDR      r0,[sp,#0x30]
001e72  f7fffffe          BL       atoi
001e76  4683              MOV      r11,r0
;;;1128   	
;;;1129   	freq = atoi(arg);
001e78  4630              MOV      r0,r6
001e7a  f7fffffe          BL       atoi
001e7e  b285              UXTH     r5,r0
;;;1130   	
;;;1131   	if(freq <= EQ_FREQ_MAX && freq >= EQ_FREQ_MIN){
001e80  f5b57f96          CMP      r5,#0x12c
001e84  dc2e              BGT      |L1.7908|
001e86  2d14              CMP      r5,#0x14
001e88  db2c              BLT      |L1.7908|
;;;1132   		 sys->eq->peq[sys->cur_cust_eq].filter[0].freq = freq;
001e8a  f8540f40          LDR      r0,[r4,#0x40]!
001e8e  3078              ADDS     r0,r0,#0x78
001e90  7961              LDRB     r1,[r4,#5]
001e92  eb010241          ADD      r2,r1,r1,LSL #1
001e96  eb0201c1          ADD      r1,r2,r1,LSL #3
001e9a  f8205021          STRH     r5,[r0,r1,LSL #2]
;;;1133   		 sys->eq->peq[sys->cur_cust_eq].filter[0].g = var_g;
001e9e  6820              LDR      r0,[r4,#0]
001ea0  3078              ADDS     r0,r0,#0x78
001ea2  7961              LDRB     r1,[r4,#5]
001ea4  eb010241          ADD      r2,r1,r1,LSL #1
001ea8  eb0201c1          ADD      r1,r2,r1,LSL #3
001eac  eb000081          ADD      r0,r0,r1,LSL #2
001eb0  f8c0b010          STR      r11,[r0,#0x10]
;;;1134   		 sys->eq->peq[sys->cur_cust_eq].filter[0].a = var_a;
001eb4  6820              LDR      r0,[r4,#0]
001eb6  3078              ADDS     r0,r0,#0x78
001eb8  7961              LDRB     r1,[r4,#5]
001eba  eb010241          ADD      r2,r1,r1,LSL #1
001ebe  eb0201c1          ADD      r1,r2,r1,LSL #3
001ec2  eb000081          ADD      r0,r0,r1,LSL #2
001ec6  f8c09008          STR      r9,[r0,#8]
;;;1135   		 sys->eq->peq[sys->cur_cust_eq].filter[0].b = var_b;
001eca  6820              LDR      r0,[r4,#0]
001ecc  3078              ADDS     r0,r0,#0x78
001ece  7961              LDRB     r1,[r4,#5]
001ed0  f1a40440          SUB      r4,r4,#0x40
001ed4  eb010241          ADD      r2,r1,r1,LSL #1
001ed8  eb0201c1          ADD      r1,r2,r1,LSL #3
001edc  eb000081          ADD      r0,r0,r1,LSL #2
001ee0  f8c0a00c          STR      r10,[r0,#0xc]
                  |L1.7908|
;;;1136   	}
;;;1137   	
;;;1138   	if(sys->preset == sys->cur_cust_eq){
001ee4  7e60              LDRB     r0,[r4,#0x19]
001ee6  f8941045          LDRB     r1,[r4,#0x45]
001eea  4288              CMP      r0,r1
001eec  d108              BNE      |L1.7936|
;;;1139   		 sys_peq_single_set(sys, sys->cur_cust_eq, 0, var_a, var_b, var_g);
001eee  e9cdab00          STRD     r10,r11,[sp,#0]
001ef2  f8941045          LDRB     r1,[r4,#0x45]
001ef6  464b              MOV      r3,r9
001ef8  2200              MOVS     r2,#0
001efa  4620              MOV      r0,r4
001efc  f7fffffe          BL       sys_peq_single_set
                  |L1.7936|
;;;1140   	 }
;;;1141   	 
;;;1142   	 sys_send_msg(DATABASE_UPDATE_MSG, 2);
001f00  2102              MOVS     r1,#2
001f02  4608              MOV      r0,r1
001f04  f7fffffe          BL       sys_send_msg
;;;1143   }
001f08  e8bd9ffc          POP      {r2-r12,pc}
;;;1144   
                          ENDP

                  preset_gain1_change_handler PROC
;;;1098   
;;;1099   static void preset_gain1_change_handler(sys_state_t *sys, char *arg, char *a, char *b, char *g)
001f0c  e92d5ffc          PUSH     {r2-r12,lr}
;;;1100   {
001f10  4604              MOV      r4,r0
001f12  460e              MOV      r6,r1
001f14  4617              MOV      r7,r2
001f16  4698              MOV      r8,r3
;;;1101   	 int gain;
;;;1102   	 uint32 var_a = atoi(a);
001f18  4638              MOV      r0,r7
001f1a  f7fffffe          BL       atoi
001f1e  4681              MOV      r9,r0
;;;1103   	 uint32 var_b = atoi(b);
001f20  4640              MOV      r0,r8
001f22  f7fffffe          BL       atoi
001f26  4682              MOV      r10,r0
;;;1104   	 uint32 var_g = atoi(g);  
001f28  980c              LDR      r0,[sp,#0x30]
001f2a  f7fffffe          BL       atoi
001f2e  4683              MOV      r11,r0
;;;1105   	
;;;1106   	 gain = atoi(arg);
001f30  4630              MOV      r0,r6
001f32  f7fffffe          BL       atoi
001f36  4605              MOV      r5,r0
;;;1107   	 
;;;1108   	 if(gain <= EQ_GAIN_MAX && gain >= EQ_GAIN_MIN){
001f38  2d0c              CMP      r5,#0xc
001f3a  dc30              BGT      |L1.8094|
001f3c  f1150f12          CMN      r5,#0x12
001f40  db2d              BLT      |L1.8094|
;;;1109   		 sys->eq->peq[sys->cur_cust_eq].filter[0].gain = gain;
001f42  f8540f40          LDR      r0,[r4,#0x40]!
001f46  3078              ADDS     r0,r0,#0x78
001f48  7961              LDRB     r1,[r4,#5]
001f4a  eb010241          ADD      r2,r1,r1,LSL #1
001f4e  eb0201c1          ADD      r1,r2,r1,LSL #3
001f52  eb000081          ADD      r0,r0,r1,LSL #2
001f56  6045              STR      r5,[r0,#4]
;;;1110   		 sys->eq->peq[sys->cur_cust_eq].filter[0].g = var_g;
001f58  6820              LDR      r0,[r4,#0]
001f5a  3078              ADDS     r0,r0,#0x78
001f5c  7961              LDRB     r1,[r4,#5]
001f5e  eb010241          ADD      r2,r1,r1,LSL #1
001f62  eb0201c1          ADD      r1,r2,r1,LSL #3
001f66  eb000081          ADD      r0,r0,r1,LSL #2
001f6a  f8c0b010          STR      r11,[r0,#0x10]
;;;1111   		 sys->eq->peq[sys->cur_cust_eq].filter[0].a = var_a;
001f6e  6820              LDR      r0,[r4,#0]
001f70  3078              ADDS     r0,r0,#0x78
001f72  7961              LDRB     r1,[r4,#5]
001f74  eb010241          ADD      r2,r1,r1,LSL #1
001f78  eb0201c1          ADD      r1,r2,r1,LSL #3
001f7c  eb000081          ADD      r0,r0,r1,LSL #2
001f80  f8c09008          STR      r9,[r0,#8]
;;;1112   		 sys->eq->peq[sys->cur_cust_eq].filter[0].b = var_b;
001f84  6820              LDR      r0,[r4,#0]
001f86  3078              ADDS     r0,r0,#0x78
001f88  7961              LDRB     r1,[r4,#5]
001f8a  f1a40440          SUB      r4,r4,#0x40
001f8e  eb010241          ADD      r2,r1,r1,LSL #1
001f92  eb0201c1          ADD      r1,r2,r1,LSL #3
001f96  eb000081          ADD      r0,r0,r1,LSL #2
001f9a  f8c0a00c          STR      r10,[r0,#0xc]
                  |L1.8094|
;;;1113   	 }
;;;1114   	 
;;;1115   	 if(sys->preset == sys->cur_cust_eq){
001f9e  7e60              LDRB     r0,[r4,#0x19]
001fa0  f8941045          LDRB     r1,[r4,#0x45]
001fa4  4288              CMP      r0,r1
001fa6  d108              BNE      |L1.8122|
;;;1116   		 sys_peq_single_set(sys, sys->cur_cust_eq, 0, var_a, var_b, var_g);
001fa8  e9cdab00          STRD     r10,r11,[sp,#0]
001fac  f8941045          LDRB     r1,[r4,#0x45]
001fb0  464b              MOV      r3,r9
001fb2  2200              MOVS     r2,#0
001fb4  4620              MOV      r0,r4
001fb6  f7fffffe          BL       sys_peq_single_set
                  |L1.8122|
;;;1117   	 }
;;;1118   	 
;;;1119   	 sys_send_msg(DATABASE_UPDATE_MSG, 2);
001fba  2102              MOVS     r1,#2
001fbc  4608              MOV      r0,r1
001fbe  f7fffffe          BL       sys_send_msg
;;;1120   }
001fc2  e8bd9ffc          POP      {r2-r12,pc}
;;;1121   
                          ENDP

                  preset_vol_change_handler PROC
;;;1078   
;;;1079   static void preset_vol_change_handler(sys_state_t *sys, char *arg)
001fc6  b570              PUSH     {r4-r6,lr}
;;;1080   {
001fc8  4604              MOV      r4,r0
001fca  460e              MOV      r6,r1
;;;1081     int vol;
;;;1082   
;;;1083     vol = atoi(arg);
001fcc  4630              MOV      r0,r6
001fce  f7fffffe          BL       atoi
001fd2  4605              MOV      r5,r0
;;;1084   	
;;;1085   	if(vol <= VOLUME_VALUE_MAX(sys->input_gain) && vol >= VOLUME_VALUE_MIN(sys->input_gain)){
001fd4  69e0              LDR      r0,[r4,#0x1c]
001fd6  2800              CMP      r0,#0
001fd8  db03              BLT      |L1.8162|
001fda  69e0              LDR      r0,[r4,#0x1c]
001fdc  f1c0000b          RSB      r0,r0,#0xb
001fe0  e000              B        |L1.8164|
                  |L1.8162|
001fe2  200b              MOVS     r0,#0xb
                  |L1.8164|
001fe4  42a8              CMP      r0,r5
001fe6  db16              BLT      |L1.8214|
001fe8  69e0              LDR      r0,[r4,#0x1c]
001fea  2800              CMP      r0,#0
001fec  db02              BLT      |L1.8180|
001fee  f06f0027          MVN      r0,#0x27
001ff2  e003              B        |L1.8188|
                  |L1.8180|
001ff4  f06f0127          MVN      r1,#0x27
001ff8  69e0              LDR      r0,[r4,#0x1c]
001ffa  1a08              SUBS     r0,r1,r0
                  |L1.8188|
001ffc  42a8              CMP      r0,r5
001ffe  dc0a              BGT      |L1.8214|
;;;1086   		sys->eq->peq[sys->cur_cust_eq].vol = vol;
002000  6c20              LDR      r0,[r4,#0x40]
002002  3078              ADDS     r0,r0,#0x78
002004  f8941045          LDRB     r1,[r4,#0x45]
002008  eb010241          ADD      r2,r1,r1,LSL #1
00200c  eb0201c1          ADD      r1,r2,r1,LSL #3
002010  eb000081          ADD      r0,r0,r1,LSL #2
002014  6285              STR      r5,[r0,#0x28]
                  |L1.8214|
;;;1087   	}
;;;1088   	
;;;1089   	if(sys->preset == sys->cur_cust_eq){
002016  7e60              LDRB     r0,[r4,#0x19]
002018  f8941045          LDRB     r1,[r4,#0x45]
00201c  4288              CMP      r0,r1
00201e  d10e              BNE      |L1.8254|
;;;1090   		 sys->master_vol = sys->eq->peq[sys->cur_cust_eq].vol;
002020  6c20              LDR      r0,[r4,#0x40]
002022  3078              ADDS     r0,r0,#0x78
002024  f8941045          LDRB     r1,[r4,#0x45]
002028  eb010241          ADD      r2,r1,r1,LSL #1
00202c  eb0201c1          ADD      r1,r2,r1,LSL #3
002030  eb000081          ADD      r0,r0,r1,LSL #2
002034  6a80              LDR      r0,[r0,#0x28]
002036  6160              STR      r0,[r4,#0x14]
;;;1091   		 sys_master_vol_set(sys);
002038  4620              MOV      r0,r4
00203a  f7fffffe          BL       sys_master_vol_set
                  |L1.8254|
;;;1092   		 //sys_eq_single_set(sys, sys->cur_cust_eq, 0);
;;;1093   	 }
;;;1094   	 
;;;1095   	 dis_send_msg(DIS_UPDATE, MENU_NUM);
00203e  2116              MOVS     r1,#0x16
002040  2001              MOVS     r0,#1
002042  f7fffffe          BL       dis_send_msg
;;;1096   	 sys_send_msg(DATABASE_UPDATE_MSG, 2);
002046  2102              MOVS     r1,#2
002048  4608              MOV      r0,r1
00204a  f7fffffe          BL       sys_send_msg
;;;1097   }
00204e  bd70              POP      {r4-r6,pc}
;;;1098   
                          ENDP

                  do_preset_cgi_page PROC
;;;890    
;;;891    static void do_preset_cgi_page(int argv, char *argc[])
002050  b538              PUSH     {r3-r5,lr}
;;;892    {
002052  4605              MOV      r5,r0
002054  460c              MOV      r4,r1
;;;893    	if(argv < 4) return;
002056  2d04              CMP      r5,#4
002058  da00              BGE      |L1.8284|
                  |L1.8282|
;;;894    	
;;;895    	if(strcmp(argc[2]+5, "volume") == 0){
;;;896    		preset_vol_change_handler(gSystem_t, argc[3]+6);
;;;897    	}else if(strcmp(argc[2]+5, "peq-gain") == 0){
;;;898    		preset_gain1_change_handler(gSystem_t, argc[3]+6, argc[4]+7, argc[5]+7, argc[6]+7);
;;;899    	}else if(strcmp(argc[2]+5, "peq-frequency") == 0){
;;;900    		preset_freq1_change_handler(gSystem_t, argc[3]+6, argc[4]+7, argc[5]+7, argc[6]+7);
;;;901    	}else if(strcmp(argc[2]+5, "peq-width") == 0){
;;;902    		preset_width1_change_handler(gSystem_t, argc[3]+6, argc[4]+7, argc[5]+7, argc[6]+7);
;;;903    	}else if(strcmp(argc[2]+5, "peq-gain2") == 0){
;;;904    		preset_gain2_change_handler(gSystem_t, argc[3]+6, argc[4]+7, argc[5]+7, argc[6]+7);
;;;905    	}else if(strcmp(argc[2]+5, "peq-frequency2") == 0){
;;;906    		preset_freq2_change_handler(gSystem_t, argc[3]+6, argc[4]+7, argc[5]+7, argc[6]+7);
;;;907    	}else if(strcmp(argc[2]+5, "peq-width2") == 0){
;;;908    		preset_width2_change_handler(gSystem_t, argc[3]+6, argc[4]+7, argc[5]+7, argc[6]+7);
;;;909    	}else if(strcmp(argc[2]+5, "current-peq") == 0){
;;;910    		preset_customer_eq_select_handler(gSystem_t, argc[3]+6);
;;;911    	}
;;;912    }
00205a  bd38              POP      {r3-r5,pc}
                  |L1.8284|
00205c  68a1              LDR      r1,[r4,#8]            ;895
00205e  1d48              ADDS     r0,r1,#5              ;895
002060  a1f9              ADR      r1,|L1.9288|
002062  f7fffffe          BL       strcmp
002066  b930              CBNZ     r0,|L1.8310|
002068  68e0              LDR      r0,[r4,#0xc]          ;896
00206a  1d81              ADDS     r1,r0,#6              ;896
00206c  48f8              LDR      r0,|L1.9296|
00206e  6800              LDR      r0,[r0,#0]            ;896  ; gSystem_t
002070  f7fffffe          BL       preset_vol_change_handler
002074  e086              B        |L1.8580|
                  |L1.8310|
002076  68a1              LDR      r1,[r4,#8]            ;897
002078  1d48              ADDS     r0,r1,#5              ;897
00207a  f2af51f0          ADR      r1,|L1.6796|
00207e  f7fffffe          BL       strcmp
002082  b968              CBNZ     r0,|L1.8352|
002084  69a0              LDR      r0,[r4,#0x18]         ;898
002086  1dc0              ADDS     r0,r0,#7              ;898
002088  9000              STR      r0,[sp,#0]            ;898
00208a  6960              LDR      r0,[r4,#0x14]         ;898
00208c  1dc3              ADDS     r3,r0,#7              ;898
00208e  6920              LDR      r0,[r4,#0x10]         ;898
002090  1dc2              ADDS     r2,r0,#7              ;898
002092  68e0              LDR      r0,[r4,#0xc]          ;898
002094  1d81              ADDS     r1,r0,#6              ;898
002096  48ee              LDR      r0,|L1.9296|
002098  6800              LDR      r0,[r0,#0]            ;898  ; gSystem_t
00209a  f7fffffe          BL       preset_gain1_change_handler
00209e  e071              B        |L1.8580|
                  |L1.8352|
0020a0  68a1              LDR      r1,[r4,#8]            ;899
0020a2  1d48              ADDS     r0,r1,#5              ;899
0020a4  f2af610c          ADR      r1,|L1.6812|
0020a8  f7fffffe          BL       strcmp
0020ac  b968              CBNZ     r0,|L1.8394|
0020ae  69a0              LDR      r0,[r4,#0x18]         ;900
0020b0  1dc0              ADDS     r0,r0,#7              ;900
0020b2  9000              STR      r0,[sp,#0]            ;900
0020b4  6960              LDR      r0,[r4,#0x14]         ;900
0020b6  1dc3              ADDS     r3,r0,#7              ;900
0020b8  6920              LDR      r0,[r4,#0x10]         ;900
0020ba  1dc2              ADDS     r2,r0,#7              ;900
0020bc  68e0              LDR      r0,[r4,#0xc]          ;900
0020be  1d81              ADDS     r1,r0,#6              ;900
0020c0  48e3              LDR      r0,|L1.9296|
0020c2  6800              LDR      r0,[r0,#0]            ;900  ; gSystem_t
0020c4  f7fffffe          BL       preset_freq1_change_handler
0020c8  e05c              B        |L1.8580|
                  |L1.8394|
0020ca  68a1              LDR      r1,[r4,#8]            ;901
0020cc  1d48              ADDS     r0,r1,#5              ;901
0020ce  f2af6124          ADR      r1,|L1.6828|
0020d2  f7fffffe          BL       strcmp
0020d6  b968              CBNZ     r0,|L1.8436|
0020d8  69a0              LDR      r0,[r4,#0x18]         ;902
0020da  1dc0              ADDS     r0,r0,#7              ;902
0020dc  9000              STR      r0,[sp,#0]            ;902
0020de  6960              LDR      r0,[r4,#0x14]         ;902
0020e0  1dc3              ADDS     r3,r0,#7              ;902
0020e2  6920              LDR      r0,[r4,#0x10]         ;902
0020e4  1dc2              ADDS     r2,r0,#7              ;902
0020e6  68e0              LDR      r0,[r4,#0xc]          ;902
0020e8  1d81              ADDS     r1,r0,#6              ;902
0020ea  48d9              LDR      r0,|L1.9296|
0020ec  6800              LDR      r0,[r0,#0]            ;902  ; gSystem_t
0020ee  f7fffffe          BL       preset_width1_change_handler
0020f2  e047              B        |L1.8580|
                  |L1.8436|
0020f4  68a1              LDR      r1,[r4,#8]            ;903
0020f6  1d48              ADDS     r0,r1,#5              ;903
0020f8  a1d6              ADR      r1,|L1.9300|
0020fa  f7fffffe          BL       strcmp
0020fe  b968              CBNZ     r0,|L1.8476|
002100  69a0              LDR      r0,[r4,#0x18]         ;904
002102  1dc0              ADDS     r0,r0,#7              ;904
002104  9000              STR      r0,[sp,#0]            ;904
002106  6960              LDR      r0,[r4,#0x14]         ;904
002108  1dc3              ADDS     r3,r0,#7              ;904
00210a  6920              LDR      r0,[r4,#0x10]         ;904
00210c  1dc2              ADDS     r2,r0,#7              ;904
00210e  68e0              LDR      r0,[r4,#0xc]          ;904
002110  1d81              ADDS     r1,r0,#6              ;904
002112  48cf              LDR      r0,|L1.9296|
002114  6800              LDR      r0,[r0,#0]            ;904  ; gSystem_t
002116  f7fffffe          BL       preset_gain2_change_handler
00211a  e033              B        |L1.8580|
                  |L1.8476|
00211c  68a1              LDR      r1,[r4,#8]            ;905
00211e  1d48              ADDS     r0,r1,#5              ;905
002120  a1cf              ADR      r1,|L1.9312|
002122  f7fffffe          BL       strcmp
002126  b968              CBNZ     r0,|L1.8516|
002128  69a0              LDR      r0,[r4,#0x18]         ;906
00212a  1dc0              ADDS     r0,r0,#7              ;906
00212c  9000              STR      r0,[sp,#0]            ;906
00212e  6960              LDR      r0,[r4,#0x14]         ;906
002130  1dc3              ADDS     r3,r0,#7              ;906
002132  6920              LDR      r0,[r4,#0x10]         ;906
002134  1dc2              ADDS     r2,r0,#7              ;906
002136  68e0              LDR      r0,[r4,#0xc]          ;906
002138  1d81              ADDS     r1,r0,#6              ;906
00213a  48c5              LDR      r0,|L1.9296|
00213c  6800              LDR      r0,[r0,#0]            ;906  ; gSystem_t
00213e  f7fffffe          BL       preset_freq2_change_handler
002142  e01f              B        |L1.8580|
                  |L1.8516|
002144  68a1              LDR      r1,[r4,#8]            ;907
002146  1d48              ADDS     r0,r1,#5              ;907
002148  a1c9              ADR      r1,|L1.9328|
00214a  f7fffffe          BL       strcmp
00214e  b968              CBNZ     r0,|L1.8556|
002150  69a0              LDR      r0,[r4,#0x18]         ;908
002152  1dc0              ADDS     r0,r0,#7              ;908
002154  9000              STR      r0,[sp,#0]            ;908
002156  6960              LDR      r0,[r4,#0x14]         ;908
002158  1dc3              ADDS     r3,r0,#7              ;908
00215a  6920              LDR      r0,[r4,#0x10]         ;908
00215c  1dc2              ADDS     r2,r0,#7              ;908
00215e  68e0              LDR      r0,[r4,#0xc]          ;908
002160  1d81              ADDS     r1,r0,#6              ;908
002162  48bb              LDR      r0,|L1.9296|
002164  6800              LDR      r0,[r0,#0]            ;908  ; gSystem_t
002166  f7fffffe          BL       preset_width2_change_handler
00216a  e00b              B        |L1.8580|
                  |L1.8556|
00216c  68a1              LDR      r1,[r4,#8]            ;909
00216e  1d48              ADDS     r0,r1,#5              ;909
002170  a1c2              ADR      r1,|L1.9340|
002172  f7fffffe          BL       strcmp
002176  b928              CBNZ     r0,|L1.8580|
002178  68e0              LDR      r0,[r4,#0xc]          ;910
00217a  1d81              ADDS     r1,r0,#6              ;910
00217c  48b4              LDR      r0,|L1.9296|
00217e  6800              LDR      r0,[r0,#0]            ;910  ; gSystem_t
002180  f7fffffe          BL       preset_customer_eq_select_handler
                  |L1.8580|
002184  bf00              NOP      
002186  e768              B        |L1.8282|
;;;913    
                          ENDP

                  Cgi_preset_page_handler PROC
;;;914    
;;;915    static int Cgi_preset_page_handler(http_state_t *hs,int argv, char *argc[])
002188  b570              PUSH     {r4-r6,lr}
;;;916    {
00218a  4606              MOV      r6,r0
00218c  460c              MOV      r4,r1
00218e  4615              MOV      r5,r2
;;;917    	if(argv >= 2){
002190  2c02              CMP      r4,#2
002192  db0d              BLT      |L1.8624|
;;;918         if(strcmp(argc[1], "action=write") == 0){
002194  49bc              LDR      r1,|L1.9352|
002196  6868              LDR      r0,[r5,#4]
002198  f7fffffe          BL       strcmp
00219c  b918              CBNZ     r0,|L1.8614|
;;;919    			 do_preset_cgi_page(argv,argc);
00219e  4629              MOV      r1,r5
0021a0  4620              MOV      r0,r4
0021a2  f7fffffe          BL       do_preset_cgi_page
                  |L1.8614|
;;;920    		 }
;;;921    		   _load_preset_page_json_file(gSystem_t, hs);
0021a6  4631              MOV      r1,r6
0021a8  48a9              LDR      r0,|L1.9296|
0021aa  6800              LDR      r0,[r0,#0]  ; gSystem_t
0021ac  f7fffffe          BL       _load_preset_page_json_file
                  |L1.8624|
;;;922    	}	  
;;;923    	
;;;924    	
;;;925    	return 0;
0021b0  2000              MOVS     r0,#0
;;;926    }
0021b2  bd70              POP      {r4-r6,pc}
;;;927    
                          ENDP

                  _load_ipconfig_page_json_file PROC
;;;928    static void _load_ipconfig_page_json_file(sys_state_t *sys, http_state_t *hs)
0021b4  b53e              PUSH     {r1-r5,lr}
;;;929    {
0021b6  4604              MOV      r4,r0
0021b8  460d              MOV      r5,r1
;;;930    	 JSON_OUTPUT_BEGIN();
0021ba  48b4              LDR      r0,|L1.9356|
0021bc  49b4              LDR      r1,|L1.9360|
0021be  6008              STR      r0,[r1,#0]  ; pjson
0021c0  f44f6100          MOV      r1,#0x800
0021c4  f7fffffe          BL       __aeabi_memclr
0021c8  a1b2              ADR      r1,|L1.9364|
0021ca  48b1              LDR      r0,|L1.9360|
0021cc  6800              LDR      r0,[r0,#0]  ; pjson
0021ce  f7fffffe          BL       strcat
0021d2  48af              LDR      r0,|L1.9360|
0021d4  6800              LDR      r0,[r0,#0]  ; pjson
0021d6  1c40              ADDS     r0,r0,#1
0021d8  49ad              LDR      r1,|L1.9360|
0021da  6008              STR      r0,[r1,#0]  ; pjson
;;;931    	
;;;932    	 json_output_print("\"mac-address\":\"%02x.%02x.%02x.%02x.%02x.%02x\",", g_MACArray[0], g_MACArray[1], g_MACArray[2], g_MACArray[3], g_MACArray[4], g_MACArray[5]);
0021dc  48ae              LDR      r0,|L1.9368|
0021de  7941              LDRB     r1,[r0,#5]  ; g_MACArray
0021e0  7900              LDRB     r0,[r0,#4]  ; g_MACArray
0021e2  4aad              LDR      r2,|L1.9368|
0021e4  78d2              LDRB     r2,[r2,#3]  ; g_MACArray
0021e6  e9cd2000          STRD     r2,r0,[sp,#0]
0021ea  9102              STR      r1,[sp,#8]
0021ec  48aa              LDR      r0,|L1.9368|
0021ee  7883              LDRB     r3,[r0,#2]  ; g_MACArray
0021f0  7842              LDRB     r2,[r0,#1]  ; g_MACArray
0021f2  7801              LDRB     r1,[r0,#0]  ; g_MACArray
0021f4  a0a9              ADR      r0,|L1.9372|
0021f6  f7fffffe          BL       json_output_print
;;;933    	 json_output_print("\"ip-address\":\"%d.%d.%d.%d\",", ((sys->ip >> 24) & 0xff), ((sys->ip >> 16) & 0xff), ((sys->ip >> 8) & 0xff), (sys->ip & 0xff));
0021fa  7820              LDRB     r0,[r4,#0]
0021fc  9000              STR      r0,[sp,#0]
0021fe  8820              LDRH     r0,[r4,#0]
002200  f3c02307          UBFX     r3,r0,#8,#8
002204  6820              LDR      r0,[r4,#0]
002206  f3c04207          UBFX     r2,r0,#16,#8
00220a  0e01              LSRS     r1,r0,#24
00220c  a0af              ADR      r0,|L1.9420|
00220e  f7fffffe          BL       json_output_print
;;;934    	 json_output_print("\"gateway\":\"%d.%d.%d.%d\",", ((sys->gateway >> 24) & 0xff), ((sys->gateway >> 16) & 0xff), ((sys->gateway >> 8) & 0xff), (sys->gateway & 0xff));
002212  7a20              LDRB     r0,[r4,#8]
002214  9000              STR      r0,[sp,#0]
002216  8920              LDRH     r0,[r4,#8]
002218  f3c02307          UBFX     r3,r0,#8,#8
00221c  68a0              LDR      r0,[r4,#8]
00221e  f3c04207          UBFX     r2,r0,#16,#8
002222  0e01              LSRS     r1,r0,#24
002224  a0b0              ADR      r0,|L1.9448|
002226  f7fffffe          BL       json_output_print
;;;935    	 json_output_print("\"sub-mask\":\"%d.%d.%d.%d\",", ((sys->netmask >> 24) & 0xff), ((sys->netmask >> 16) & 0xff), ((sys->netmask >> 8) & 0xff), (sys->netmask & 0xff));
00222a  7920              LDRB     r0,[r4,#4]
00222c  9000              STR      r0,[sp,#0]
00222e  88a0              LDRH     r0,[r4,#4]
002230  f3c02307          UBFX     r3,r0,#8,#8
002234  6860              LDR      r0,[r4,#4]
002236  f3c04207          UBFX     r2,r0,#16,#8
00223a  0e01              LSRS     r1,r0,#24
00223c  a0b1              ADR      r0,|L1.9476|
00223e  f7fffffe          BL       json_output_print
;;;936    	 json_output_print("\"host-name\":\"%s\",", "RackAmp700DSP");
002242  a1b7              ADR      r1,|L1.9504|
002244  a0ba              ADR      r0,|L1.9520|
002246  f7fffffe          BL       json_output_print
;;;937    	 json_output_print("\"primary-dns\":\"%s\",", "10.10.1.3");
00224a  a1be              ADR      r1,|L1.9540|
00224c  a0c0              ADR      r0,|L1.9552|
00224e  f7fffffe          BL       json_output_print
;;;938    	 json_output_print("\"secondary-dns\":\"%s\",", "221.6.4.67");
002252  a1c4              ADR      r1,|L1.9572|
002254  a0c6              ADR      r0,|L1.9584|
002256  f7fffffe          BL       json_output_print
;;;939    	 json_output_print("\"dhcp-enable\":\"%d\"", sys->ip_mode == 1? (1):(0));
00225a  7ca0              LDRB     r0,[r4,#0x12]
00225c  2801              CMP      r0,#1
00225e  d100              BNE      |L1.8802|
002260  e000              B        |L1.8804|
                  |L1.8802|
002262  2000              MOVS     r0,#0
                  |L1.8804|
002264  4601              MOV      r1,r0
002266  a0c8              ADR      r0,|L1.9608|
002268  f7fffffe          BL       json_output_print
;;;940    	 
;;;941    	 JSON_OUTPUT_END();
00226c  4888              LDR      r0,|L1.9360|
00226e  6800              LDR      r0,[r0,#0]  ; pjson
002270  1c40              ADDS     r0,r0,#1
002272  49ca              LDR      r1,|L1.9628|
002274  4288              CMP      r0,r1
002276  d308              BCC      |L1.8842|
002278  4ac9              LDR      r2,|L1.9632|
00227a  4983              LDR      r1,|L1.9352|
00227c  3938              SUBS     r1,r1,#0x38
00227e  f5a16042          SUB      r0,r1,#0xc20
002282  f7fffffe          BL       s_printf
002286  bf00              NOP      
                  |L1.8840|
002288  e7fe              B        |L1.8840|
                  |L1.8842|
00228a  a1c6              ADR      r1,|L1.9636|
00228c  4880              LDR      r0,|L1.9360|
00228e  6800              LDR      r0,[r0,#0]  ; pjson
002290  f7fffffe          BL       strcat
;;;942    	
;;;943    	 hs->file = json_output_buf;
002294  487d              LDR      r0,|L1.9356|
002296  6068              STR      r0,[r5,#4]
;;;944    	 hs->left = strlen(json_output_buf);  
002298  f7fffffe          BL       strlen
00229c  60e8              STR      r0,[r5,#0xc]
;;;945    }
00229e  bd3e              POP      {r1-r5,pc}
;;;946    
                          ENDP

                  do_ipconfig_cgi_page PROC
;;;949    
;;;950    static void do_ipconfig_cgi_page(int argv, char *argc[])
0022a0  e92d41f0          PUSH     {r4-r8,lr}
;;;951    {
0022a4  b086              SUB      sp,sp,#0x18
0022a6  4605              MOV      r5,r0
0022a8  460c              MOV      r4,r1
;;;952    	int temp[4];
;;;953    	uint32 ip = 0,mask = 0,gate = 0;
0022aa  2600              MOVS     r6,#0
0022ac  2700              MOVS     r7,#0
0022ae  46b0              MOV      r8,r6
;;;954    	
;;;955      SYS_TRACE("hostname:%s\r\n", &argc[2][10]);
0022b0  68a0              LDR      r0,[r4,#8]
0022b2  f100010a          ADD      r1,r0,#0xa
0022b6  a0bc              ADR      r0,|L1.9640|
0022b8  f7fffffe          BL       s_printf
;;;956    	
;;;957    	SetHostName(&argc[2][10]);
0022bc  68a1              LDR      r1,[r4,#8]
0022be  f101000a          ADD      r0,r1,#0xa
0022c2  f7fffffe          BL       SetHostName
;;;958    	
;;;959    	if(argv == 10){
0022c6  2d0a              CMP      r5,#0xa
0022c8  d153              BNE      |L1.9074|
;;;960    		sscanf(argc[4], "ip-address=%d.%d.%d.%d", &temp[0], &temp[1],&temp[2],&temp[3]);
0022ca  a805              ADD      r0,sp,#0x14
0022cc  a904              ADD      r1,sp,#0x10
0022ce  e9cd1000          STRD     r1,r0,[sp,#0]
0022d2  ab03              ADD      r3,sp,#0xc
0022d4  aa02              ADD      r2,sp,#8
0022d6  a1b8              ADR      r1,|L1.9656|
0022d8  6920              LDR      r0,[r4,#0x10]
0022da  f7fffffe          BL       __0sscanf
;;;961    		ip = (uint32)((temp[0] << 24) | (temp[1] << 16) | (temp[2] << 8) | (temp[3] << 0));
0022de  9802              LDR      r0,[sp,#8]
0022e0  0600              LSLS     r0,r0,#24
0022e2  9903              LDR      r1,[sp,#0xc]
0022e4  ea404001          ORR      r0,r0,r1,LSL #16
0022e8  9904              LDR      r1,[sp,#0x10]
0022ea  ea402001          ORR      r0,r0,r1,LSL #8
0022ee  9905              LDR      r1,[sp,#0x14]
0022f0  ea400601          ORR      r6,r0,r1
;;;962    		sscanf(argc[5], "gateway=%d.%d.%d.%d", &temp[0], &temp[1],&temp[2],&temp[3]);
0022f4  a805              ADD      r0,sp,#0x14
0022f6  a904              ADD      r1,sp,#0x10
0022f8  e9cd1000          STRD     r1,r0,[sp,#0]
0022fc  ab03              ADD      r3,sp,#0xc
0022fe  aa02              ADD      r2,sp,#8
002300  a1b3              ADR      r1,|L1.9680|
002302  6960              LDR      r0,[r4,#0x14]
002304  f7fffffe          BL       __0sscanf
;;;963    		gate = (uint32)((temp[0] << 24) | (temp[1] << 16) | (temp[2] << 8) | (temp[3] << 0));
002308  9802              LDR      r0,[sp,#8]
00230a  0600              LSLS     r0,r0,#24
00230c  9903              LDR      r1,[sp,#0xc]
00230e  ea404001          ORR      r0,r0,r1,LSL #16
002312  9904              LDR      r1,[sp,#0x10]
002314  ea402001          ORR      r0,r0,r1,LSL #8
002318  9905              LDR      r1,[sp,#0x14]
00231a  ea400801          ORR      r8,r0,r1
;;;964    		sscanf(argc[6], "sub-mask=%d.%d.%d.%d", &temp[0], &temp[1],&temp[2],&temp[3]);
00231e  a805              ADD      r0,sp,#0x14
002320  a904              ADD      r1,sp,#0x10
002322  e9cd1000          STRD     r1,r0,[sp,#0]
002326  ab03              ADD      r3,sp,#0xc
002328  aa02              ADD      r2,sp,#8
00232a  a1ae              ADR      r1,|L1.9700|
00232c  69a0              LDR      r0,[r4,#0x18]
00232e  f7fffffe          BL       __0sscanf
;;;965    		mask = (uint32)((temp[0] << 24) | (temp[1] << 16) | (temp[2] << 8) | (temp[3] << 0));
002332  9802              LDR      r0,[sp,#8]
002334  0600              LSLS     r0,r0,#24
002336  9903              LDR      r1,[sp,#0xc]
002338  ea404001          ORR      r0,r0,r1,LSL #16
00233c  9904              LDR      r1,[sp,#0x10]
00233e  ea402001          ORR      r0,r0,r1,LSL #8
002342  9905              LDR      r1,[sp,#0x14]
002344  ea400701          ORR      r7,r0,r1
;;;966    		
;;;967    		lwIPNetworkConfigChange(ip, mask, gate, 0);
002348  2300              MOVS     r3,#0
00234a  4642              MOV      r2,r8
00234c  4639              MOV      r1,r7
00234e  4630              MOV      r0,r6
002350  f7fffffe          BL       lwIPNetworkConfigChange
;;;968    	
;;;969    	  gSystem_t->ip_mode = 0;
002354  2000              MOVS     r0,#0
002356  493e              LDR      r1,|L1.9296|
002358  6809              LDR      r1,[r1,#0]  ; gSystem_t
00235a  7488              STRB     r0,[r1,#0x12]
;;;970    		gSystem_t->ip = ip;
00235c  483c              LDR      r0,|L1.9296|
00235e  6800              LDR      r0,[r0,#0]  ; gSystem_t
002360  6006              STR      r6,[r0,#0]
;;;971    		gSystem_t->gateway = gate;
002362  483b              LDR      r0,|L1.9296|
002364  6800              LDR      r0,[r0,#0]  ; gSystem_t
002366  f8c08008          STR      r8,[r0,#8]
;;;972    		gSystem_t->netmask = mask;
00236a  4839              LDR      r0,|L1.9296|
00236c  6800              LDR      r0,[r0,#0]  ; gSystem_t
00236e  6047              STR      r7,[r0,#4]
002370  e009              B        |L1.9094|
                  |L1.9074|
;;;973    	}else{
;;;974    		lwIPNetworkConfigChange(ip, mask, gate, 1);
002372  2301              MOVS     r3,#1
002374  4642              MOV      r2,r8
002376  4639              MOV      r1,r7
002378  4630              MOV      r0,r6
00237a  f7fffffe          BL       lwIPNetworkConfigChange
;;;975    	
;;;976    	  gSystem_t->ip_mode = 1;
00237e  2001              MOVS     r0,#1
002380  4933              LDR      r1,|L1.9296|
002382  6809              LDR      r1,[r1,#0]  ; gSystem_t
002384  7488              STRB     r0,[r1,#0x12]
                  |L1.9094|
;;;977    	}
;;;978    	
;;;979    	
;;;980    	sys_send_msg(DATABASE_UPDATE_MSG, 0);
002386  2100              MOVS     r1,#0
002388  2002              MOVS     r0,#2
00238a  f7fffffe          BL       sys_send_msg
;;;981    }
00238e  b006              ADD      sp,sp,#0x18
002390  e8bd81f0          POP      {r4-r8,pc}
;;;982    
                          ENDP

                  _load_about_page_json_file PROC
;;;983    static void _load_about_page_json_file(sys_state_t *sys, http_state_t *hs)
002394  b570              PUSH     {r4-r6,lr}
;;;984    {
002396  4605              MOV      r5,r0
002398  460c              MOV      r4,r1
;;;985    	 JSON_OUTPUT_BEGIN();
00239a  483c              LDR      r0,|L1.9356|
00239c  493c              LDR      r1,|L1.9360|
00239e  6008              STR      r0,[r1,#0]  ; pjson
0023a0  f44f6100          MOV      r1,#0x800
0023a4  f7fffffe          BL       __aeabi_memclr
0023a8  a13a              ADR      r1,|L1.9364|
0023aa  4839              LDR      r0,|L1.9360|
0023ac  6800              LDR      r0,[r0,#0]  ; pjson
0023ae  f7fffffe          BL       strcat
0023b2  4837              LDR      r0,|L1.9360|
0023b4  6800              LDR      r0,[r0,#0]  ; pjson
0023b6  1c40              ADDS     r0,r0,#1
0023b8  4935              LDR      r1,|L1.9360|
0023ba  6008              STR      r0,[r1,#0]  ; pjson
;;;986    	
;;;987    	 json_output_print("\"software-version\":\"%s\",", version);
0023bc  488f              LDR      r0,|L1.9724|
0023be  6801              LDR      r1,[r0,#0]  ; version
0023c0  a08f              ADR      r0,|L1.9728|
0023c2  f7fffffe          BL       json_output_print
;;;988    	 json_output_print("\"build-date\":\"%s\",", __DATE__);
0023c6  a195              ADR      r1,|L1.9756|
0023c8  a097              ADR      r0,|L1.9768|
0023ca  f7fffffe          BL       json_output_print
;;;989    	 
;;;990    	 JSON_OUTPUT_END();
0023ce  4830              LDR      r0,|L1.9360|
0023d0  6800              LDR      r0,[r0,#0]  ; pjson
0023d2  1c40              ADDS     r0,r0,#1
0023d4  4971              LDR      r1,|L1.9628|
0023d6  4288              CMP      r0,r1
0023d8  d308              BCC      |L1.9196|
0023da  4a98              LDR      r2,|L1.9788|
0023dc  492a              LDR      r1,|L1.9352|
0023de  3938              SUBS     r1,r1,#0x38
0023e0  f5a16042          SUB      r0,r1,#0xc20
0023e4  f7fffffe          BL       s_printf
0023e8  bf00              NOP      
                  |L1.9194|
0023ea  e7fe              B        |L1.9194|
                  |L1.9196|
0023ec  a16d              ADR      r1,|L1.9636|
0023ee  4828              LDR      r0,|L1.9360|
0023f0  6800              LDR      r0,[r0,#0]  ; pjson
0023f2  f7fffffe          BL       strcat
;;;991    	
;;;992    	 hs->file = json_output_buf;
0023f6  4825              LDR      r0,|L1.9356|
0023f8  6060              STR      r0,[r4,#4]
;;;993    	 hs->left = strlen(json_output_buf);   
0023fa  f7fffffe          BL       strlen
0023fe  60e0              STR      r0,[r4,#0xc]
;;;994    }
002400  bd70              POP      {r4-r6,pc}
;;;995    
                          ENDP

                  Cgi_about_page_handler PROC
;;;996    static int Cgi_about_page_handler(http_state_t *hs, int argv, char *argc[])
002402  b570              PUSH     {r4-r6,lr}
;;;997    {
002404  4604              MOV      r4,r0
002406  460d              MOV      r5,r1
002408  4616              MOV      r6,r2
;;;998    	if(argv >= 2){
00240a  2d02              CMP      r5,#2
00240c  db04              BLT      |L1.9240|
;;;999    		_load_about_page_json_file(gSystem_t, hs);
00240e  4621              MOV      r1,r4
002410  480f              LDR      r0,|L1.9296|
002412  6800              LDR      r0,[r0,#0]  ; gSystem_t
002414  f7fffffe          BL       _load_about_page_json_file
                  |L1.9240|
;;;1000   	}	  
;;;1001   	
;;;1002   
;;;1003     return 0;  
002418  2000              MOVS     r0,#0
;;;1004   }
00241a  bd70              POP      {r4-r6,pc}
;;;1005   
                          ENDP

                  do_config_cgi_page PROC
;;;1006   static void do_config_cgi_page(int argv, char *argc[])
00241c  e92d41f0          PUSH     {r4-r8,lr}
;;;1007   {
002420  b08e              SUB      sp,sp,#0x38
002422  4680              MOV      r8,r0
002424  460e              MOV      r6,r1
;;;1008   	uint8 j;
;;;1009   	char temp[6][3] = {0};
002426  2114              MOVS     r1,#0x14
002428  a809              ADD      r0,sp,#0x24
00242a  f7fffffe          BL       __aeabi_memclr4
;;;1010     int buf[6] = {0};
00242e  2118              MOVS     r1,#0x18
002430  a803              ADD      r0,sp,#0xc
002432  f7fffffe          BL       __aeabi_memclr4
;;;1011     char *p = &argc[3][6];
002436  68f0              LDR      r0,[r6,#0xc]
002438  1d85              ADDS     r5,r0,#6
;;;1012     uint8 len = strlen(p);
00243a  4628              MOV      r0,r5
00243c  f7fffffe          BL       strlen
002440  b2c7              UXTB     r7,r0
;;;1013   	
;;;1014   	SYS_TRACE("do_config_cgi_page=[%s]\r\n", p);
002442  4629              MOV      r1,r5
002444  e0fc              B        |L1.9792|
002446  0000              DCW      0x0000
                  |L1.9288|
002448  766f6c75          DCB      "volume",0
00244c  6d6500  
00244f  00                DCB      0
                  |L1.9296|
                          DCD      gSystem_t
                  |L1.9300|
002454  7065712d          DCB      "peq-gain2",0
002458  6761696e
00245c  3200    
00245e  00                DCB      0
00245f  00                DCB      0
                  |L1.9312|
002460  7065712d          DCB      "peq-frequency2",0
002464  66726571
002468  75656e63
00246c  793200  
00246f  00                DCB      0
                  |L1.9328|
002470  7065712d          DCB      "peq-width2",0
002474  77696474
002478  683200  
00247b  00                DCB      0
                  |L1.9340|
00247c  63757272          DCB      "current-peq",0
002480  656e742d
002484  70657100
                  |L1.9352|
                          DCD      ||.text||+0x106c
                  |L1.9356|
                          DCD      json_output_buf
                  |L1.9360|
                          DCD      pjson
                  |L1.9364|
002494  7b00              DCB      "{",0
002496  00                DCB      0
002497  00                DCB      0
                  |L1.9368|
                          DCD      g_MACArray
                  |L1.9372|
00249c  226d6163          DCB      """mac-address"":""%02x.%02x.%02x.%02x.%02x.%02x"",",0
0024a0  2d616464
0024a4  72657373
0024a8  223a2225
0024ac  3032782e
0024b0  25303278
0024b4  2e253032
0024b8  782e2530
0024bc  32782e25
0024c0  3032782e
0024c4  25303278
0024c8  222c00  
0024cb  00                DCB      0
                  |L1.9420|
0024cc  2269702d          DCB      """ip-address"":""%d.%d.%d.%d"",",0
0024d0  61646472
0024d4  65737322
0024d8  3a222564
0024dc  2e25642e
0024e0  25642e25
0024e4  64222c00
                  |L1.9448|
0024e8  22676174          DCB      """gateway"":""%d.%d.%d.%d"",",0
0024ec  65776179
0024f0  223a2225
0024f4  642e2564
0024f8  2e25642e
0024fc  2564222c
002500  00      
002501  00                DCB      0
002502  00                DCB      0
002503  00                DCB      0
                  |L1.9476|
002504  22737562          DCB      """sub-mask"":""%d.%d.%d.%d"",",0
002508  2d6d6173
00250c  6b223a22
002510  25642e25
002514  642e2564
002518  2e256422
00251c  2c00    
00251e  00                DCB      0
00251f  00                DCB      0
                  |L1.9504|
002520  5261636b          DCB      "RackAmp700DSP",0
002524  416d7037
002528  30304453
00252c  5000    
00252e  00                DCB      0
00252f  00                DCB      0
                  |L1.9520|
002530  22686f73          DCB      """host-name"":""%s"",",0
002534  742d6e61
002538  6d65223a
00253c  22257322
002540  2c00    
002542  00                DCB      0
002543  00                DCB      0
                  |L1.9540|
002544  31302e31          DCB      "10.10.1.3",0
002548  302e312e
00254c  3300    
00254e  00                DCB      0
00254f  00                DCB      0
                  |L1.9552|
002550  22707269          DCB      """primary-dns"":""%s"",",0
002554  6d617279
002558  2d646e73
00255c  223a2225
002560  73222c00
                  |L1.9572|
002564  3232312e          DCB      "221.6.4.67",0
002568  362e342e
00256c  363700  
00256f  00                DCB      0
                  |L1.9584|
002570  22736563          DCB      """secondary-dns"":""%s"",",0
002574  6f6e6461
002578  72792d64
00257c  6e73223a
002580  22257322
002584  2c00    
002586  00                DCB      0
002587  00                DCB      0
                  |L1.9608|
002588  22646863          DCB      """dhcp-enable"":""%d""",0
00258c  702d656e
002590  61626c65
002594  223a2225
002598  642200  
00259b  00                DCB      0
                  |L1.9628|
                          DCD      json_output_buf+0x7ff
                  |L1.9632|
                          DCD      |symbol_number.34|
                  |L1.9636|
0025a4  7d00              DCB      "}",0
0025a6  00                DCB      0
0025a7  00                DCB      0
                  |L1.9640|
0025a8  686f7374          DCB      "hostname:%s\r\n",0
0025ac  6e616d65
0025b0  3a25730d
0025b4  0a00    
0025b6  00                DCB      0
0025b7  00                DCB      0
                  |L1.9656|
0025b8  69702d61          DCB      "ip-address=%d.%d.%d.%d",0
0025bc  64647265
0025c0  73733d25
0025c4  642e2564
0025c8  2e25642e
0025cc  256400  
0025cf  00                DCB      0
                  |L1.9680|
0025d0  67617465          DCB      "gateway=%d.%d.%d.%d",0
0025d4  7761793d
0025d8  25642e25
0025dc  642e2564
0025e0  2e256400
                  |L1.9700|
0025e4  7375622d          DCB      "sub-mask=%d.%d.%d.%d",0
0025e8  6d61736b
0025ec  3d25642e
0025f0  25642e25
0025f4  642e2564
0025f8  00      
0025f9  00                DCB      0
0025fa  00                DCB      0
0025fb  00                DCB      0
                  |L1.9724|
                          DCD      version
                  |L1.9728|
002600  22736f66          DCB      """software-version"":""%s"",",0
002604  74776172
002608  652d7665
00260c  7273696f
002610  6e223a22
002614  2573222c
002618  00      
002619  00                DCB      0
00261a  00                DCB      0
00261b  00                DCB      0
                  |L1.9756|
00261c  53657020          DCB      "Sep 17 2015",0
002620  31372032
002624  30313500
                  |L1.9768|
002628  22627569          DCB      """build-date"":""%s"",",0
00262c  6c642d64
002630  61746522
002634  3a222573
002638  222c00  
00263b  00                DCB      0
                  |L1.9788|
                          DCD      |symbol_number.35|
                  |L1.9792|
002640  a058              ADR      r0,|L1.10148|
002642  f7fffffe          BL       s_printf
;;;1015   	
;;;1016   	//OSAL_ASSERT(len == 12);
;;;1017     if(len < 12) return;
002646  2f0c              CMP      r7,#0xc
002648  da02              BGE      |L1.9808|
                  |L1.9802|
;;;1018   
;;;1019     for(j = 0; j < (len >> 1); j++){
;;;1020   	
;;;1021   		temp[j][0] = p[2*j];
;;;1022   		temp[j][1] = p[2*j + 1];
;;;1023   		
;;;1024   		sscanf(temp[j], "%x", &buf[j]);
;;;1025   	}
;;;1026   	
;;;1027   	for(j = 0; j < 6; j++){
;;;1028   		gSystem_t->mac[j] = buf[j];
;;;1029   		g_MACArray[j] = buf[j];
;;;1030   	}
;;;1031   
;;;1032   	sys_send_msg(DATABASE_UPDATE_MSG, 0);
;;;1033   	SYS_TRACE("mac = [%02x.%02x.%02x.%02x.%02x.%02x]\r\n", buf[0], buf[1],buf[2],buf[3],buf[4], buf[5]);
;;;1034   	
;;;1035   }
00264a  b00e              ADD      sp,sp,#0x38
00264c  e8bd81f0          POP      {r4-r8,pc}
                  |L1.9808|
002650  2400              MOVS     r4,#0                 ;1019
002652  e018              B        |L1.9862|
                  |L1.9812|
002654  f8150014          LDRB     r0,[r5,r4,LSL #1]     ;1021
002658  eb040144          ADD      r1,r4,r4,LSL #1       ;1021
00265c  aa09              ADD      r2,sp,#0x24           ;1021
00265e  5450              STRB     r0,[r2,r1]            ;1021
002660  0060              LSLS     r0,r4,#1              ;1022
002662  1c40              ADDS     r0,r0,#1              ;1022
002664  5c28              LDRB     r0,[r5,r0]            ;1022
002666  eb040144          ADD      r1,r4,r4,LSL #1       ;1022
00266a  4411              ADD      r1,r1,r2              ;1022
00266c  7048              STRB     r0,[r1,#1]            ;1022
00266e  a903              ADD      r1,sp,#0xc            ;1024
002670  eb010284          ADD      r2,r1,r4,LSL #2       ;1024
002674  eb040144          ADD      r1,r4,r4,LSL #1       ;1024
002678  ab09              ADD      r3,sp,#0x24           ;1024
00267a  18c8              ADDS     r0,r1,r3              ;1024
00267c  a150              ADR      r1,|L1.10176|
00267e  f7fffffe          BL       __0sscanf
002682  1c60              ADDS     r0,r4,#1              ;1019
002684  b2c4              UXTB     r4,r0                 ;1019
                  |L1.9862|
002686  ebb40f67          CMP      r4,r7,ASR #1          ;1019
00268a  dbe3              BLT      |L1.9812|
00268c  2400              MOVS     r4,#0                 ;1027
00268e  e00d              B        |L1.9900|
                  |L1.9872|
002690  a803              ADD      r0,sp,#0xc            ;1028
002692  f8101024          LDRB     r1,[r0,r4,LSL #2]     ;1028
002696  484b              LDR      r0,|L1.10180|
002698  6800              LDR      r0,[r0,#0]            ;1028  ; gSystem_t
00269a  300c              ADDS     r0,r0,#0xc            ;1028
00269c  5501              STRB     r1,[r0,r4]            ;1028
00269e  a803              ADD      r0,sp,#0xc            ;1029
0026a0  f8100024          LDRB     r0,[r0,r4,LSL #2]     ;1029
0026a4  4948              LDR      r1,|L1.10184|
0026a6  5508              STRB     r0,[r1,r4]            ;1029
0026a8  1c60              ADDS     r0,r4,#1              ;1027
0026aa  b2c4              UXTB     r4,r0                 ;1027
                  |L1.9900|
0026ac  2c06              CMP      r4,#6                 ;1027
0026ae  dbef              BLT      |L1.9872|
0026b0  2100              MOVS     r1,#0                 ;1032
0026b2  2002              MOVS     r0,#2                 ;1032
0026b4  f7fffffe          BL       sys_send_msg
0026b8  e9dd1206          LDRD     r1,r2,[sp,#0x18]      ;1033
0026bc  9808              LDR      r0,[sp,#0x20]         ;1033
0026be  e9cd1200          STRD     r1,r2,[sp,#0]         ;1033
0026c2  9002              STR      r0,[sp,#8]            ;1033
0026c4  a041              ADR      r0,|L1.10188|
0026c6  a903              ADD      r1,sp,#0xc            ;1033
0026c8  c90e              LDM      r1,{r1-r3}            ;1033
0026ca  f7fffffe          BL       s_printf
0026ce  bf00              NOP      
0026d0  e7bb              B        |L1.9802|
;;;1036   
                          ENDP

                  _load_config_page_json_file PROC
;;;1037   static void _load_config_page_json_file(sys_state_t *sys, http_state_t *hs)
0026d2  b570              PUSH     {r4-r6,lr}
;;;1038   {
0026d4  4605              MOV      r5,r0
0026d6  460c              MOV      r4,r1
;;;1039   	 /*don't care the below content*/
;;;1040   	 JSON_OUTPUT_BEGIN();
0026d8  4846              LDR      r0,|L1.10228|
0026da  4947              LDR      r1,|L1.10232|
0026dc  6008              STR      r0,[r1,#0]  ; pjson
0026de  f44f6100          MOV      r1,#0x800
0026e2  f7fffffe          BL       __aeabi_memclr
0026e6  f2af2154          ADR      r1,|L1.9364|
0026ea  4843              LDR      r0,|L1.10232|
0026ec  6800              LDR      r0,[r0,#0]  ; pjson
0026ee  f7fffffe          BL       strcat
0026f2  4841              LDR      r0,|L1.10232|
0026f4  6800              LDR      r0,[r0,#0]  ; pjson
0026f6  1c40              ADDS     r0,r0,#1
0026f8  493f              LDR      r1,|L1.10232|
0026fa  6008              STR      r0,[r1,#0]  ; pjson
;;;1041   	
;;;1042   	 json_output_print("\"software-version\":\"%s\",", version);
0026fc  483f              LDR      r0,|L1.10236|
0026fe  6801              LDR      r1,[r0,#0]  ; version
002700  f2af1004          ADR      r0,|L1.9728|
002704  f7fffffe          BL       json_output_print
;;;1043   	 json_output_print("\"build-date\":\"%s\",", __DATE__);
002708  f2af01f0          ADR      r1,|L1.9756|
00270c  f2af00e8          ADR      r0,|L1.9768|
002710  f7fffffe          BL       json_output_print
;;;1044   	 
;;;1045   	 JSON_OUTPUT_END();
002714  4838              LDR      r0,|L1.10232|
002716  6800              LDR      r0,[r0,#0]  ; pjson
002718  1c40              ADDS     r0,r0,#1
00271a  4939              LDR      r1,|L1.10240|
00271c  4288              CMP      r0,r1
00271e  d307              BCC      |L1.10032|
002720  4a38              LDR      r2,|L1.10244|
002722  4939              LDR      r1,|L1.10248|
002724  f5a16042          SUB      r0,r1,#0xc20
002728  f7fffffe          BL       s_printf
00272c  bf00              NOP      
                  |L1.10030|
00272e  e7fe              B        |L1.10030|
                  |L1.10032|
002730  f2af1190          ADR      r1,|L1.9636|
002734  4830              LDR      r0,|L1.10232|
002736  6800              LDR      r0,[r0,#0]  ; pjson
002738  f7fffffe          BL       strcat
;;;1046   	
;;;1047   	 hs->file = json_output_buf;
00273c  482d              LDR      r0,|L1.10228|
00273e  6060              STR      r0,[r4,#4]
;;;1048   	 hs->left = strlen(json_output_buf);  
002740  f7fffffe          BL       strlen
002744  60e0              STR      r0,[r4,#0xc]
;;;1049   	
;;;1050   }
002746  bd70              POP      {r4-r6,pc}
;;;1051   
                          ENDP

                  Cgi_config_handler PROC
;;;1053   
;;;1054   static int Cgi_config_handler(http_state_t *hs,int argv,char *argc[])
002748  b570              PUSH     {r4-r6,lr}
;;;1055   {
00274a  4606              MOV      r6,r0
00274c  460c              MOV      r4,r1
00274e  4615              MOV      r5,r2
;;;1056   	if(argv >= 2){
002750  2c02              CMP      r4,#2
002752  db0e              BLT      |L1.10098|
;;;1057        if(strcmp(argc[1], "action=write") == 0){
002754  492c              LDR      r1,|L1.10248|
002756  3138              ADDS     r1,r1,#0x38
002758  6868              LDR      r0,[r5,#4]
00275a  f7fffffe          BL       strcmp
00275e  b918              CBNZ     r0,|L1.10088|
;;;1058   			 do_config_cgi_page(argv,argc);
002760  4629              MOV      r1,r5
002762  4620              MOV      r0,r4
002764  f7fffffe          BL       do_config_cgi_page
                  |L1.10088|
;;;1059   		 }
;;;1060   		   _load_config_page_json_file(gSystem_t, hs);
002768  4631              MOV      r1,r6
00276a  4816              LDR      r0,|L1.10180|
00276c  6800              LDR      r0,[r0,#0]  ; gSystem_t
00276e  f7fffffe          BL       _load_config_page_json_file
                  |L1.10098|
;;;1061   	}	  
;;;1062   	
;;;1063   	return 0;
002772  2000              MOVS     r0,#0
;;;1064   }
002774  bd70              POP      {r4-r6,pc}
;;;1065   
                          ENDP

                  Cgi_ipconfig_page_handler PROC
;;;1066   static int Cgi_ipconfig_page_handler(http_state_t *hs, int argv,char *argc[])
002776  b570              PUSH     {r4-r6,lr}
;;;1067   {
002778  4606              MOV      r6,r0
00277a  460c              MOV      r4,r1
00277c  4615              MOV      r5,r2
;;;1068   	if(argv >= 2){
00277e  2c02              CMP      r4,#2
002780  db0e              BLT      |L1.10144|
;;;1069        if(strcmp(argc[1], "action=write") == 0){
002782  4921              LDR      r1,|L1.10248|
002784  3138              ADDS     r1,r1,#0x38
002786  6868              LDR      r0,[r5,#4]
002788  f7fffffe          BL       strcmp
00278c  b918              CBNZ     r0,|L1.10134|
;;;1070   			 do_ipconfig_cgi_page(argv,argc);
00278e  4629              MOV      r1,r5
002790  4620              MOV      r0,r4
002792  f7fffffe          BL       do_ipconfig_cgi_page
                  |L1.10134|
;;;1071   		 }
;;;1072   		   _load_ipconfig_page_json_file(gSystem_t, hs);
002796  4631              MOV      r1,r6
002798  480a              LDR      r0,|L1.10180|
00279a  6800              LDR      r0,[r0,#0]  ; gSystem_t
00279c  f7fffffe          BL       _load_ipconfig_page_json_file
                  |L1.10144|
;;;1073   	}	  
;;;1074   	
;;;1075   	return 0;
0027a0  2000              MOVS     r0,#0
;;;1076   }
0027a2  bd70              POP      {r4-r6,pc}
;;;1077   
                          ENDP

                  |L1.10148|
0027a4  646f5f63          DCB      "do_config_cgi_page=[%s]\r\n",0
0027a8  6f6e6669
0027ac  675f6367
0027b0  695f7061
0027b4  67653d5b
0027b8  25735d0d
0027bc  0a00    
0027be  00                DCB      0
0027bf  00                DCB      0
                  |L1.10176|
0027c0  257800            DCB      "%x",0
0027c3  00                DCB      0
                  |L1.10180|
                          DCD      gSystem_t
                  |L1.10184|
                          DCD      g_MACArray
                  |L1.10188|
0027cc  6d616320          DCB      "mac = [%02x.%02x.%02x.%02x.%02x.%02x]\r\n",0
0027d0  3d205b25
0027d4  3032782e
0027d8  25303278
0027dc  2e253032
0027e0  782e2530
0027e4  32782e25
0027e8  3032782e
0027ec  25303278
0027f0  5d0d0a00
                  |L1.10228|
                          DCD      json_output_buf
                  |L1.10232|
                          DCD      pjson
                  |L1.10236|
                          DCD      version
                  |L1.10240|
                          DCD      json_output_buf+0x7ff
                  |L1.10244|
                          DCD      |symbol_number.36|
                  |L1.10248|
                          DCD      ||.text||+0x1034

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  jsbuf
                          %        512
                  httpd_recv_buf
                          %        1024
                  httpd_send_buf
                          %        1024
                  json_output_buf
                          %        2048

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  g_psHTTPHeaderStrings
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0x1c
                          DCD      ||.conststring||+0x72
                          DCD      ||.conststring||+0x8e
                          DCD      ||.conststring||+0xaa
                          DCD      ||.conststring||+0xc7
                          DCD      ||.conststring||+0xe3
                          DCD      ||.conststring||+0x102
                          DCD      ||.conststring||+0x12d
                          DCD      ||.conststring||+0x12d
                          DCD      ||.conststring||+0x158
                          DCD      ||.conststring||+0x173
                          DCD      ||.conststring||+0x1a3
                          DCD      ||.conststring||+0x1be
                          DCD      ||.conststring||+0x1db
                          DCD      ||.conststring||+0x1ed
                          DCD      ||.conststring||+0x20b
                          DCD      ||.conststring||+0x226
                          DCD      ||.conststring||+0x245
                          DCD      ||.conststring||+0x257
                          DCD      ||.conststring||+0x275
                          DCD      ||.conststring||+0x290
                          DCD      ||.conststring||+0x2af
                          DCD      ||.conststring||+0x2c0
                          DCD      ||.conststring||+0x2d4
                          DCD      ||.conststring||+0x314
                  g_psHTTPHeaders
                          DCD      ||.conststring||+0x364
                          DCD      0x00000000
                          DCD      ||.conststring||+0x369
                          DCD      0x00000000
                          DCD      ||.conststring||+0x36d
                          DCD      0x00000001
                          DCD      ||.conststring||+0x373
                          DCD      0x00000001
                          DCD      ||.conststring||+0x378
                          DCD      0x00000001
                          DCD      ||.conststring||+0x37c
                          DCD      0x00000002
                          DCD      ||.conststring||+0x380
                          DCD      0x00000003
                          DCD      ||.conststring||+0x384
                          DCD      0x00000004
                          DCD      ||.conststring||+0x388
                          DCD      0x00000005
                          DCD      ||.conststring||+0x38c
                          DCD      0x00000006
                          DCD      ||.conststring||+0x390
                          DCD      0x00000007
                          DCD      ||.conststring||+0x396
                          DCD      0x00000007
                          DCD      ||.conststring||+0x39a
                          DCD      0x00000008
                          DCD      ||.conststring||+0x39d
                          DCD      0x00000009
                          DCD      ||.conststring||+0x3a1
                          DCD      0x0000000a
                          DCD      ||.conststring||+0x3a5
                          DCD      0x0000000b
                          DCD      ||.conststring||+0x3a9
                          DCD      0x0000000c
                  __FUNCTION__
0000f0  6a736f6e          DCB      0x6a,0x73,0x6f,0x6e
0000f4  5f6f7574          DCB      0x5f,0x6f,0x75,0x74
0000f8  7075745f          DCB      0x70,0x75,0x74,0x5f
0000fc  7072696e          DCB      0x70,0x72,0x69,0x6e
000100  7400              DCB      0x74,0x00
                  |symbol_number.29|
000102  6874              DCB      0x68,0x74
000104  74705f73          DCB      0x74,0x70,0x5f,0x73
000108  74617465          DCB      0x74,0x61,0x74,0x65
00010c  5f616c6c          DCB      0x5f,0x61,0x6c,0x6c
000110  6f6300            DCB      0x6f,0x63,0x00
                  |symbol_number.30|
000113  5f                DCB      0x5f
000114  6c6f6164          DCB      0x6c,0x6f,0x61,0x64
000118  5f736574          DCB      0x5f,0x73,0x65,0x74
00011c  75705f70          DCB      0x75,0x70,0x5f,0x70
000120  6167655f          DCB      0x61,0x67,0x65,0x5f
000124  6a736f6e          DCB      0x6a,0x73,0x6f,0x6e
000128  5f66696c          DCB      0x5f,0x66,0x69,0x6c
00012c  6500              DCB      0x65,0x00
                  |symbol_number.31|
00012e  5f6c              DCB      0x5f,0x6c
000130  6f61645f          DCB      0x6f,0x61,0x64,0x5f
000134  686f6d65          DCB      0x68,0x6f,0x6d,0x65
000138  5f706167          DCB      0x5f,0x70,0x61,0x67
00013c  655f6a73          DCB      0x65,0x5f,0x6a,0x73
000140  6f6e5f66          DCB      0x6f,0x6e,0x5f,0x66
000144  696c6500          DCB      0x69,0x6c,0x65,0x00
                  |symbol_number.32|
000148  5f6c6f61          DCB      0x5f,0x6c,0x6f,0x61
00014c  645f726f          DCB      0x64,0x5f,0x72,0x6f
000150  6f6d6571          DCB      0x6f,0x6d,0x65,0x71
000154  5f706167          DCB      0x5f,0x70,0x61,0x67
000158  655f6a73          DCB      0x65,0x5f,0x6a,0x73
00015c  6f6e5f66          DCB      0x6f,0x6e,0x5f,0x66
000160  696c6500          DCB      0x69,0x6c,0x65,0x00
                  |symbol_number.33|
000164  5f6c6f61          DCB      0x5f,0x6c,0x6f,0x61
000168  645f7072          DCB      0x64,0x5f,0x70,0x72
00016c  65736574          DCB      0x65,0x73,0x65,0x74
000170  5f706167          DCB      0x5f,0x70,0x61,0x67
000174  655f6a73          DCB      0x65,0x5f,0x6a,0x73
000178  6f6e5f66          DCB      0x6f,0x6e,0x5f,0x66
00017c  696c6500          DCB      0x69,0x6c,0x65,0x00
                  |symbol_number.34|
000180  5f6c6f61          DCB      0x5f,0x6c,0x6f,0x61
000184  645f6970          DCB      0x64,0x5f,0x69,0x70
000188  636f6e66          DCB      0x63,0x6f,0x6e,0x66
00018c  69675f70          DCB      0x69,0x67,0x5f,0x70
000190  6167655f          DCB      0x61,0x67,0x65,0x5f
000194  6a736f6e          DCB      0x6a,0x73,0x6f,0x6e
000198  5f66696c          DCB      0x5f,0x66,0x69,0x6c
00019c  6500              DCB      0x65,0x00
                  |symbol_number.35|
00019e  5f6c              DCB      0x5f,0x6c
0001a0  6f61645f          DCB      0x6f,0x61,0x64,0x5f
0001a4  61626f75          DCB      0x61,0x62,0x6f,0x75
0001a8  745f7061          DCB      0x74,0x5f,0x70,0x61
0001ac  67655f6a          DCB      0x67,0x65,0x5f,0x6a
0001b0  736f6e5f          DCB      0x73,0x6f,0x6e,0x5f
0001b4  66696c65          DCB      0x66,0x69,0x6c,0x65
0001b8  00                DCB      0x00
                  |symbol_number.36|
0001b9  5f6c6f            DCB      0x5f,0x6c,0x6f
0001bc  61645f63          DCB      0x61,0x64,0x5f,0x63
0001c0  6f6e6669          DCB      0x6f,0x6e,0x66,0x69
0001c4  675f7061          DCB      0x67,0x5f,0x70,0x61
0001c8  67655f6a          DCB      0x67,0x65,0x5f,0x6a
0001cc  736f6e5f          DCB      0x73,0x6f,0x6e,0x5f
0001d0  66696c65          DCB      0x66,0x69,0x6c,0x65
0001d4  00                DCB      0x00
                  |symbol_number.37|
0001d5  726571            DCB      0x72,0x65,0x71
0001d8  5f736176          DCB      0x5f,0x73,0x61,0x76
0001dc  655f6861          DCB      0x65,0x5f,0x68,0x61
0001e0  6e646c65          DCB      0x6e,0x64,0x6c,0x65
0001e4  7200              DCB      0x72,0x00
                  |symbol_number.38|
0001e6  6465              DCB      0x64,0x65
0001e8  6c61795f          DCB      0x6c,0x61,0x79,0x5f
0001ec  73776974          DCB      0x73,0x77,0x69,0x74
0001f0  63685f68          DCB      0x63,0x68,0x5f,0x68
0001f4  616e646c          DCB      0x61,0x6e,0x64,0x6c
0001f8  65720000          DCB      0x65,0x72,0x00,0x00
                  g_pCGI
                          %        8
000204  22737562          DCB      0x22,0x73,0x75,0x62
000208  2d6c702d          DCB      0x2d,0x6c,0x70,0x2d
00020c  736c6f70          DCB      0x73,0x6c,0x6f,0x70
000210  2d697465          DCB      0x2d,0x69,0x74,0x65
000214  6d73223a          DCB      0x6d,0x73,0x22,0x3a
000218  5b7b226e          DCB      0x5b,0x7b,0x22,0x6e
00021c  616d6522          DCB      0x61,0x6d,0x65,0x22
000220  3a223132          DCB      0x3a,0x22,0x31,0x32
000224  222c2022          DCB      0x22,0x2c,0x20,0x22
000228  6964223a          DCB      0x69,0x64,0x22,0x3a
00022c  2231227d          DCB      0x22,0x31,0x22,0x7d
000230  2c7b226e          DCB      0x2c,0x7b,0x22,0x6e
000234  616d6522          DCB      0x61,0x6d,0x65,0x22
000238  3a223234          DCB      0x3a,0x22,0x32,0x34
00023c  222c2022          DCB      0x22,0x2c,0x20,0x22
000240  6964223a          DCB      0x69,0x64,0x22,0x3a
000244  2232227d          DCB      0x22,0x32,0x22,0x7d
000248  2c7b226e          DCB      0x2c,0x7b,0x22,0x6e
00024c  616d6522          DCB      0x61,0x6d,0x65,0x22
000250  3a223438          DCB      0x3a,0x22,0x34,0x38
000254  222c2022          DCB      0x22,0x2c,0x20,0x22
000258  6964223a          DCB      0x69,0x64,0x22,0x3a
00025c  2233227d          DCB      0x22,0x33,0x22,0x7d
000260  5d2c0000          DCB      0x5d,0x2c,0x00,0x00
000264  22737562          DCB      0x22,0x73,0x75,0x62
000268  2d68702d          DCB      0x2d,0x68,0x70,0x2d
00026c  736c6f70          DCB      0x73,0x6c,0x6f,0x70
000270  2d697465          DCB      0x2d,0x69,0x74,0x65
000274  6d73223a          DCB      0x6d,0x73,0x22,0x3a
000278  5b7b226e          DCB      0x5b,0x7b,0x22,0x6e
00027c  616d6522          DCB      0x61,0x6d,0x65,0x22
000280  3a223132          DCB      0x3a,0x22,0x31,0x32
000284  222c2022          DCB      0x22,0x2c,0x20,0x22
000288  6964223a          DCB      0x69,0x64,0x22,0x3a
00028c  2231227d          DCB      0x22,0x31,0x22,0x7d
000290  2c7b226e          DCB      0x2c,0x7b,0x22,0x6e
000294  616d6522          DCB      0x61,0x6d,0x65,0x22
000298  3a223234          DCB      0x3a,0x22,0x32,0x34
00029c  222c2022          DCB      0x22,0x2c,0x20,0x22
0002a0  6964223a          DCB      0x69,0x64,0x22,0x3a
0002a4  2232227d          DCB      0x22,0x32,0x22,0x7d
0002a8  2c7b226e          DCB      0x2c,0x7b,0x22,0x6e
0002ac  616d6522          DCB      0x61,0x6d,0x65,0x22
0002b0  3a223438          DCB      0x3a,0x22,0x34,0x38
0002b4  222c2022          DCB      0x22,0x2c,0x20,0x22
0002b8  6964223a          DCB      0x69,0x64,0x22,0x3a
0002bc  2233227d          DCB      0x22,0x33,0x22,0x7d
0002c0  5d2c0000          DCB      0x5d,0x2c,0x00,0x00
0002c4  226c696e          DCB      0x22,0x6c,0x69,0x6e
0002c8  656f7574          DCB      0x65,0x6f,0x75,0x74
0002cc  2d68702d          DCB      0x2d,0x68,0x70,0x2d
0002d0  736c6f70          DCB      0x73,0x6c,0x6f,0x70
0002d4  2d697465          DCB      0x2d,0x69,0x74,0x65
0002d8  6d73223a          DCB      0x6d,0x73,0x22,0x3a
0002dc  5b7b226e          DCB      0x5b,0x7b,0x22,0x6e
0002e0  616d6522          DCB      0x61,0x6d,0x65,0x22
0002e4  3a223132          DCB      0x3a,0x22,0x31,0x32
0002e8  222c2022          DCB      0x22,0x2c,0x20,0x22
0002ec  6964223a          DCB      0x69,0x64,0x22,0x3a
0002f0  2231227d          DCB      0x22,0x31,0x22,0x7d
0002f4  2c7b226e          DCB      0x2c,0x7b,0x22,0x6e
0002f8  616d6522          DCB      0x61,0x6d,0x65,0x22
0002fc  3a223234          DCB      0x3a,0x22,0x32,0x34
000300  222c2022          DCB      0x22,0x2c,0x20,0x22
000304  6964223a          DCB      0x69,0x64,0x22,0x3a
000308  2232227d          DCB      0x22,0x32,0x22,0x7d
00030c  2c7b226e          DCB      0x2c,0x7b,0x22,0x6e
000310  616d6522          DCB      0x61,0x6d,0x65,0x22
000314  3a223438          DCB      0x3a,0x22,0x34,0x38
000318  222c2022          DCB      0x22,0x2c,0x20,0x22
00031c  6964223a          DCB      0x69,0x64,0x22,0x3a
000320  2233227d          DCB      0x22,0x33,0x22,0x7d
000324  5d2c0000          DCB      0x5d,0x2c,0x00,0x00
000328  22726f75          DCB      0x22,0x72,0x6f,0x75
00032c  74652d64          DCB      0x74,0x65,0x2d,0x64
000330  656c6179          DCB      0x65,0x6c,0x61,0x79
000334  2d747970          DCB      0x2d,0x74,0x79,0x70
000338  652d6974          DCB      0x65,0x2d,0x69,0x74
00033c  656d7322          DCB      0x65,0x6d,0x73,0x22
000340  3a5b7b22          DCB      0x3a,0x5b,0x7b,0x22
000344  6e616d65          DCB      0x6e,0x61,0x6d,0x65
000348  223a2253          DCB      0x22,0x3a,0x22,0x53
00034c  7562222c          DCB      0x75,0x62,0x22,0x2c
000350  20226964          DCB      0x20,0x22,0x69,0x64
000354  223a2231          DCB      0x22,0x3a,0x22,0x31
000358  227d2c7b          DCB      0x22,0x7d,0x2c,0x7b
00035c  226e616d          DCB      0x22,0x6e,0x61,0x6d
000360  65223a22          DCB      0x65,0x22,0x3a,0x22
000364  4c696e65          DCB      0x4c,0x69,0x6e,0x65
000368  204f7574          DCB      0x20,0x4f,0x75,0x74
00036c  70757422          DCB      0x70,0x75,0x74,0x22
000370  2c202269          DCB      0x2c,0x20,0x22,0x69
000374  64223a22          DCB      0x64,0x22,0x3a,0x22
000378  32227d2c          DCB      0x32,0x22,0x7d,0x2c
00037c  7b226e61          DCB      0x7b,0x22,0x6e,0x61
000380  6d65223a          DCB      0x6d,0x65,0x22,0x3a
000384  224f4646          DCB      0x22,0x4f,0x46,0x46
000388  222c2022          DCB      0x22,0x2c,0x20,0x22
00038c  6964223a          DCB      0x69,0x64,0x22,0x3a
000390  2233227d          DCB      0x22,0x33,0x22,0x7d
000394  5d2c0000          DCB      0x5d,0x2c,0x00,0x00
000398  22706861          DCB      0x22,0x70,0x68,0x61
00039c  73652d61          DCB      0x73,0x65,0x2d,0x61
0003a0  646a7573          DCB      0x64,0x6a,0x75,0x73
0003a4  746d656e          DCB      0x74,0x6d,0x65,0x6e
0003a8  742d6974          DCB      0x74,0x2d,0x69,0x74
0003ac  656d7322          DCB      0x65,0x6d,0x73,0x22
0003b0  3a5b7b22          DCB      0x3a,0x5b,0x7b,0x22
0003b4  6e616d65          DCB      0x6e,0x61,0x6d,0x65
0003b8  223a2230          DCB      0x22,0x3a,0x22,0x30
0003bc  222c2022          DCB      0x22,0x2c,0x20,0x22
0003c0  6964223a          DCB      0x69,0x64,0x22,0x3a
0003c4  2231227d          DCB      0x22,0x31,0x22,0x7d
0003c8  2c7b226e          DCB      0x2c,0x7b,0x22,0x6e
0003cc  616d6522          DCB      0x61,0x6d,0x65,0x22
0003d0  3a223138          DCB      0x3a,0x22,0x31,0x38
0003d4  30222c20          DCB      0x30,0x22,0x2c,0x20
0003d8  22696422          DCB      0x22,0x69,0x64,0x22
0003dc  3a223222          DCB      0x3a,0x22,0x32,0x22
0003e0  7d5d2c00          DCB      0x7d,0x5d,0x2c,0x00
0003e4  22737562          DCB      0x22,0x73,0x75,0x62
0003e8  6d6f6465          DCB      0x6d,0x6f,0x64,0x65
0003ec  6c2d6974          DCB      0x6c,0x2d,0x69,0x74
0003f0  656d7322          DCB      0x65,0x6d,0x73,0x22
0003f4  3a5b7b22          DCB      0x3a,0x5b,0x7b,0x22
0003f8  7375622d          DCB      0x73,0x75,0x62,0x2d
0003fc  6e616d65          DCB      0x6e,0x61,0x6d,0x65
000400  223a224d          DCB      0x22,0x3a,0x22,0x4d
000404  696e6920          DCB      0x69,0x6e,0x69,0x20
000408  496e526f          DCB      0x49,0x6e,0x52,0x6f
00040c  6f6d222c          DCB      0x6f,0x6d,0x22,0x2c
000410  20227375          DCB      0x20,0x22,0x73,0x75
000414  622d6964          DCB      0x62,0x2d,0x69,0x64
000418  223a2231          DCB      0x22,0x3a,0x22,0x31
00041c  227d2c7b          DCB      0x22,0x7d,0x2c,0x7b
000420  22737562          DCB      0x22,0x73,0x75,0x62
000424  2d6e616d          DCB      0x2d,0x6e,0x61,0x6d
000428  65223a22          DCB      0x65,0x22,0x3a,0x22
00042c  4d696e69          DCB      0x4d,0x69,0x6e,0x69
000430  20496e43          DCB      0x20,0x49,0x6e,0x43
000434  65696c69          DCB      0x65,0x69,0x6c,0x69
000438  6e67222c          DCB      0x6e,0x67,0x22,0x2c
00043c  20227375          DCB      0x20,0x22,0x73,0x75
000440  622d6964          DCB      0x62,0x2d,0x69,0x64
000444  223a2232          DCB      0x22,0x3a,0x22,0x32
000448  227d2c7b          DCB      0x22,0x7d,0x2c,0x7b
00044c  22737562          DCB      0x22,0x73,0x75,0x62
000450  2d6e616d          DCB      0x2d,0x6e,0x61,0x6d
000454  65223a22          DCB      0x65,0x22,0x3a,0x22
000458  4d696e69          DCB      0x4d,0x69,0x6e,0x69
00045c  20466c65          DCB      0x20,0x46,0x6c,0x65
000460  78537562          DCB      0x78,0x53,0x75,0x62
000464  222c2022          DCB      0x22,0x2c,0x20,0x22
000468  7375622d          DCB      0x73,0x75,0x62,0x2d
00046c  6964223a          DCB      0x69,0x64,0x22,0x3a
000470  2233227d          DCB      0x22,0x33,0x22,0x7d
000474  2c7b2273          DCB      0x2c,0x7b,0x22,0x73
000478  75622d6e          DCB      0x75,0x62,0x2d,0x6e
00047c  616d6522          DCB      0x61,0x6d,0x65,0x22
000480  3a224272          DCB      0x3a,0x22,0x42,0x72
000484  6f6e7a65          DCB      0x6f,0x6e,0x7a,0x65
000488  20496e52          DCB      0x20,0x49,0x6e,0x52
00048c  6f6f6d22          DCB      0x6f,0x6f,0x6d,0x22
000490  2c202273          DCB      0x2c,0x20,0x22,0x73
000494  75622d69          DCB      0x75,0x62,0x2d,0x69
000498  64223a22          DCB      0x64,0x22,0x3a,0x22
00049c  34227d2c          DCB      0x34,0x22,0x7d,0x2c
0004a0  7b227375          DCB      0x7b,0x22,0x73,0x75
0004a4  622d6e61          DCB      0x62,0x2d,0x6e,0x61
0004a8  6d65223a          DCB      0x6d,0x65,0x22,0x3a
0004ac  2242726f          DCB      0x22,0x42,0x72,0x6f
0004b0  6e7a6520          DCB      0x6e,0x7a,0x65,0x20
0004b4  496e5761          DCB      0x49,0x6e,0x57,0x61
0004b8  6c6c222c          DCB      0x6c,0x6c,0x22,0x2c
0004bc  20227375          DCB      0x20,0x22,0x73,0x75
0004c0  622d6964          DCB      0x62,0x2d,0x69,0x64
0004c4  223a2235          DCB      0x22,0x3a,0x22,0x35
0004c8  227d2c7b          DCB      0x22,0x7d,0x2c,0x7b
0004cc  22737562          DCB      0x22,0x73,0x75,0x62
0004d0  2d6e616d          DCB      0x2d,0x6e,0x61,0x6d
0004d4  65223a22          DCB      0x65,0x22,0x3a,0x22
0004d8  42726f6e          DCB      0x42,0x72,0x6f,0x6e
0004dc  7a652049          DCB      0x7a,0x65,0x20,0x49
0004e0  6e436569          DCB      0x6e,0x43,0x65,0x69
0004e4  6c696e67          DCB      0x6c,0x69,0x6e,0x67
0004e8  222c2022          DCB      0x22,0x2c,0x20,0x22
0004ec  7375622d          DCB      0x73,0x75,0x62,0x2d
0004f0  6964223a          DCB      0x69,0x64,0x22,0x3a
0004f4  2236227d          DCB      0x22,0x36,0x22,0x7d
0004f8  2c7b2273          DCB      0x2c,0x7b,0x22,0x73
0004fc  75622d6e          DCB      0x75,0x62,0x2d,0x6e
000500  616d6522          DCB      0x61,0x6d,0x65,0x22
000504  3a224272          DCB      0x3a,0x22,0x42,0x72
000508  6f6e7a65          DCB      0x6f,0x6e,0x7a,0x65
00050c  20536c69          DCB      0x20,0x53,0x6c,0x69
000510  6d537562          DCB      0x6d,0x53,0x75,0x62
000514  222c2022          DCB      0x22,0x2c,0x20,0x22
000518  7375622d          DCB      0x73,0x75,0x62,0x2d
00051c  6964223a          DCB      0x69,0x64,0x22,0x3a
000520  2237227d          DCB      0x22,0x37,0x22,0x7d
000524  2c7b2273          DCB      0x2c,0x7b,0x22,0x73
000528  75622d6e          DCB      0x75,0x62,0x2d,0x6e
00052c  616d6522          DCB      0x61,0x6d,0x65,0x22
000530  3a225369          DCB      0x3a,0x22,0x53,0x69
000534  6c766572          DCB      0x6c,0x76,0x65,0x72
000538  20496e52          DCB      0x20,0x49,0x6e,0x52
00053c  6f6f6d22          DCB      0x6f,0x6f,0x6d,0x22
000540  2c202273          DCB      0x2c,0x20,0x22,0x73
000544  75622d69          DCB      0x75,0x62,0x2d,0x69
000548  64223a22          DCB      0x64,0x22,0x3a,0x22
00054c  38227d2c          DCB      0x38,0x22,0x7d,0x2c
000550  7b227375          DCB      0x7b,0x22,0x73,0x75
000554  622d6e61          DCB      0x62,0x2d,0x6e,0x61
000558  6d65223a          DCB      0x6d,0x65,0x22,0x3a
00055c  2253696c          DCB      0x22,0x53,0x69,0x6c
000560  76657220          DCB      0x76,0x65,0x72,0x20
000564  496e5761          DCB      0x49,0x6e,0x57,0x61
000568  6c6c222c          DCB      0x6c,0x6c,0x22,0x2c
00056c  20227375          DCB      0x20,0x22,0x73,0x75
000570  622d6964          DCB      0x62,0x2d,0x69,0x64
000574  223a2239          DCB      0x22,0x3a,0x22,0x39
000578  227d2c7b          DCB      0x22,0x7d,0x2c,0x7b
00057c  22737562          DCB      0x22,0x73,0x75,0x62
000580  2d6e616d          DCB      0x2d,0x6e,0x61,0x6d
000584  65223a22          DCB      0x65,0x22,0x3a,0x22
000588  53696c76          DCB      0x53,0x69,0x6c,0x76
00058c  65722046          DCB      0x65,0x72,0x20,0x46
000590  6c657853          DCB      0x6c,0x65,0x78,0x53
000594  7562222c          DCB      0x75,0x62,0x22,0x2c
000598  20227375          DCB      0x20,0x22,0x73,0x75
00059c  622d6964          DCB      0x62,0x2d,0x69,0x64
0005a0  223a2231          DCB      0x22,0x3a,0x22,0x31
0005a4  30227d2c          DCB      0x30,0x22,0x7d,0x2c
0005a8  7b227375          DCB      0x7b,0x22,0x73,0x75
0005ac  622d6e61          DCB      0x62,0x2d,0x6e,0x61
0005b0  6d65223a          DCB      0x6d,0x65,0x22,0x3a
0005b4  22476f6c          DCB      0x22,0x47,0x6f,0x6c
0005b8  6420496e          DCB      0x64,0x20,0x49,0x6e
0005bc  526f6f6d          DCB      0x52,0x6f,0x6f,0x6d
0005c0  222c2022          DCB      0x22,0x2c,0x20,0x22
0005c4  7375622d          DCB      0x73,0x75,0x62,0x2d
0005c8  6964223a          DCB      0x69,0x64,0x22,0x3a
0005cc  22313122          DCB      0x22,0x31,0x31,0x22
0005d0  7d2c7b22          DCB      0x7d,0x2c,0x7b,0x22
0005d4  7375622d          DCB      0x73,0x75,0x62,0x2d
0005d8  6e616d65          DCB      0x6e,0x61,0x6d,0x65
0005dc  223a2250          DCB      0x22,0x3a,0x22,0x50
0005e0  6c617469          DCB      0x6c,0x61,0x74,0x69
0005e4  6e756d20          DCB      0x6e,0x75,0x6d,0x20
0005e8  496e526f          DCB      0x49,0x6e,0x52,0x6f
0005ec  6f6d222c          DCB      0x6f,0x6d,0x22,0x2c
0005f0  20227375          DCB      0x20,0x22,0x73,0x75
0005f4  622d6964          DCB      0x62,0x2d,0x69,0x64
0005f8  223a2231          DCB      0x22,0x3a,0x22,0x31
0005fc  32227d2c          DCB      0x32,0x22,0x7d,0x2c
000600  7b227375          DCB      0x7b,0x22,0x73,0x75
000604  622d6e61          DCB      0x62,0x2d,0x6e,0x61
000608  6d65223a          DCB      0x6d,0x65,0x22,0x3a
00060c  22466c61          DCB      0x22,0x46,0x6c,0x61
000610  74222c20          DCB      0x74,0x22,0x2c,0x20
000614  22737562          DCB      0x22,0x73,0x75,0x62
000618  2d696422          DCB      0x2d,0x69,0x64,0x22
00061c  3a223133          DCB      0x3a,0x22,0x31,0x33
000620  227d5d2c          DCB      0x22,0x7d,0x5d,0x2c
000624  00000000          DCB      0x00,0x00,0x00,0x00
000628  22617574          DCB      0x22,0x61,0x75,0x74
00062c  6f2d6f66          DCB      0x6f,0x2d,0x6f,0x66
000630  662d7469          DCB      0x66,0x2d,0x74,0x69
000634  6d652d69          DCB      0x6d,0x65,0x2d,0x69
000638  74656d73          DCB      0x74,0x65,0x6d,0x73
00063c  223a5b7b          DCB      0x22,0x3a,0x5b,0x7b
000640  226e616d          DCB      0x22,0x6e,0x61,0x6d
000644  65223a22          DCB      0x65,0x22,0x3a,0x22
000648  35222c20          DCB      0x35,0x22,0x2c,0x20
00064c  22696422          DCB      0x22,0x69,0x64,0x22
000650  3a223122          DCB      0x3a,0x22,0x31,0x22
000654  7d2c7b22          DCB      0x7d,0x2c,0x7b,0x22
000658  6e616d65          DCB      0x6e,0x61,0x6d,0x65
00065c  223a2231          DCB      0x22,0x3a,0x22,0x31
000660  30222c20          DCB      0x30,0x22,0x2c,0x20
000664  22696422          DCB      0x22,0x69,0x64,0x22
000668  3a223222          DCB      0x3a,0x22,0x32,0x22
00066c  7d2c7b22          DCB      0x7d,0x2c,0x7b,0x22
000670  6e616d65          DCB      0x6e,0x61,0x6d,0x65
000674  223a2232          DCB      0x22,0x3a,0x22,0x32
000678  30222c20          DCB      0x30,0x22,0x2c,0x20
00067c  22696422          DCB      0x22,0x69,0x64,0x22
000680  3a223322          DCB      0x3a,0x22,0x33,0x22
000684  7d2c7b22          DCB      0x7d,0x2c,0x7b,0x22
000688  6e616d65          DCB      0x6e,0x61,0x6d,0x65
00068c  223a2233          DCB      0x22,0x3a,0x22,0x33
000690  30222c20          DCB      0x30,0x22,0x2c,0x20
000694  22696422          DCB      0x22,0x69,0x64,0x22
000698  3a223422          DCB      0x3a,0x22,0x34,0x22
00069c  7d2c7b22          DCB      0x7d,0x2c,0x7b,0x22
0006a0  6e616d65          DCB      0x6e,0x61,0x6d,0x65
0006a4  223a2236          DCB      0x22,0x3a,0x22,0x36
0006a8  30222c20          DCB      0x30,0x22,0x2c,0x20
0006ac  22696422          DCB      0x22,0x69,0x64,0x22
0006b0  3a223522          DCB      0x3a,0x22,0x35,0x22
0006b4  7d5d2c00          DCB      0x7d,0x5d,0x2c,0x00
0006b8  22706f77          DCB      0x22,0x70,0x6f,0x77
0006bc  65722d6f          DCB      0x65,0x72,0x2d,0x6f
0006c0  6e2d726f          DCB      0x6e,0x2d,0x72,0x6f
0006c4  75746572          DCB      0x75,0x74,0x65,0x72
0006c8  2d697465          DCB      0x2d,0x69,0x74,0x65
0006cc  6d73223a          DCB      0x6d,0x73,0x22,0x3a
0006d0  5b7b226e          DCB      0x5b,0x7b,0x22,0x6e
0006d4  616d6522          DCB      0x61,0x6d,0x65,0x22
0006d8  3a224d61          DCB      0x3a,0x22,0x4d,0x61
0006dc  6e75616c          DCB      0x6e,0x75,0x61,0x6c
0006e0  222c2022          DCB      0x22,0x2c,0x20,0x22
0006e4  6964223a          DCB      0x69,0x64,0x22,0x3a
0006e8  2231227d          DCB      0x22,0x31,0x22,0x7d
0006ec  2c7b226e          DCB      0x2c,0x7b,0x22,0x6e
0006f0  616d6522          DCB      0x61,0x6d,0x65,0x22
0006f4  3a225365          DCB      0x3a,0x22,0x53,0x65
0006f8  6e736522          DCB      0x6e,0x73,0x65,0x22
0006fc  2c202269          DCB      0x2c,0x20,0x22,0x69
000700  64223a22          DCB      0x64,0x22,0x3a,0x22
000704  32227d2c          DCB      0x32,0x22,0x7d,0x2c
000708  7b226e61          DCB      0x7b,0x22,0x6e,0x61
00070c  6d65223a          DCB      0x6d,0x65,0x22,0x3a
000710  22547269          DCB      0x22,0x54,0x72,0x69
000714  67676572          DCB      0x67,0x67,0x65,0x72
000718  222c2022          DCB      0x22,0x2c,0x20,0x22
00071c  6964223a          DCB      0x69,0x64,0x22,0x3a
000720  2233227d          DCB      0x22,0x33,0x22,0x7d
000724  2c7b226e          DCB      0x2c,0x7b,0x22,0x6e
000728  616d6522          DCB      0x61,0x6d,0x65,0x22
00072c  3a224952          DCB      0x3a,0x22,0x49,0x52
000730  2f495022          DCB      0x2f,0x49,0x50,0x22
000734  2c202269          DCB      0x2c,0x20,0x22,0x69
000738  64223a22          DCB      0x64,0x22,0x3a,0x22
00073c  34227d5d          DCB      0x34,0x22,0x7d,0x5d
000740  2c000000          DCB      0x2c,0x00,0x00,0x00
000744  22696e70          DCB      0x22,0x69,0x6e,0x70
000748  75742d73          DCB      0x75,0x74,0x2d,0x73
00074c  6f757263          DCB      0x6f,0x75,0x72,0x63
000750  652d6974          DCB      0x65,0x2d,0x69,0x74
000754  656d7322          DCB      0x65,0x6d,0x73,0x22
000758  3a5b7b22          DCB      0x3a,0x5b,0x7b,0x22
00075c  6e616d65          DCB      0x6e,0x61,0x6d,0x65
000760  223a2258          DCB      0x22,0x3a,0x22,0x58
000764  4c52222c          DCB      0x4c,0x52,0x22,0x2c
000768  20226964          DCB      0x20,0x22,0x69,0x64
00076c  223a2231          DCB      0x22,0x3a,0x22,0x31
000770  227d2c7b          DCB      0x22,0x7d,0x2c,0x7b
000774  226e616d          DCB      0x22,0x6e,0x61,0x6d
000778  65223a22          DCB      0x65,0x22,0x3a,0x22
00077c  52434122          DCB      0x52,0x43,0x41,0x22
000780  2c202269          DCB      0x2c,0x20,0x22,0x69
000784  64223a22          DCB      0x64,0x22,0x3a,0x22
000788  32227d2c          DCB      0x32,0x22,0x7d,0x2c
00078c  7b226e61          DCB      0x7b,0x22,0x6e,0x61
000790  6d65223a          DCB      0x6d,0x65,0x22,0x3a
000794  22537065          DCB      0x22,0x53,0x70,0x65
000798  616b222c          DCB      0x61,0x6b,0x22,0x2c
00079c  20226964          DCB      0x20,0x22,0x69,0x64
0007a0  223a2233          DCB      0x22,0x3a,0x22,0x33
0007a4  227d5d2c          DCB      0x22,0x7d,0x5d,0x2c
0007a8  00000000          DCB      0x00,0x00,0x00,0x00
0007ac  22707265          DCB      0x22,0x70,0x72,0x65
0007b0  7365742d          DCB      0x73,0x65,0x74,0x2d
0007b4  6974656d          DCB      0x69,0x74,0x65,0x6d
0007b8  73223a5b          DCB      0x73,0x22,0x3a,0x5b
0007bc  7b227072          DCB      0x7b,0x22,0x70,0x72
0007c0  65736574          DCB      0x65,0x73,0x65,0x74
0007c4  2d6e616d          DCB      0x2d,0x6e,0x61,0x6d
0007c8  65223a22          DCB      0x65,0x22,0x3a,0x22
0007cc  4e6f726d          DCB      0x4e,0x6f,0x72,0x6d
0007d0  616c222c          DCB      0x61,0x6c,0x22,0x2c
0007d4  20227072          DCB      0x20,0x22,0x70,0x72
0007d8  65736574          DCB      0x65,0x73,0x65,0x74
0007dc  2d696422          DCB      0x2d,0x69,0x64,0x22
0007e0  3a223122          DCB      0x3a,0x22,0x31,0x22
0007e4  7d2c7b22          DCB      0x7d,0x2c,0x7b,0x22
0007e8  70726573          DCB      0x70,0x72,0x65,0x73
0007ec  65742d6e          DCB      0x65,0x74,0x2d,0x6e
0007f0  616d6522          DCB      0x61,0x6d,0x65,0x22
0007f4  3a224369          DCB      0x3a,0x22,0x43,0x69
0007f8  6e656d61          DCB      0x6e,0x65,0x6d,0x61
0007fc  222c2022          DCB      0x22,0x2c,0x20,0x22
000800  70726573          DCB      0x70,0x72,0x65,0x73
000804  65742d69          DCB      0x65,0x74,0x2d,0x69
000808  64223a22          DCB      0x64,0x22,0x3a,0x22
00080c  32227d2c          DCB      0x32,0x22,0x7d,0x2c
000810  7b227072          DCB      0x7b,0x22,0x70,0x72
000814  65736574          DCB      0x65,0x73,0x65,0x74
000818  2d6e616d          DCB      0x2d,0x6e,0x61,0x6d
00081c  65223a22          DCB      0x65,0x22,0x3a,0x22
000820  4e696768          DCB      0x4e,0x69,0x67,0x68
000824  74222c20          DCB      0x74,0x22,0x2c,0x20
000828  22707265          DCB      0x22,0x70,0x72,0x65
00082c  7365742d          DCB      0x73,0x65,0x74,0x2d
000830  6964223a          DCB      0x69,0x64,0x22,0x3a
000834  2233227d          DCB      0x22,0x33,0x22,0x7d
000838  2c7b2270          DCB      0x2c,0x7b,0x22,0x70
00083c  72657365          DCB      0x72,0x65,0x73,0x65
000840  742d6e61          DCB      0x74,0x2d,0x6e,0x61
000844  6d65223a          DCB      0x6d,0x65,0x22,0x3a
000848  22557365          DCB      0x22,0x55,0x73,0x65
00084c  7231222c          DCB      0x72,0x31,0x22,0x2c
000850  20227072          DCB      0x20,0x22,0x70,0x72
000854  65736574          DCB      0x65,0x73,0x65,0x74
000858  2d696422          DCB      0x2d,0x69,0x64,0x22
00085c  3a223422          DCB      0x3a,0x22,0x34,0x22
000860  7d2c7b22          DCB      0x7d,0x2c,0x7b,0x22
000864  70726573          DCB      0x70,0x72,0x65,0x73
000868  65742d6e          DCB      0x65,0x74,0x2d,0x6e
00086c  616d6522          DCB      0x61,0x6d,0x65,0x22
000870  3a225573          DCB      0x3a,0x22,0x55,0x73
000874  65723222          DCB      0x65,0x72,0x32,0x22
000878  2c202270          DCB      0x2c,0x20,0x22,0x70
00087c  72657365          DCB      0x72,0x65,0x73,0x65
000880  742d6964          DCB      0x74,0x2d,0x69,0x64
000884  223a2235          DCB      0x22,0x3a,0x22,0x35
000888  227d2c7b          DCB      0x22,0x7d,0x2c,0x7b
00088c  22707265          DCB      0x22,0x70,0x72,0x65
000890  7365742d          DCB      0x73,0x65,0x74,0x2d
000894  6e616d65          DCB      0x6e,0x61,0x6d,0x65
000898  223a2255          DCB      0x22,0x3a,0x22,0x55
00089c  73657233          DCB      0x73,0x65,0x72,0x33
0008a0  222c2022          DCB      0x22,0x2c,0x20,0x22
0008a4  70726573          DCB      0x70,0x72,0x65,0x73
0008a8  65742d69          DCB      0x65,0x74,0x2d,0x69
0008ac  64223a22          DCB      0x64,0x22,0x3a,0x22
0008b0  36227d5d          DCB      0x36,0x22,0x7d,0x5d
0008b4  2c000000          DCB      0x2c,0x00,0x00,0x00
0008b8  22656469          DCB      0x22,0x65,0x64,0x69
0008bc  742d6571          DCB      0x74,0x2d,0x65,0x71
0008c0  2d697465          DCB      0x2d,0x69,0x74,0x65
0008c4  6d73223a          DCB      0x6d,0x73,0x22,0x3a
0008c8  5b7b226e          DCB      0x5b,0x7b,0x22,0x6e
0008cc  616d6522          DCB      0x61,0x6d,0x65,0x22
0008d0  3a224e6f          DCB      0x3a,0x22,0x4e,0x6f
0008d4  726d616c          DCB      0x72,0x6d,0x61,0x6c
0008d8  222c2022          DCB      0x22,0x2c,0x20,0x22
0008dc  6964223a          DCB      0x69,0x64,0x22,0x3a
0008e0  2231227d          DCB      0x22,0x31,0x22,0x7d
0008e4  2c7b226e          DCB      0x2c,0x7b,0x22,0x6e
0008e8  616d6522          DCB      0x61,0x6d,0x65,0x22
0008ec  3a224369          DCB      0x3a,0x22,0x43,0x69
0008f0  6e656d61          DCB      0x6e,0x65,0x6d,0x61
0008f4  222c2022          DCB      0x22,0x2c,0x20,0x22
0008f8  6964223a          DCB      0x69,0x64,0x22,0x3a
0008fc  2232227d          DCB      0x22,0x32,0x22,0x7d
000900  2c7b226e          DCB      0x2c,0x7b,0x22,0x6e
000904  616d6522          DCB      0x61,0x6d,0x65,0x22
000908  3a224e69          DCB      0x3a,0x22,0x4e,0x69
00090c  67687422          DCB      0x67,0x68,0x74,0x22
000910  2c202269          DCB      0x2c,0x20,0x22,0x69
000914  64223a22          DCB      0x64,0x22,0x3a,0x22
000918  33227d2c          DCB      0x33,0x22,0x7d,0x2c
00091c  5d2c0000          DCB      0x5d,0x2c,0x00,0x00
000920  7b226e61          DCB      0x7b,0x22,0x6e,0x61
000924  6d65223a          DCB      0x6d,0x65,0x22,0x3a
000928  2246696c          DCB      0x22,0x46,0x69,0x6c
00092c  74657220          DCB      0x74,0x65,0x72,0x20
000930  2564222c          DCB      0x25,0x64,0x22,0x2c
000934  20226964          DCB      0x20,0x22,0x69,0x64
000938  223a2022          DCB      0x22,0x3a,0x20,0x22
00093c  2564222c          DCB      0x25,0x64,0x22,0x2c
000940  20226571          DCB      0x20,0x22,0x65,0x71
000944  2d676169          DCB      0x2d,0x67,0x61,0x69
000948  6e223a20          DCB      0x6e,0x22,0x3a,0x20
00094c  22256422          DCB      0x22,0x25,0x64,0x22
000950  2c202265          DCB      0x2c,0x20,0x22,0x65
000954  712d6672          DCB      0x71,0x2d,0x66,0x72
000958  65717565          DCB      0x65,0x71,0x75,0x65
00095c  6e637922          DCB      0x6e,0x63,0x79,0x22
000960  3a202225          DCB      0x3a,0x20,0x22,0x25
000964  64222c20          DCB      0x64,0x22,0x2c,0x20
000968  2265712d          DCB      0x22,0x65,0x71,0x2d
00096c  77696474          DCB      0x77,0x69,0x64,0x74
000970  68223a22          DCB      0x68,0x22,0x3a,0x22
000974  2564227d          DCB      0x25,0x64,0x22,0x7d
000978  2c000000          DCB      0x2c,0x00,0x00,0x00
00097c  22656469          DCB      0x22,0x65,0x64,0x69
000980  742d6571          DCB      0x74,0x2d,0x65,0x71
000984  2d697465          DCB      0x2d,0x69,0x74,0x65
000988  6d73223a          DCB      0x6d,0x73,0x22,0x3a
00098c  5b7b226e          DCB      0x5b,0x7b,0x22,0x6e
000990  616d6522          DCB      0x61,0x6d,0x65,0x22
000994  3a225573          DCB      0x3a,0x22,0x55,0x73
000998  65723122          DCB      0x65,0x72,0x31,0x22
00099c  2c202269          DCB      0x2c,0x20,0x22,0x69
0009a0  64223a20          DCB      0x64,0x22,0x3a,0x20
0009a4  2234227d          DCB      0x22,0x34,0x22,0x7d
0009a8  2c7b226e          DCB      0x2c,0x7b,0x22,0x6e
0009ac  616d6522          DCB      0x61,0x6d,0x65,0x22
0009b0  3a225573          DCB      0x3a,0x22,0x55,0x73
0009b4  65723222          DCB      0x65,0x72,0x32,0x22
0009b8  2c202269          DCB      0x2c,0x20,0x22,0x69
0009bc  64223a20          DCB      0x64,0x22,0x3a,0x20
0009c0  2235227d          DCB      0x22,0x35,0x22,0x7d
0009c4  2c7b226e          DCB      0x2c,0x7b,0x22,0x6e
0009c8  616d6522          DCB      0x61,0x6d,0x65,0x22
0009cc  3a225573          DCB      0x3a,0x22,0x55,0x73
0009d0  65723322          DCB      0x65,0x72,0x33,0x22
0009d4  2c202269          DCB      0x2c,0x20,0x22,0x69
0009d8  64223a20          DCB      0x64,0x22,0x3a,0x20
0009dc  2236227d          DCB      0x22,0x36,0x22,0x7d
0009e0  5d2c00            DCB      0x5d,0x2c,0x00

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=0

000000  436f6e74          DCB      "Content-type: text/html\r\n\r\n",0
000004  656e742d
000008  74797065
00000c  3a207465
000010  78742f68
000014  746d6c0d
000018  0a0d0a00
00001c  436f6e74          DCB      "Content-type: text/html\r\nExpires: Fri, 10 Apr 2008 14"
000020  656e742d
000024  74797065
000028  3a207465
00002c  78742f68
000030  746d6c0d
000034  0a457870
000038  69726573
00003c  3a204672
000040  692c2031
000044  30204170
000048  72203230
00004c  30382031
000050  34      
000051  3a30303a          DCB      ":00:00 GMT\r\nPragma: no-cache\r\n\r\n",0
000055  30302047
000059  4d540d0a
00005d  50726167
000061  6d613a20
000065  6e6f2d63
000069  61636865
00006d  0d0a0d0a
000071  00      
000072  436f6e74          DCB      "Content-type: image/gif\r\n\r\n",0
000076  656e742d
00007a  74797065
00007e  3a20696d
000082  6167652f
000086  6769660d
00008a  0a0d0a00
00008e  436f6e74          DCB      "Content-type: image/png\r\n\r\n",0
000092  656e742d
000096  74797065
00009a  3a20696d
00009e  6167652f
0000a2  706e670d
0000a6  0a0d0a00
0000aa  436f6e74          DCB      "Content-type: image/jpeg\r\n\r\n",0
0000ae  656e742d
0000b2  74797065
0000b6  3a20696d
0000ba  6167652f
0000be  6a706567
0000c2  0d0a0d0a
0000c6  00      
0000c7  436f6e74          DCB      "Content-type: image/bmp\r\n\r\n",0
0000cb  656e742d
0000cf  74797065
0000d3  3a20696d
0000d7  6167652f
0000db  626d700d
0000df  0a0d0a00
0000e3  436f6e74          DCB      "Content-type: image/x-icon\r\n\r\n",0
0000e7  656e742d
0000eb  74797065
0000ef  3a20696d
0000f3  6167652f
0000f7  782d6963
0000fb  6f6e0d0a
0000ff  0d0a00  
000102  436f6e74          DCB      "Content-type: application/octet-stream\r\n\r\n",0
000106  656e742d
00010a  74797065
00010e  3a206170
000112  706c6963
000116  6174696f
00011a  6e2f6f63
00011e  7465742d
000122  73747265
000126  616d0d0a
00012a  0d0a00  
00012d  436f6e74          DCB      "Content-type: application/x-javascript\r\n\r\n",0
000131  656e742d
000135  74797065
000139  3a206170
00013d  706c6963
000141  6174696f
000145  6e2f782d
000149  6a617661
00014d  73637269
000151  70740d0a
000155  0d0a00  
000158  436f6e74          DCB      "Content-type: text/css\r\n\r\n",0
00015c  656e742d
000160  74797065
000164  3a207465
000168  78742f63
00016c  73730d0a
000170  0d0a00  
000173  436f6e74          DCB      "Content-type: application/x-shockwave-flash\r\n\r\n",0
000177  656e742d
00017b  74797065
00017f  3a206170
000183  706c6963
000187  6174696f
00018b  6e2f782d
00018f  73686f63
000193  6b776176
000197  652d666c
00019b  6173680d
00019f  0a0d0a00
0001a3  436f6e74          DCB      "Content-type: text/xml\r\n\r\n",0
0001a7  656e742d
0001ab  74797065
0001af  3a207465
0001b3  78742f78
0001b7  6d6c0d0a
0001bb  0d0a00  
0001be  436f6e74          DCB      "Content-type: text/plain\r\n\r\n",0
0001c2  656e742d
0001c6  74797065
0001ca  3a207465
0001ce  78742f70
0001d2  6c61696e
0001d6  0d0a0d0a
0001da  00      
0001db  48545450          DCB      "HTTP/1.0 200 OK\r\n",0
0001df  2f312e30
0001e3  20323030
0001e7  204f4b0d
0001eb  0a00    
0001ed  48545450          DCB      "HTTP/1.0 404 File not found\r\n",0
0001f1  2f312e30
0001f5  20343034
0001f9  2046696c
0001fd  65206e6f
000201  7420666f
000205  756e640d
000209  0a00    
00020b  48545450          DCB      "HTTP/1.0 400 Bad Request\r\n",0
00020f  2f312e30
000213  20343030
000217  20426164
00021b  20526571
00021f  75657374
000223  0d0a00  
000226  48545450          DCB      "HTTP/1.0 501 Not Implemented\r\n",0
00022a  2f312e30
00022e  20353031
000232  204e6f74
000236  20496d70
00023a  6c656d65
00023e  6e746564
000242  0d0a00  
000245  48545450          DCB      "HTTP/1.1 200 OK\r\n",0
000249  2f312e31
00024d  20323030
000251  204f4b0d
000255  0a00    
000257  48545450          DCB      "HTTP/1.1 404 File not found\r\n",0
00025b  2f312e31
00025f  20343034
000263  2046696c
000267  65206e6f
00026b  7420666f
00026f  756e640d
000273  0a00    
000275  48545450          DCB      "HTTP/1.1 400 Bad Request\r\n",0
000279  2f312e31
00027d  20343030
000281  20426164
000285  20526571
000289  75657374
00028d  0d0a00  
000290  48545450          DCB      "HTTP/1.1 501 Not Implemented\r\n",0
000294  2f312e31
000298  20353031
00029c  204e6f74
0002a0  20496d70
0002a4  6c656d65
0002a8  6e746564
0002ac  0d0a00  
0002af  436f6e74          DCB      "Content-Length: ",0
0002b3  656e742d
0002b7  4c656e67
0002bb  74683a20
0002bf  00      
0002c0  436f6e6e          DCB      "Connection: Close\r\n",0
0002c4  65637469
0002c8  6f6e3a20
0002cc  436c6f73
0002d0  650d0a00
0002d4  53657276          DCB      "Server: lwIP/1.3.1 (http://savannah.nongnu.org/projects"
0002d8  65723a20
0002dc  6c774950
0002e0  2f312e33
0002e4  2e312028
0002e8  68747470
0002ec  3a2f2f73
0002f0  6176616e
0002f4  6e61682e
0002f8  6e6f6e67
0002fc  6e752e6f
000300  72672f70
000304  726f6a65
000308  637473  
00030b  2f6c7769          DCB      "/lwip)\r\n",0
00030f  70290d0a
000313  00      
000314  0d0a3c68          DCB      "\r\n<html><body><h2>404: The requested file cannot be f"
000318  746d6c3e
00031c  3c626f64
000320  793e3c68
000324  323e3430
000328  343a2054
00032c  68652072
000330  65717565
000334  73746564
000338  2066696c
00033c  65206361
000340  6e6e6f74
000344  20626520
000348  66      
000349  6f756e64          DCB      "ound.</h2></body></html>\r\n",0
00034d  2e3c2f68
000351  323e3c2f
000355  626f6479
000359  3e3c2f68
00035d  746d6c3e
000361  0d0a00  
000364  68746d6c          DCB      "html",0
000368  00      
000369  68746d00          DCB      "htm",0
00036d  7368746d          DCB      "shtml",0
000371  6c00    
000373  7368746d          DCB      "shtm",0
000377  00      
000378  73736900          DCB      "ssi",0
00037c  67696600          DCB      "gif",0
000380  706e6700          DCB      "png",0
000384  6a706700          DCB      "jpg",0
000388  626d7000          DCB      "bmp",0
00038c  69636f00          DCB      "ico",0
000390  636c6173          DCB      "class",0
000394  7300    
000396  636c7300          DCB      "cls",0
00039a  6a7300            DCB      "js",0
00039d  72616d00          DCB      "ram",0
0003a1  63737300          DCB      "css",0
0003a5  73776600          DCB      "swf",0
0003a9  786d6c00          DCB      "xml",0
0003ad  70616765          DCB      "page=setup",0
0003b1  3d736574
0003b5  757000  
0003b8  70616765          DCB      "page=home",0
0003bc  3d686f6d
0003c0  6500    
0003c2  70616765          DCB      "page=roomEQ",0
0003c6  3d726f6f
0003ca  6d455100
0003ce  70616765          DCB      "page=preset",0
0003d2  3d707265
0003d6  73657400
0003da  70616765          DCB      "page=ipConfig",0
0003de  3d697043
0003e2  6f6e6669
0003e6  6700    
0003e8  70616765          DCB      "page=about",0
0003ec  3d61626f
0003f0  757400  
0003f3  70616765          DCB      "page=config",0
0003f7  3d636f6e
0003fb  66696700

                          AREA ||.data||, DATA, ALIGN=2

                  g_Page_CGI
                          DCD      ||.conststring||+0x3ad
                          DCD      Cgi_setup_page_handler
                          DCD      ||.conststring||+0x3b8
                          DCD      Cgi_home_page_handler
                          DCD      ||.conststring||+0x3c2
                          DCD      Cgi_roomeq_page_handler
                          DCD      ||.conststring||+0x3ce
                          DCD      Cgi_preset_page_handler
                          DCD      ||.conststring||+0x3da
                          DCD      Cgi_ipconfig_page_handler
                          DCD      ||.conststring||+0x3e8
                          DCD      Cgi_about_page_handler
                          DCD      ||.conststring||+0x3f3
                          DCD      Cgi_config_handler
                  pjson
                          DCD      json_output_buf
                  g_MACArray
                          DCD      0x00000000
000040  00000000          DCB      0x00,0x00,0x00,0x00
                  g_NumCGI
                          DCD      0x00000000
