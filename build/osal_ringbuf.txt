; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\build\osal_ringbuf.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\osal_ringbuf.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I.\FreeRTOS\include -I.\inc -I.\startup -I.\driverlib -I.\Application -I.\FreeRTOS\portable -I.\Task -I.\Driver -I.\web -I.\third_party\lwip-1.4.1\src\include -I.\third_party\fatfs -I.\third_party\lwip-1.4.1\apps\httpserver_raw -I.\third_party\lwip-1.4.1\ports\tiva-tm4c129\include -I.\third_party\lwip-1.4.1\ports\tiva-tm4c129\include\arch -I.\third_party\lwip-1.4.1\src\include\ipv4 -I..\MCU -I.\third_party\lwip-1.4.1\apps -I.\third_party -I.\Upnp -I.\Dsp -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\TI\TM4C129 -Drvmdk -DPART_TM4C129XNCZAD -DRTOS_FREERTOS -DTARGET_IS_SNOWFLAKE_RA0 -DUSE_LWIP -DTM4C129ENCPDT --omf_browse=.\build\osal_ringbuf.crf Application\OSAL_RingBuf.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ring_buffer_init PROC
;;;15     
;;;16     void ring_buffer_init(void)
000000  b510              PUSH     {r4,lr}
;;;17     {
;;;18     	 uint8 index;
;;;19     	
;;;20     	 for(index = 0; index < RING_BUF_COUNT; index++)
000002  2400              MOVS     r4,#0
000004  e018              B        |L1.56|
                  |L1.6|
;;;21     	{
;;;22     		   ring_list[index]->pread = ring_list[index]->buffer;
000006  4848              LDR      r0,|L1.296|
000008  f8500024          LDR      r0,[r0,r4,LSL #2]
00000c  4946              LDR      r1,|L1.296|
00000e  f8511024          LDR      r1,[r1,r4,LSL #2]
000012  f8c10204          STR      r0,[r1,#0x204]
;;;23     		   ring_list[index]->pwrite = ring_list[index]->buffer;
000016  4844              LDR      r0,|L1.296|
000018  f8500024          LDR      r0,[r0,r4,LSL #2]
00001c  4942              LDR      r1,|L1.296|
00001e  f8511024          LDR      r1,[r1,r4,LSL #2]
000022  f8c10208          STR      r0,[r1,#0x208]
;;;24     		   memset(ring_list[index]->buffer, 0, sizeof(ring_list[index]->buffer));
000026  4940              LDR      r1,|L1.296|
000028  f8510024          LDR      r0,[r1,r4,LSL #2]
00002c  f44f7100          MOV      r1,#0x200
000030  f7fffffe          BL       __aeabi_memclr4
000034  1c60              ADDS     r0,r4,#1              ;20
000036  b2c4              UXTB     r4,r0                 ;20
                  |L1.56|
000038  2c03              CMP      r4,#3                 ;20
00003a  d3e4              BCC      |L1.6|
;;;25     	}
;;;26     
;;;27     }
00003c  bd10              POP      {r4,pc}
;;;28     
                          ENDP

                  ring_buffer_write PROC
;;;29     void ring_buffer_write(ringbuf_device_t index, uint8 ch)
00003e  b570              PUSH     {r4-r6,lr}
;;;30     {
000040  4605              MOV      r5,r0
000042  460e              MOV      r6,r1
;;;31     	  ring_buffer_t *p;
;;;32     	
;;;33     	  OSAL_ASSERT(index < DEVICE_NUM);
000044  2d03              CMP      r5,#3
000046  db06              BLT      |L1.86|
000048  4a38              LDR      r2,|L1.300|
00004a  a139              ADR      r1,|L1.304|
00004c  a03d              ADR      r0,|L1.324|
00004e  f7fffffe          BL       s_printf
000052  bf00              NOP      
                  |L1.84|
000054  e7fe              B        |L1.84|
                  |L1.86|
;;;34     	
;;;35     	  p = ring_list[index];
000056  4834              LDR      r0,|L1.296|
000058  f8504025          LDR      r4,[r0,r5,LSL #2]
;;;36     	
;;;37     	  if(p->bytes_in_buffer == RING_BUF_SIZE) return;
00005c  f8d40200          LDR      r0,[r4,#0x200]
000060  f5b07f00          CMP      r0,#0x200
000064  d100              BNE      |L1.104|
                  |L1.102|
;;;38     	
;;;39     	  *p->pwrite++ = ch;
;;;40     	
;;;41     	  if(p->pwrite - p->buffer >= RING_BUF_SIZE)
;;;42     		{
;;;43     			  p->pwrite = p->buffer;    
;;;44     		}
;;;45     		
;;;46     		p->bytes_in_buffer++;
;;;47     }
000066  bd70              POP      {r4-r6,pc}
                  |L1.104|
000068  f8d41208          LDR      r1,[r4,#0x208]        ;39
00006c  1c48              ADDS     r0,r1,#1              ;39
00006e  f8c40208          STR      r0,[r4,#0x208]        ;39
000072  700e              STRB     r6,[r1,#0]            ;39
000074  f8d40208          LDR      r0,[r4,#0x208]        ;41
000078  1b00              SUBS     r0,r0,r4              ;41
00007a  f5b07f00          CMP      r0,#0x200             ;41
00007e  db01              BLT      |L1.132|
000080  f8c44208          STR      r4,[r4,#0x208]        ;43
                  |L1.132|
000084  f8d40200          LDR      r0,[r4,#0x200]        ;46
000088  1c40              ADDS     r0,r0,#1              ;46
00008a  f8c40200          STR      r0,[r4,#0x200]        ;46
00008e  bf00              NOP      
000090  e7e9              B        |L1.102|
;;;48     
                          ENDP

                  ring_buffer_read PROC
;;;49     
;;;50     uint8 ring_buffer_read(ringbuf_device_t index)
000092  b570              PUSH     {r4-r6,lr}
;;;51     {  
000094  4605              MOV      r5,r0
;;;52     	  uint8 byte = 0;
000096  2600              MOVS     r6,#0
;;;53     	  ring_buffer_t *p;
;;;54     	
;;;55     	  OSAL_ASSERT(index < DEVICE_NUM);
000098  2d03              CMP      r5,#3
00009a  db06              BLT      |L1.170|
00009c  4a31              LDR      r2,|L1.356|
00009e  a124              ADR      r1,|L1.304|
0000a0  a028              ADR      r0,|L1.324|
0000a2  f7fffffe          BL       s_printf
0000a6  bf00              NOP      
                  |L1.168|
0000a8  e7fe              B        |L1.168|
                  |L1.170|
;;;56     	
;;;57     	  p = ring_list[index];
0000aa  481f              LDR      r0,|L1.296|
0000ac  f8504025          LDR      r4,[r0,r5,LSL #2]
;;;58     	
;;;59     	  byte = * p->pread++;
0000b0  f8d41204          LDR      r1,[r4,#0x204]
0000b4  1c48              ADDS     r0,r1,#1
0000b6  f8c40204          STR      r0,[r4,#0x204]
0000ba  780e              LDRB     r6,[r1,#0]
;;;60     	
;;;61     	  if( p->pread -  p->buffer >= RING_BUF_SIZE)
0000bc  f8d40204          LDR      r0,[r4,#0x204]
0000c0  1b00              SUBS     r0,r0,r4
0000c2  f5b07f00          CMP      r0,#0x200
0000c6  db01              BLT      |L1.204|
;;;62     		{
;;;63     			     p->pread =  p->buffer;
0000c8  f8c44204          STR      r4,[r4,#0x204]
                  |L1.204|
;;;64     		}
;;;65     		
;;;66     		p->bytes_in_buffer--;
0000cc  f8d40200          LDR      r0,[r4,#0x200]
0000d0  1e40              SUBS     r0,r0,#1
0000d2  f8c40200          STR      r0,[r4,#0x200]
;;;67     		
;;;68     		return byte;
0000d6  4630              MOV      r0,r6
;;;69     }
0000d8  bd70              POP      {r4-r6,pc}
;;;70     
                          ENDP

                  Is_ring_buffer_empty PROC
;;;71     bool Is_ring_buffer_empty(ringbuf_device_t index)
0000da  b570              PUSH     {r4-r6,lr}
;;;72     {
0000dc  4604              MOV      r4,r0
;;;73     	  ring_buffer_t *p;
;;;74     	
;;;75     	  OSAL_ASSERT(index < DEVICE_NUM);
0000de  2c03              CMP      r4,#3
0000e0  db06              BLT      |L1.240|
0000e2  4a21              LDR      r2,|L1.360|
0000e4  a112              ADR      r1,|L1.304|
0000e6  a017              ADR      r0,|L1.324|
0000e8  f7fffffe          BL       s_printf
0000ec  bf00              NOP      
                  |L1.238|
0000ee  e7fe              B        |L1.238|
                  |L1.240|
;;;76     	
;;;77     	  p = ring_list[index];
0000f0  480d              LDR      r0,|L1.296|
0000f2  f8505024          LDR      r5,[r0,r4,LSL #2]
;;;78     	
;;;79     	 if( p->bytes_in_buffer > 0) return false;
0000f6  f8d50200          LDR      r0,[r5,#0x200]
0000fa  b108              CBZ      r0,|L1.256|
0000fc  2000              MOVS     r0,#0
                  |L1.254|
;;;80     	 else return true;
;;;81     }
0000fe  bd70              POP      {r4-r6,pc}
                  |L1.256|
000100  2001              MOVS     r0,#1                 ;80
000102  e7fc              B        |L1.254|
;;;82     
                          ENDP

                  ring_buffer_len PROC
;;;83     size_t ring_buffer_len(ringbuf_device_t index)
000104  b570              PUSH     {r4-r6,lr}
;;;84     {
000106  4604              MOV      r4,r0
;;;85     	  ring_buffer_t *p;
;;;86     	  OSAL_ASSERT(index < DEVICE_NUM);
000108  2c03              CMP      r4,#3
00010a  db06              BLT      |L1.282|
00010c  4a17              LDR      r2,|L1.364|
00010e  a108              ADR      r1,|L1.304|
000110  a00c              ADR      r0,|L1.324|
000112  f7fffffe          BL       s_printf
000116  bf00              NOP      
                  |L1.280|
000118  e7fe              B        |L1.280|
                  |L1.282|
;;;87     	
;;;88     	  p = ring_list[index];
00011a  4803              LDR      r0,|L1.296|
00011c  f8505024          LDR      r5,[r0,r4,LSL #2]
;;;89     	
;;;90     	  return  (p->bytes_in_buffer);
000120  f8d50200          LDR      r0,[r5,#0x200]
;;;91     }
000124  bd70              POP      {r4-r6,pc}
;;;92     
                          ENDP

000126  0000              DCW      0x0000
                  |L1.296|
                          DCD      ring_list
                  |L1.300|
                          DCD      __FUNCTION__
                  |L1.304|
000130  696e6465          DCB      "index < DEVICE_NUM",0
000134  78203c20
000138  44455649
00013c  43455f4e
000140  554d00  
000143  00                DCB      0
                  |L1.324|
000144  28257329          DCB      "(%s) has assert failed at %s.\n",0
000148  20686173
00014c  20617373
000150  65727420
000154  6661696c
000158  65642061
00015c  74202573
000160  2e0a00  
000163  00                DCB      0
                  |L1.356|
                          DCD      |symbol_number.9|
                  |L1.360|
                          DCD      |symbol_number.10|
                  |L1.364|
                          DCD      |symbol_number.11|

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  __FUNCTION__
000000  72696e67          DCB      0x72,0x69,0x6e,0x67
000004  5f627566          DCB      0x5f,0x62,0x75,0x66
000008  6665725f          DCB      0x66,0x65,0x72,0x5f
00000c  77726974          DCB      0x77,0x72,0x69,0x74
000010  6500              DCB      0x65,0x00
                  |symbol_number.9|
000012  7269              DCB      0x72,0x69
000014  6e675f62          DCB      0x6e,0x67,0x5f,0x62
000018  75666665          DCB      0x75,0x66,0x66,0x65
00001c  725f7265          DCB      0x72,0x5f,0x72,0x65
000020  616400            DCB      0x61,0x64,0x00
                  |symbol_number.10|
000023  49                DCB      0x49
000024  735f7269          DCB      0x73,0x5f,0x72,0x69
000028  6e675f62          DCB      0x6e,0x67,0x5f,0x62
00002c  75666665          DCB      0x75,0x66,0x66,0x65
000030  725f656d          DCB      0x72,0x5f,0x65,0x6d
000034  70747900          DCB      0x70,0x74,0x79,0x00
                  |symbol_number.11|
000038  72696e67          DCB      0x72,0x69,0x6e,0x67
00003c  5f627566          DCB      0x5f,0x62,0x75,0x66
000040  6665725f          DCB      0x66,0x65,0x72,0x5f
000044  6c656e00          DCB      0x6c,0x65,0x6e,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  ring_list
                          DCD      console
                          DCD      ir_front
                          DCD      ir_in
