; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\build\osal_detect.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\osal_detect.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I.\FreeRTOS\include -I.\inc -I.\startup -I.\driverlib -I.\Application -I.\FreeRTOS\portable -I.\Task -I.\Driver -I.\web -I.\third_party\lwip-1.4.1\src\include -I.\third_party\fatfs -I.\third_party\lwip-1.4.1\apps\httpserver_raw -I.\third_party\lwip-1.4.1\ports\tiva-tm4c129\include -I.\third_party\lwip-1.4.1\ports\tiva-tm4c129\include\arch -I.\third_party\lwip-1.4.1\src\include\ipv4 -I..\MCU -I.\third_party\lwip-1.4.1\apps -I.\third_party -I.\Upnp -I.\Dsp -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\TI\TM4C129 -Drvmdk -DPART_TM4C129XNCZAD -DRTOS_FREERTOS -DTARGET_IS_SNOWFLAKE_RA0 -DUSE_LWIP -DTM4C129ENCPDT --omf_browse=.\build\osal_detect.crf Application\OSAL_Detect.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  update_detect_state PROC
;;;21     
;;;22     void update_detect_state(detect_event_t event)
000000  b510              PUSH     {r4,lr}
;;;23     {
000002  4604              MOV      r4,r0
;;;24     	OSAL_ASSERT(event < NUM_OF_DETECT);
000004  2c08              CMP      r4,#8
000006  db06              BLT      |L1.22|
000008  4a95              LDR      r2,|L1.608|
00000a  a196              ADR      r1,|L1.612|
00000c  a09b              ADR      r0,|L1.636|
00000e  f7fffffe          BL       s_printf
000012  bf00              NOP      
                  |L1.20|
000014  e7fe              B        |L1.20|
                  |L1.22|
;;;25     	
;;;26     	detectlist[event].state = DETECT_BEGIN;
000016  2000              MOVS     r0,#0
000018  eb040184          ADD      r1,r4,r4,LSL #2
00001c  4a9f              LDR      r2,|L1.668|
00001e  eb020181          ADD      r1,r2,r1,LSL #2
000022  7288              STRB     r0,[r1,#0xa]
;;;27     }
000024  bd10              POP      {r4,pc}
;;;28     
                          ENDP

                  update_all_protect_state PROC
;;;29     void update_all_protect_state(void)
000026  2002              MOVS     r0,#2
;;;30     {
;;;31     	uint8 index;
;;;32     	
;;;33     	for(index = DETECT_OVER_TEMP; index < NUM_OF_DETECT; index++){
000028  e008              B        |L1.60|
                  |L1.42|
;;;34     		detectlist[index].state = DETECT_BEGIN;
00002a  2100              MOVS     r1,#0
00002c  eb000280          ADD      r2,r0,r0,LSL #2
000030  4b9a              LDR      r3,|L1.668|
000032  eb030282          ADD      r2,r3,r2,LSL #2
000036  7291              STRB     r1,[r2,#0xa]
000038  1c41              ADDS     r1,r0,#1              ;33
00003a  b2c8              UXTB     r0,r1                 ;33
                  |L1.60|
00003c  2808              CMP      r0,#8                 ;33
00003e  dbf4              BLT      |L1.42|
;;;35     	}
;;;36     }
000040  4770              BX       lr
;;;37     
                          ENDP

                  DetectGpioPoll PROC
;;;38     void DetectGpioPoll(void)
000042  b570              PUSH     {r4-r6,lr}
;;;39     {
;;;40     	uint8 index;
;;;41     	
;;;42     	for(index = 0; index < NUM_OF_DETECT; index++){ 
000044  2400              MOVS     r4,#0
000046  e106              B        |L1.598|
                  |L1.72|
;;;43     		/*don't detect protection event before power on finished*/
;;;44     		if(index > 1 && (gSystem_t->status != STATUS_WORKING)) return;
000048  2c01              CMP      r4,#1
00004a  dd06              BLE      |L1.90|
00004c  4894              LDR      r0,|L1.672|
00004e  6800              LDR      r0,[r0,#0]  ; gSystem_t
000050  f8900053          LDRB     r0,[r0,#0x53]
000054  2802              CMP      r0,#2
000056  d000              BEQ      |L1.90|
                  |L1.88|
;;;45     		switch(detectlist[index].state){
;;;46     			case DETECT_BEGIN:
;;;47     				if(detectlist[index].pstateread(detectlist[index].port, detectlist[index].pin) == detectlist[index].mode){
;;;48     					 vTaskDelay(100/portTICK_RATE_MS);
;;;49     				   if(detectlist[index].pstateread(detectlist[index].port, detectlist[index].pin) == detectlist[index].mode){
;;;50     							if(detectlist[index].validstatecallback != NULL){
;;;51     								detectlist[index].validstatecallback(index);
;;;52     								detectlist[index].state = DETECT_VALID;
;;;53     							}
;;;54     					 }else{
;;;55     						  if(detectlist[index].invalidstatecallback != NULL){
;;;56     				        detectlist[index].invalidstatecallback(index);
;;;57     			        }
;;;58     								detectlist[index].state = DETECT_INVALID;
;;;59     					 }
;;;60     				 }else{
;;;61     					  if(detectlist[index].invalidstatecallback != NULL){
;;;62     				        detectlist[index].invalidstatecallback(index);
;;;63     			        }
;;;64     								detectlist[index].state = DETECT_INVALID;
;;;65     				 }
;;;66     				break;
;;;67     				
;;;68     			case DETECT_VALID:
;;;69     				if(detectlist[index].pstateread(detectlist[index].port, detectlist[index].pin) != detectlist[index].mode){
;;;70     					if(detectlist[index].invalidstatecallback != NULL){
;;;71     				     detectlist[index].invalidstatecallback(index);
;;;72     			     }
;;;73     					 detectlist[index].state = DETECT_INVALID;
;;;74     				}
;;;75     				break;
;;;76     				
;;;77     			case DETECT_INVALID:
;;;78     				if(detectlist[index].pstateread(detectlist[index].port, detectlist[index].pin) == detectlist[index].mode){
;;;79     					vTaskDelay(100/portTICK_RATE_MS);
;;;80     					if(detectlist[index].pstateread(detectlist[index].port, detectlist[index].pin) == detectlist[index].mode){
;;;81     							if(detectlist[index].validstatecallback != NULL){
;;;82     								detectlist[index].validstatecallback(index);
;;;83     								detectlist[index].state = DETECT_VALID;
;;;84     				   }
;;;85     				 }
;;;86     			 }
;;;87     				break;
;;;88     			
;;;89     			default:
;;;90     				break;
;;;91     		}
;;;92     }
;;;93     
;;;94     }
000058  bd70              POP      {r4-r6,pc}
                  |L1.90|
00005a  eb040084          ADD      r0,r4,r4,LSL #2       ;45
00005e  498f              LDR      r1,|L1.668|
000060  eb010080          ADD      r0,r1,r0,LSL #2       ;45
000064  7a80              LDRB     r0,[r0,#0xa]          ;45
000066  b120              CBZ      r0,|L1.114|
000068  2801              CMP      r0,#1                 ;45
00006a  d07a              BEQ      |L1.354|
00006c  2802              CMP      r0,#2                 ;45
00006e  d177              BNE      |L1.352|
000070  e0a5              B        |L1.446|
                  |L1.114|
000072  eb040384          ADD      r3,r4,r4,LSL #2       ;47
000076  4d89              LDR      r5,|L1.668|
000078  eb050383          ADD      r3,r5,r3,LSL #2       ;47
00007c  7a19              LDRB     r1,[r3,#8]            ;47
00007e  eb040384          ADD      r3,r4,r4,LSL #2       ;47
000082  eb050383          ADD      r3,r5,r3,LSL #2       ;47
000086  6858              LDR      r0,[r3,#4]            ;47
000088  eb040384          ADD      r3,r4,r4,LSL #2       ;47
00008c  f8552023          LDR      r2,[r5,r3,LSL #2]     ;47
000090  4790              BLX      r2                    ;47
000092  eb040184          ADD      r1,r4,r4,LSL #2       ;47
000096  462a              MOV      r2,r5                 ;47
000098  eb020181          ADD      r1,r2,r1,LSL #2       ;47
00009c  7a49              LDRB     r1,[r1,#9]            ;47
00009e  4288              CMP      r0,r1                 ;47
0000a0  d146              BNE      |L1.304|
0000a2  2064              MOVS     r0,#0x64              ;48
0000a4  f7fffffe          BL       vTaskDelay
0000a8  eb040384          ADD      r3,r4,r4,LSL #2       ;49
0000ac  eb050383          ADD      r3,r5,r3,LSL #2       ;49
0000b0  7a19              LDRB     r1,[r3,#8]            ;49
0000b2  eb040384          ADD      r3,r4,r4,LSL #2       ;49
0000b6  eb050383          ADD      r3,r5,r3,LSL #2       ;49
0000ba  6858              LDR      r0,[r3,#4]            ;49
0000bc  eb040384          ADD      r3,r4,r4,LSL #2       ;49
0000c0  f8552023          LDR      r2,[r5,r3,LSL #2]     ;49
0000c4  4790              BLX      r2                    ;49
0000c6  eb040184          ADD      r1,r4,r4,LSL #2       ;49
0000ca  462a              MOV      r2,r5                 ;49
0000cc  eb020181          ADD      r1,r2,r1,LSL #2       ;49
0000d0  7a49              LDRB     r1,[r1,#9]            ;49
0000d2  4288              CMP      r0,r1                 ;49
0000d4  d115              BNE      |L1.258|
0000d6  eb040084          ADD      r0,r4,r4,LSL #2       ;50
0000da  4611              MOV      r1,r2                 ;50
0000dc  eb010080          ADD      r0,r1,r0,LSL #2       ;50
0000e0  68c0              LDR      r0,[r0,#0xc]          ;50
0000e2  b320              CBZ      r0,|L1.302|
0000e4  eb040084          ADD      r0,r4,r4,LSL #2       ;51
0000e8  eb020080          ADD      r0,r2,r0,LSL #2       ;51
0000ec  68c1              LDR      r1,[r0,#0xc]          ;51
0000ee  4620              MOV      r0,r4                 ;51
0000f0  4788              BLX      r1                    ;51
0000f2  2001              MOVS     r0,#1                 ;52
0000f4  eb040184          ADD      r1,r4,r4,LSL #2       ;52
0000f8  462a              MOV      r2,r5                 ;52
0000fa  eb020181          ADD      r1,r2,r1,LSL #2       ;52
0000fe  7288              STRB     r0,[r1,#0xa]          ;52
000100  e02c              B        |L1.348|
                  |L1.258|
000102  eb040084          ADD      r0,r4,r4,LSL #2       ;55
000106  4965              LDR      r1,|L1.668|
000108  eb010080          ADD      r0,r1,r0,LSL #2       ;55
00010c  6900              LDR      r0,[r0,#0x10]         ;55
00010e  b138              CBZ      r0,|L1.288|
000110  eb040084          ADD      r0,r4,r4,LSL #2       ;56
000114  460a              MOV      r2,r1                 ;56
000116  eb020080          ADD      r0,r2,r0,LSL #2       ;56
00011a  6901              LDR      r1,[r0,#0x10]         ;56
00011c  4620              MOV      r0,r4                 ;56
00011e  4788              BLX      r1                    ;56
                  |L1.288|
000120  2002              MOVS     r0,#2                 ;58
000122  eb040184          ADD      r1,r4,r4,LSL #2       ;58
000126  4a5d              LDR      r2,|L1.668|
000128  eb020181          ADD      r1,r2,r1,LSL #2       ;58
00012c  7288              STRB     r0,[r1,#0xa]          ;58
                  |L1.302|
00012e  e015              B        |L1.348|
                  |L1.304|
000130  eb040084          ADD      r0,r4,r4,LSL #2       ;61
000134  4959              LDR      r1,|L1.668|
000136  eb010080          ADD      r0,r1,r0,LSL #2       ;61
00013a  6900              LDR      r0,[r0,#0x10]         ;61
00013c  b138              CBZ      r0,|L1.334|
00013e  eb040084          ADD      r0,r4,r4,LSL #2       ;62
000142  460a              MOV      r2,r1                 ;62
000144  eb020080          ADD      r0,r2,r0,LSL #2       ;62
000148  6901              LDR      r1,[r0,#0x10]         ;62
00014a  4620              MOV      r0,r4                 ;62
00014c  4788              BLX      r1                    ;62
                  |L1.334|
00014e  2002              MOVS     r0,#2                 ;64
000150  eb040184          ADD      r1,r4,r4,LSL #2       ;64
000154  4a51              LDR      r2,|L1.668|
000156  eb020181          ADD      r1,r2,r1,LSL #2       ;64
00015a  7288              STRB     r0,[r1,#0xa]          ;64
                  |L1.348|
00015c  e078              B        |L1.592|
00015e  e000              B        |L1.354|
                  |L1.352|
000160  e075              B        |L1.590|
                  |L1.354|
000162  eb040384          ADD      r3,r4,r4,LSL #2       ;69
000166  4d4d              LDR      r5,|L1.668|
000168  eb050383          ADD      r3,r5,r3,LSL #2       ;69
00016c  7a19              LDRB     r1,[r3,#8]            ;69
00016e  eb040384          ADD      r3,r4,r4,LSL #2       ;69
000172  eb050383          ADD      r3,r5,r3,LSL #2       ;69
000176  6858              LDR      r0,[r3,#4]            ;69
000178  eb040384          ADD      r3,r4,r4,LSL #2       ;69
00017c  f8552023          LDR      r2,[r5,r3,LSL #2]     ;69
000180  4790              BLX      r2                    ;69
000182  eb040184          ADD      r1,r4,r4,LSL #2       ;69
000186  462a              MOV      r2,r5                 ;69
000188  eb020181          ADD      r1,r2,r1,LSL #2       ;69
00018c  7a49              LDRB     r1,[r1,#9]            ;69
00018e  4288              CMP      r0,r1                 ;69
000190  d014              BEQ      |L1.444|
000192  eb040084          ADD      r0,r4,r4,LSL #2       ;70
000196  4611              MOV      r1,r2                 ;70
000198  eb010080          ADD      r0,r1,r0,LSL #2       ;70
00019c  6900              LDR      r0,[r0,#0x10]         ;70
00019e  b130              CBZ      r0,|L1.430|
0001a0  eb040084          ADD      r0,r4,r4,LSL #2       ;71
0001a4  eb020080          ADD      r0,r2,r0,LSL #2       ;71
0001a8  6901              LDR      r1,[r0,#0x10]         ;71
0001aa  4620              MOV      r0,r4                 ;71
0001ac  4788              BLX      r1                    ;71
                  |L1.430|
0001ae  2002              MOVS     r0,#2                 ;73
0001b0  eb040184          ADD      r1,r4,r4,LSL #2       ;73
0001b4  4a39              LDR      r2,|L1.668|
0001b6  eb020181          ADD      r1,r2,r1,LSL #2       ;73
0001ba  7288              STRB     r0,[r1,#0xa]          ;73
                  |L1.444|
0001bc  e048              B        |L1.592|
                  |L1.446|
0001be  eb040384          ADD      r3,r4,r4,LSL #2       ;78
0001c2  4d36              LDR      r5,|L1.668|
0001c4  eb050383          ADD      r3,r5,r3,LSL #2       ;78
0001c8  7a19              LDRB     r1,[r3,#8]            ;78
0001ca  eb040384          ADD      r3,r4,r4,LSL #2       ;78
0001ce  eb050383          ADD      r3,r5,r3,LSL #2       ;78
0001d2  6858              LDR      r0,[r3,#4]            ;78
0001d4  eb040384          ADD      r3,r4,r4,LSL #2       ;78
0001d8  f8552023          LDR      r2,[r5,r3,LSL #2]     ;78
0001dc  4790              BLX      r2                    ;78
0001de  eb040184          ADD      r1,r4,r4,LSL #2       ;78
0001e2  462a              MOV      r2,r5                 ;78
0001e4  eb020181          ADD      r1,r2,r1,LSL #2       ;78
0001e8  7a49              LDRB     r1,[r1,#9]            ;78
0001ea  4288              CMP      r0,r1                 ;78
0001ec  d12e              BNE      |L1.588|
0001ee  2064              MOVS     r0,#0x64              ;79
0001f0  f7fffffe          BL       vTaskDelay
0001f4  eb040384          ADD      r3,r4,r4,LSL #2       ;80
0001f8  eb050383          ADD      r3,r5,r3,LSL #2       ;80
0001fc  7a19              LDRB     r1,[r3,#8]            ;80
0001fe  eb040384          ADD      r3,r4,r4,LSL #2       ;80
000202  eb050383          ADD      r3,r5,r3,LSL #2       ;80
000206  6858              LDR      r0,[r3,#4]            ;80
000208  eb040384          ADD      r3,r4,r4,LSL #2       ;80
00020c  f8552023          LDR      r2,[r5,r3,LSL #2]     ;80
000210  4790              BLX      r2                    ;80
000212  eb040184          ADD      r1,r4,r4,LSL #2       ;80
000216  462a              MOV      r2,r5                 ;80
000218  eb020181          ADD      r1,r2,r1,LSL #2       ;80
00021c  7a49              LDRB     r1,[r1,#9]            ;80
00021e  4288              CMP      r0,r1                 ;80
000220  d114              BNE      |L1.588|
000222  eb040084          ADD      r0,r4,r4,LSL #2       ;81
000226  4611              MOV      r1,r2                 ;81
000228  eb010080          ADD      r0,r1,r0,LSL #2       ;81
00022c  68c0              LDR      r0,[r0,#0xc]          ;81
00022e  b168              CBZ      r0,|L1.588|
000230  eb040084          ADD      r0,r4,r4,LSL #2       ;82
000234  eb020080          ADD      r0,r2,r0,LSL #2       ;82
000238  68c1              LDR      r1,[r0,#0xc]          ;82
00023a  4620              MOV      r0,r4                 ;82
00023c  4788              BLX      r1                    ;82
00023e  2001              MOVS     r0,#1                 ;83
000240  eb040184          ADD      r1,r4,r4,LSL #2       ;83
000244  462a              MOV      r2,r5                 ;83
000246  eb020181          ADD      r1,r2,r1,LSL #2       ;83
00024a  7288              STRB     r0,[r1,#0xa]          ;83
                  |L1.588|
00024c  e000              B        |L1.592|
                  |L1.590|
00024e  bf00              NOP                            ;90
                  |L1.592|
000250  bf00              NOP                            ;66
000252  1c60              ADDS     r0,r4,#1              ;42
000254  b2c4              UXTB     r4,r0                 ;42
                  |L1.598|
000256  2c08              CMP      r4,#8                 ;42
000258  f6ffaef6          BLT      |L1.72|
00025c  bf00              NOP      
00025e  e6fb              B        |L1.88|
;;;95     
                          ENDP

                  |L1.608|
                          DCD      __FUNCTION__
                  |L1.612|
000264  6576656e          DCB      "event < NUM_OF_DETECT",0
000268  74203c20
00026c  4e554d5f
000270  4f465f44
000274  45544543
000278  5400    
00027a  00                DCB      0
00027b  00                DCB      0
                  |L1.636|
00027c  28257329          DCB      "(%s) has assert failed at %s.\n",0
000280  20686173
000284  20617373
000288  65727420
00028c  6661696c
000290  65642061
000294  74202573
000298  2e0a00  
00029b  00                DCB      0
                  |L1.668|
                          DCD      detectlist
                  |L1.672|
                          DCD      gSystem_t

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  __FUNCTION__
000000  75706461          DCB      0x75,0x70,0x64,0x61
000004  74655f64          DCB      0x74,0x65,0x5f,0x64
000008  65746563          DCB      0x65,0x74,0x65,0x63
00000c  745f7374          DCB      0x74,0x5f,0x73,0x74
000010  61746500          DCB      0x61,0x74,0x65,0x00

                          AREA ||.data||, DATA, ALIGN=2

                  detectlist
                          DCD      GPIO_ReadSinglePin
                          DCD      0x40061000
000008  80010000          DCB      0x80,0x01,0x00,0x00
                          DCD      sys_audio_valid_handler
                          DCD      sys_audio_invalid_handler
                          DCD      GPIO_ReadSinglePin
                          DCD      0x40062000
00001c  20000000          DCB      0x20,0x00,0x00,0x00
                          DCD      sys_trigger_valid_handler
                          DCD      sys_trigger_invalid_handler
                          DCD      GPIO_ReadSinglePin
                          DCD      0x40065000
000030  02010000          DCB      0x02,0x01,0x00,0x00
                          DCD      sys_protect_valid_handler
                          DCD      sys_protect_invalid_handler
                          DCD      GPIO_ReadSinglePin
                          DCD      0x40065000
000044  01010000          DCB      0x01,0x01,0x00,0x00
                          DCD      sys_protect_valid_handler
                          DCD      sys_protect_invalid_handler
                          DCD      GPIO_ReadSinglePin
                          DCD      0x4003d000
000058  02010000          DCB      0x02,0x01,0x00,0x00
                          DCD      sys_protect_valid_handler
                          DCD      sys_protect_invalid_handler
                          DCD      GPIO_ReadSinglePin
                          DCD      0x40064000
00006c  10010000          DCB      0x10,0x01,0x00,0x00
                          DCD      sys_protect_valid_handler
                          DCD      sys_protect_invalid_handler
                          DCD      GPIO_ReadSinglePin
                          DCD      0x40064000
000080  08010000          DCB      0x08,0x01,0x00,0x00
                          DCD      sys_protect_valid_handler
                          DCD      sys_protect_invalid_handler
                          DCD      GPIO_ReadSinglePin
                          DCD      0x40062000
000094  10010000          DCB      0x10,0x01,0x00,0x00
                          DCD      sys_15v_valid_handler
                          DCD      sys_15v_invalid_handler
