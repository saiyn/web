; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--c99 --list --debug -c --asm --interleave -o.\build\osal_console.o --asm_dir=.\build\ --list_dir=.\build\ --depend=.\build\osal_console.d --cpu=Cortex-M4.fp --apcs=interwork -O0 -I.\FreeRTOS\include -I.\inc -I.\startup -I.\driverlib -I.\Application -I.\FreeRTOS\portable -I.\Task -I.\Driver -I.\web -I.\third_party\lwip-1.4.1\src\include -I.\third_party\fatfs -I.\third_party\lwip-1.4.1\apps\httpserver_raw -I.\third_party\lwip-1.4.1\ports\tiva-tm4c129\include -I.\third_party\lwip-1.4.1\ports\tiva-tm4c129\include\arch -I.\third_party\lwip-1.4.1\src\include\ipv4 -I..\MCU -I.\third_party\lwip-1.4.1\apps -I.\third_party -I.\Upnp -I.\Dsp -ID:\Keil\ARM\RV31\INC -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\TI\TM4C129 -Drvmdk -DPART_TM4C129XNCZAD -DRTOS_FREERTOS -DTARGET_IS_SNOWFLAKE_RA0 -DUSE_LWIP -DTM4C129ENCPDT --omf_browse=.\build\osal_console.crf Application\OSAL_Console.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  ||fn1|| PROC
;;;27     
;;;28     int fn1(struct cmd_tbl_s *cmdtp, int argc, char * const argv[])
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;29     {
000004  4681              MOV      r9,r0
000006  468a              MOV      r10,r1
000008  4693              MOV      r11,r2
;;;30     	   unsigned long i;
;;;31     	   uint8 index=1;
00000a  2601              MOVS     r6,#1
;;;32     	   cmd_tbl_t* pCmd;
;;;33     	   unsigned long base = (unsigned long)Load$$INIT_SECTION$$Base;
00000c  4f58              LDR      r7,|L1.368|
;;;34          unsigned long len = (unsigned long)Load$$INIT_SECTION$$Length;
00000e  f8df8164          LDR      r8,|L1.372|
;;;35     	
;;;36     	   SYS_TRACE("\r\n-------------CMD List Table------------------\r\n");
000012  a059              ADR      r0,|L1.376|
000014  f7fffffe          BL       s_printf
;;;37     	   for(i=0;i<len;index++)
000018  2500              MOVS     r5,#0
00001a  e00b              B        |L1.52|
                  |L1.28|
;;;38          {
;;;39              pCmd = (cmd_tbl_t*)(base+i);
00001c  197c              ADDS     r4,r7,r5
;;;40              if(pCmd->usage){
00001e  68e0              LDR      r0,[r4,#0xc]
000020  b128              CBZ      r0,|L1.46|
;;;41                 SYS_TRACE("%d.%s          -%s\r\n", index,pCmd->name,pCmd->usage);
000022  4631              MOV      r1,r6
000024  a061              ADR      r0,|L1.428|
000026  68e3              LDR      r3,[r4,#0xc]
000028  6822              LDR      r2,[r4,#0]
00002a  f7fffffe          BL       s_printf
                  |L1.46|
;;;42     				 }
;;;43     
;;;44              i+=sizeof(cmd_tbl_t);
00002e  3510              ADDS     r5,r5,#0x10
000030  1c70              ADDS     r0,r6,#1              ;37
000032  b2c6              UXTB     r6,r0                 ;37
                  |L1.52|
000034  4545              CMP      r5,r8                 ;37
000036  d3f1              BCC      |L1.28|
;;;45          }
;;;46     	   SYS_TRACE("\r\n----------------------------------------------\r\n");
000038  a062              ADR      r0,|L1.452|
00003a  f7fffffe          BL       s_printf
;;;47     		 
;;;48     	return 0;
00003e  2000              MOVS     r0,#0
;;;49     }
000040  e8bd9ff0          POP      {r4-r12,pc}
;;;50     
                          ENDP

                  Init_all PROC
;;;56     
;;;57     void Init_all(unsigned long addr,unsigned long len)
000044  e92d41f0          PUSH     {r4-r8,lr}
;;;58     {
000048  4606              MOV      r6,r0
00004a  460f              MOV      r7,r1
;;;59          cmd_tbl_t* pCmd;
;;;60          unsigned long i;
;;;61          
;;;62          for(i=0;i<len;)
00004c  2500              MOVS     r5,#0
00004e  e00b              B        |L1.104|
                  |L1.80|
;;;63          {
;;;64              pCmd = (cmd_tbl_t*)(addr+i);
000050  1974              ADDS     r4,r6,r5
;;;65              if(strcmp(pCmd->name, "help") == 0){
000052  a169              ADR      r1,|L1.504|
000054  6820              LDR      r0,[r4,#0]
000056  f7fffffe          BL       strcmp
00005a  b920              CBNZ     r0,|L1.102|
;;;66                   pCmd->cmd(NULL, 0, NULL);
00005c  2200              MOVS     r2,#0
00005e  4611              MOV      r1,r2
000060  4610              MOV      r0,r2
000062  68a3              LDR      r3,[r4,#8]
000064  4798              BLX      r3
                  |L1.102|
;;;67     				 }
;;;68     
;;;69              i+=sizeof(cmd_tbl_t);
000066  3510              ADDS     r5,r5,#0x10
                  |L1.104|
000068  42bd              CMP      r5,r7                 ;62
00006a  d3f1              BCC      |L1.80|
;;;70          }
;;;71     }
00006c  e8bd81f0          POP      {r4-r8,pc}
;;;72     
                          ENDP

                  find_cmd PROC
;;;73     static cmd_tbl_t *find_cmd (const char *cmd)
000070  e92d41f0          PUSH     {r4-r8,lr}
;;;74     {
000074  4606              MOV      r6,r0
;;;75       unsigned long base = (unsigned long)Load$$INIT_SECTION$$Base;
000076  4f3e              LDR      r7,|L1.368|
;;;76       unsigned long len = (unsigned long)Load$$INIT_SECTION$$Length;  
000078  f8df80f8          LDR      r8,|L1.372|
;;;77     	
;;;78     	cmd_tbl_t* pCmd;
;;;79     	unsigned long i;
;;;80     	
;;;81     	for(i=0;i<len;){
00007c  2500              MOVS     r5,#0
00007e  e009              B        |L1.148|
                  |L1.128|
;;;82     		pCmd = (cmd_tbl_t*)(base+i);
000080  197c              ADDS     r4,r7,r5
;;;83     		if(strcmp(pCmd->name, cmd) == 0){
000082  4631              MOV      r1,r6
000084  6820              LDR      r0,[r4,#0]
000086  f7fffffe          BL       strcmp
00008a  b910              CBNZ     r0,|L1.146|
;;;84     			return pCmd;
00008c  4620              MOV      r0,r4
                  |L1.142|
;;;85     		}
;;;86     		
;;;87     		i+=sizeof(cmd_tbl_t);
;;;88     	}
;;;89     	
;;;90     	return NULL;
;;;91     }
00008e  e8bd81f0          POP      {r4-r8,pc}
                  |L1.146|
000092  3510              ADDS     r5,r5,#0x10           ;87
                  |L1.148|
000094  4545              CMP      r5,r8                 ;81
000096  d3f3              BCC      |L1.128|
000098  2000              MOVS     r0,#0                 ;90
00009a  e7f8              B        |L1.142|
;;;92     
                          ENDP

                  cmd_process PROC
;;;93     
;;;94     static cmd_err_t cmd_process(int argc, char * const argv[])
00009c  e92d41f0          PUSH     {r4-r8,lr}
;;;95     {
0000a0  4606              MOV      r6,r0
0000a2  460c              MOV      r4,r1
;;;96     	 cmd_err_t result = CMD_NO_ERROR;
0000a4  2700              MOVS     r7,#0
;;;97        cmd_tbl_t* pCmd;
;;;98     	
;;;99     	 /*first look up command in command table*/
;;;100    	 pCmd = find_cmd(argv[0]);
0000a6  6820              LDR      r0,[r4,#0]
0000a8  f7fffffe          BL       find_cmd
0000ac  4605              MOV      r5,r0
;;;101    	 if(!pCmd){
0000ae  b935              CBNZ     r5,|L1.190|
;;;102    		 SYS_TRACE("\r\nUnknown cmd '%s'\r\n", argv[0]);
0000b0  a053              ADR      r0,|L1.512|
0000b2  6821              LDR      r1,[r4,#0]
0000b4  f7fffffe          BL       s_printf
;;;103    		 return CMD_UNKNOWN;
0000b8  2001              MOVS     r0,#1
                  |L1.186|
;;;104    	 }
;;;105    	 
;;;106    	 /* found - check max args */
;;;107    	 if(pCmd->maxargs < argc){
;;;108    		 SYS_TRACE("Too many argv\r\n");
;;;109    		 return CMD_PARAMETER_ERROR;
;;;110    	 }
;;;111    	 
;;;112    	 pCmd->cmd(pCmd, argc, argv);
;;;113    	 
;;;114    	 return result;
;;;115    }
0000ba  e8bd81f0          POP      {r4-r8,pc}
                  |L1.190|
0000be  6868              LDR      r0,[r5,#4]            ;107
0000c0  42b0              CMP      r0,r6                 ;107
0000c2  da04              BGE      |L1.206|
0000c4  a054              ADR      r0,|L1.536|
0000c6  f7fffffe          BL       s_printf
0000ca  2002              MOVS     r0,#2                 ;109
0000cc  e7f5              B        |L1.186|
                  |L1.206|
0000ce  4622              MOV      r2,r4                 ;112
0000d0  4631              MOV      r1,r6                 ;112
0000d2  4628              MOV      r0,r5                 ;112
0000d4  68ab              LDR      r3,[r5,#8]            ;112
0000d6  4798              BLX      r3                    ;112
0000d8  4638              MOV      r0,r7                 ;114
0000da  e7ee              B        |L1.186|
;;;116    
                          ENDP

                  parse_line PROC
;;;117    
;;;118    static int parse_line(char *line, char *argv[])
0000dc  b570              PUSH     {r4-r6,lr}
;;;119    {
0000de  4604              MOV      r4,r0
0000e0  460e              MOV      r6,r1
;;;120    	 int nargs = 0;
0000e2  2500              MOVS     r5,#0
;;;121    	
;;;122    	 while(nargs < CONFIG_SYS_MAXARGS){
0000e4  e026              B        |L1.308|
                  |L1.230|
;;;123    		  /* skip any white space */
;;;124    		  while(is_blank(*line)){
0000e6  e000              B        |L1.234|
                  |L1.232|
;;;125    				line++;
0000e8  1c64              ADDS     r4,r4,#1
                  |L1.234|
0000ea  7820              LDRB     r0,[r4,#0]            ;124
0000ec  2820              CMP      r0,#0x20              ;124
0000ee  d0fb              BEQ      |L1.232|
0000f0  7820              LDRB     r0,[r4,#0]            ;124
0000f2  2809              CMP      r0,#9                 ;124
0000f4  d0f8              BEQ      |L1.232|
;;;126    			}
;;;127    			/*end of the line, no more args*/
;;;128    			if(*line == '\0'){
0000f6  7820              LDRB     r0,[r4,#0]
0000f8  b920              CBNZ     r0,|L1.260|
;;;129    				argv[nargs] = NULL;
0000fa  2000              MOVS     r0,#0
0000fc  f8460025          STR      r0,[r6,r5,LSL #2]
;;;130    				return nargs;
000100  4628              MOV      r0,r5
                  |L1.258|
;;;131    			}
;;;132    			
;;;133    			argv[nargs++] = line;	/* begin of argument string	*/
;;;134    			
;;;135    			/* find end of string */
;;;136    			while(*line && !is_blank(*line)){
;;;137    				line++;
;;;138    			}
;;;139    			
;;;140    			if(*line == '\0'){
;;;141    				argv[nargs] = NULL;
;;;142    				return nargs;
;;;143    			}
;;;144    			
;;;145    			*line++ = '\0';
;;;146    	 }
;;;147    	 
;;;148    	 SYS_TRACE("** Too many args (max. %d) **\r\n", CONFIG_SYS_MAXARGS);
;;;149    	 
;;;150    	 return nargs;
;;;151    }
000102  bd70              POP      {r4-r6,pc}
                  |L1.260|
000104  4628              MOV      r0,r5                 ;133
000106  1c6d              ADDS     r5,r5,#1              ;133
000108  f8464020          STR      r4,[r6,r0,LSL #2]     ;133
00010c  e000              B        |L1.272|
                  |L1.270|
00010e  1c64              ADDS     r4,r4,#1              ;137
                  |L1.272|
000110  7820              LDRB     r0,[r4,#0]            ;136
000112  b128              CBZ      r0,|L1.288|
000114  7820              LDRB     r0,[r4,#0]            ;136
000116  2820              CMP      r0,#0x20              ;136
000118  d002              BEQ      |L1.288|
00011a  7820              LDRB     r0,[r4,#0]            ;136
00011c  2809              CMP      r0,#9                 ;136
00011e  d1f6              BNE      |L1.270|
                  |L1.288|
000120  7820              LDRB     r0,[r4,#0]            ;140
000122  b920              CBNZ     r0,|L1.302|
000124  2000              MOVS     r0,#0                 ;141
000126  f8460025          STR      r0,[r6,r5,LSL #2]     ;141
00012a  4628              MOV      r0,r5                 ;142
00012c  e7e9              B        |L1.258|
                  |L1.302|
00012e  2000              MOVS     r0,#0                 ;145
000130  f8040b01          STRB     r0,[r4],#1            ;145
                  |L1.308|
000134  2d10              CMP      r5,#0x10              ;122
000136  dbd6              BLT      |L1.230|
000138  2110              MOVS     r1,#0x10              ;148
00013a  a03b              ADR      r0,|L1.552|
00013c  f7fffffe          BL       s_printf
000140  4628              MOV      r0,r5                 ;150
000142  e7de              B        |L1.258|
;;;152    
                          ENDP

                  osal_run_command PROC
;;;153    cmd_err_t osal_run_command(char *cmd)
000144  b570              PUSH     {r4-r6,lr}
;;;154    {
000146  b092              SUB      sp,sp,#0x48
000148  4604              MOV      r4,r0
;;;155    	 char *argv[CONFIG_SYS_MAXARGS + 1];	/* NULL terminated	*/
;;;156    	 int argc;
;;;157    	 cmd_err_t result;
;;;158    	
;;;159    	 if((argc = parse_line(cmd, argv)) == 0){
00014a  a901              ADD      r1,sp,#4
00014c  4620              MOV      r0,r4
00014e  f7fffffe          BL       parse_line
000152  0005              MOVS     r5,r0
000154  d105              BNE      |L1.354|
;;;160    		 SYS_TRACE("no command at all\r\n");
000156  a03c              ADR      r0,|L1.584|
000158  f7fffffe          BL       s_printf
;;;161    		 return CMD_UNKNOWN;
00015c  2001              MOVS     r0,#1
                  |L1.350|
;;;162    	 }
;;;163    	 
;;;164    	 result = cmd_process(argc, argv);
;;;165       
;;;166    	 return result;
;;;167    }
00015e  b012              ADD      sp,sp,#0x48
000160  bd70              POP      {r4-r6,pc}
                  |L1.354|
000162  a901              ADD      r1,sp,#4              ;164
000164  4628              MOV      r0,r5                 ;164
000166  f7fffffe          BL       cmd_process
00016a  4606              MOV      r6,r0                 ;164
00016c  4630              MOV      r0,r6                 ;166
00016e  e7f6              B        |L1.350|
;;;168    
                          ENDP

                  |L1.368|
                          DCD      ||Load$$INIT_SECTION$$Base||
                  |L1.372|
                          DCD      ||Load$$INIT_SECTION$$Length||
                  |L1.376|
000178  0d0a2d2d          DCB      "\r\n-------------CMD List Table------------------\r\n",0
00017c  2d2d2d2d
000180  2d2d2d2d
000184  2d2d2d43
000188  4d44204c
00018c  69737420
000190  5461626c
000194  652d2d2d
000198  2d2d2d2d
00019c  2d2d2d2d
0001a0  2d2d2d2d
0001a4  2d2d2d0d
0001a8  0a00    
0001aa  00                DCB      0
0001ab  00                DCB      0
                  |L1.428|
0001ac  25642e25          DCB      "%d.%s          -%s\r\n",0
0001b0  73202020
0001b4  20202020
0001b8  2020202d
0001bc  25730d0a
0001c0  00      
0001c1  00                DCB      0
0001c2  00                DCB      0
0001c3  00                DCB      0
                  |L1.452|
0001c4  0d0a2d2d          DCB      "\r\n----------------------------------------------\r\n",0
0001c8  2d2d2d2d
0001cc  2d2d2d2d
0001d0  2d2d2d2d
0001d4  2d2d2d2d
0001d8  2d2d2d2d
0001dc  2d2d2d2d
0001e0  2d2d2d2d
0001e4  2d2d2d2d
0001e8  2d2d2d2d
0001ec  2d2d2d2d
0001f0  2d2d2d2d
0001f4  0d0a00  
0001f7  00                DCB      0
                  |L1.504|
0001f8  68656c70          DCB      "help",0
0001fc  00      
0001fd  00                DCB      0
0001fe  00                DCB      0
0001ff  00                DCB      0
                  |L1.512|
000200  0d0a556e          DCB      "\r\nUnknown cmd '%s'\r\n",0
000204  6b6e6f77
000208  6e20636d
00020c  64202725
000210  73270d0a
000214  00      
000215  00                DCB      0
000216  00                DCB      0
000217  00                DCB      0
                  |L1.536|
000218  546f6f20          DCB      "Too many argv\r\n",0
00021c  6d616e79
000220  20617267
000224  760d0a00
                  |L1.552|
000228  2a2a2054          DCB      "** Too many args (max. %d) **\r\n",0
00022c  6f6f206d
000230  616e7920
000234  61726773
000238  20286d61
00023c  782e2025
000240  6429202a
000244  2a0d0a00
                  |L1.584|
000248  6e6f2063          DCB      "no command at all\r\n",0
00024c  6f6d6d61
000250  6e642061
000254  7420616c
000258  6c0d0a00

                          AREA ||.conststrlit||, DATA, READONLY, ALIGN=0

000000  68656c70          DCB      0x68,0x65,0x6c,0x70
000004  006c6973          DCB      0x00,0x6c,0x69,0x73
000008  74206375          DCB      0x74,0x20,0x63,0x75
00000c  7272656e          DCB      0x72,0x72,0x65,0x6e
000010  74207375          DCB      0x74,0x20,0x73,0x75
000014  70706f72          DCB      0x70,0x70,0x6f,0x72
000018  74656420          DCB      0x74,0x65,0x64,0x20
00001c  434d4400          DCB      0x43,0x4d,0x44,0x00

                          AREA INIT_CMD, DATA, READONLY, ALIGN=2

                  __init_cmd_help
                  ||__tagsym$$used||
                          DCD      ||.conststrlit||
                          DCD      0x00000001
                          DCD      ||fn1||
                          DCD      ||.conststrlit||+0x5
